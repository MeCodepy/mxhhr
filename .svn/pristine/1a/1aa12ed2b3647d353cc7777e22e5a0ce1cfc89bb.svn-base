{"version":3,"sources":["gallery/moment/2.0.0/moment-debug.js"],"names":["define","require","exports","module","padToken","func","count","a","leftZeroFill","call","this","ordinalizeToken","lang","ordinal","Language","Moment","config","extend","Duration","duration","data","_data","years","year","y","months","month","M","weeks","week","w","days","day","d","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms","_milliseconds","_days","_months","absRound","b","i","hasOwnProperty","number","Math","ceil","floor","targetLength","output","length","addOrSubtractDurationFromMoment","mom","isAdding","currentDate","_d","setTime","date","min","daysInMonth","isArray","input","Object","prototype","toString","compareArrays","array1","array2","len","lengthDiff","abs","diffs","loadLang","key","values","abbr","languages","set","getLangDefinition","hasModule","moment","fn","_lang","removeFormattingTokens","match","replace","makeFormatFunction","format","array","formattingTokens","formatTokenFunctions","formatMoment","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","test","formatFunctions","getParseRegexForToken","token","parseTokenThreeDigits","parseTokenFourDigits","parseTokenSixDigits","parseTokenOneToThreeDigits","parseTokenWord","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenOneOrTwoDigits","RegExp","addTimeToArrayFromToken","datePartArray","_a","_l","monthsParse","_isValid","_isPm","toLowerCase","Date","parseFloat","_useUTC","parseTimezoneChunker","_tzh","_tzm","dateFromArray","setUTCFullYear","setUTCHours","setFullYear","setHours","makeDateFromStringAndFormat","parsedInput","tokens","_f","string","_i","exec","slice","indexOf","makeDateFromStringAndArray","tempConfig","tempMoment","bestMoment","currentScore","scoreToBeat","pop","isValid","toArray","makeDateFromString","isoRegex","isoTimes","makeDateFromInput","matched","aspNetJsonRegex","undefined","substituteTimeAgo","withoutSuffix","isFuture","relativeTime","round","args","apply","weekOfYear","firstDayOfWeek","firstDayOfWeekOfYear","end","daysToDayOfWeek","add","dayOfYear","makeMoment","preparse","isMoment","makeGetterAndSetter","name","utc","_isUTC","makeDurationGetter","makeDurationAsGetter","factor","VERSION","isoFormat","proxyGettersAndSetters","split","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","ordinalizeTokens","paddedTokens","MMM","monthsShort","MMMM","D","DDD","dd","weekdaysMin","ddd","weekdaysShort","dddd","weekdays","W","isoWeek","YY","YYYY","YYYYY","meridiem","A","H","S","SS","SSS","Z","zone","ZZ","X","unix","DDDD","prop","_monthsShort","monthName","regex","_monthsParse","_weekdays","_weekdaysShort","_weekdaysMin","_longDateFormat","LT","L","LL","LLL","LLLL","toUpperCase","val","isLower","_calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","_relativeTime","future","past","mm","hh","MM","yy","pastFuture","diff","_ordinal","postformat","_week","dow","doy","ret","isDuration","isNumber","version","defaultFormat","_abbr","langData","obj","clone","valueOf","toDate","toJSON","isNaN","getTime","local","inputString","dur","subtract","units","asFloat","that","zoneDiff","startOf","from","time","humanize","fromNow","isLeapYear","isDST","getUTCDay","getDay","endOf","isAfter","isBefore","isSame","getTimezoneOffset","isoWeeks","withSuffix","difference"],"mappings":"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","file":"gallery/moment/2.0.0/moment-debug.js","sourcesContent":["// moment.js\n// version : 2.0.0\n// author : Tim Wood\n// license : MIT\n// momentjs.com\ndefine(\"gallery/moment/2.0.0/moment-debug\", [], function(require, exports, module) {\n    /************************************\n        Constants\n    ************************************/\n    var moment, VERSION = \"2.0.0\", round = Math.round, i, // internal storage for language config files\n    languages = {}, // check for nodeJS\n    hasModule = typeof module !== \"undefined\" && module.exports, // ASP.NET json date format regex\n    aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i, // format tokens\n    formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g, // parsing tokens\n    parseMultipleFormatChunker = /([0-9a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)/gi, // parsing token regexes\n    parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n    parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n    parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n    parseTokenFourDigits = /\\d{1,4}/, // 0 - 9999\n    parseTokenSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n    parseTokenWord = /[0-9]*[a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF]+\\s*?[\\u0600-\\u06FF]+/i, // any word (or two) characters or numbers including two word month in arabic.\n    parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/i, // +00:00 -00:00 +0000 -0000 or Z\n    parseTokenT = /T/i, // T (ISO seperator)\n    parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n    // preliminary iso regex\n    // 0000-00-00 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000\n    isoRegex = /^\\s*\\d{4}-\\d\\d-\\d\\d((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d\\d?\\d?)?)?)?)?([\\+\\-]\\d\\d:?\\d\\d)?)?/, isoFormat = \"YYYY-MM-DDTHH:mm:ssZ\", // iso time formats and regexes\n    isoTimes = [ [ \"HH:mm:ss.S\", /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d{1,3}/ ], [ \"HH:mm:ss\", /(T| )\\d\\d:\\d\\d:\\d\\d/ ], [ \"HH:mm\", /(T| )\\d\\d:\\d\\d/ ], [ \"HH\", /(T| )\\d\\d/ ] ], // timezone chunker \"+10:00\" > [\"10\", \"00\"] or \"-1530\" > [\"-15\", \"30\"]\n    parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi, // getter and setter names\n    proxyGettersAndSetters = \"Month|Date|Hours|Minutes|Seconds|Milliseconds\".split(\"|\"), unitMillisecondFactors = {\n        Milliseconds: 1,\n        Seconds: 1e3,\n        Minutes: 6e4,\n        Hours: 36e5,\n        Days: 864e5,\n        Months: 2592e6,\n        Years: 31536e6\n    }, // format function strings\n    formatFunctions = {}, // tokens to ordinalize and pad\n    ordinalizeTokens = \"DDD w W M D d\".split(\" \"), paddedTokens = \"M D H h m s w W\".split(\" \"), formatTokenFunctions = {\n        M: function() {\n            return this.month() + 1;\n        },\n        MMM: function(format) {\n            return this.lang().monthsShort(this, format);\n        },\n        MMMM: function(format) {\n            return this.lang().months(this, format);\n        },\n        D: function() {\n            return this.date();\n        },\n        DDD: function() {\n            return this.dayOfYear();\n        },\n        d: function() {\n            return this.day();\n        },\n        dd: function(format) {\n            return this.lang().weekdaysMin(this, format);\n        },\n        ddd: function(format) {\n            return this.lang().weekdaysShort(this, format);\n        },\n        dddd: function(format) {\n            return this.lang().weekdays(this, format);\n        },\n        w: function() {\n            return this.week();\n        },\n        W: function() {\n            return this.isoWeek();\n        },\n        YY: function() {\n            return leftZeroFill(this.year() % 100, 2);\n        },\n        YYYY: function() {\n            return leftZeroFill(this.year(), 4);\n        },\n        YYYYY: function() {\n            return leftZeroFill(this.year(), 5);\n        },\n        a: function() {\n            return this.lang().meridiem(this.hours(), this.minutes(), true);\n        },\n        A: function() {\n            return this.lang().meridiem(this.hours(), this.minutes(), false);\n        },\n        H: function() {\n            return this.hours();\n        },\n        h: function() {\n            return this.hours() % 12 || 12;\n        },\n        m: function() {\n            return this.minutes();\n        },\n        s: function() {\n            return this.seconds();\n        },\n        S: function() {\n            return ~~(this.milliseconds() / 100);\n        },\n        SS: function() {\n            return leftZeroFill(~~(this.milliseconds() / 10), 2);\n        },\n        SSS: function() {\n            return leftZeroFill(this.milliseconds(), 3);\n        },\n        Z: function() {\n            var a = -this.zone(), b = \"+\";\n            if (a < 0) {\n                a = -a;\n                b = \"-\";\n            }\n            return b + leftZeroFill(~~(a / 60), 2) + \":\" + leftZeroFill(~~a % 60, 2);\n        },\n        ZZ: function() {\n            var a = -this.zone(), b = \"+\";\n            if (a < 0) {\n                a = -a;\n                b = \"-\";\n            }\n            return b + leftZeroFill(~~(10 * a / 6), 4);\n        },\n        X: function() {\n            return this.unix();\n        }\n    };\n    function padToken(func, count) {\n        return function(a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func) {\n        return function(a) {\n            return this.lang().ordinal(func.call(this, a));\n        };\n    }\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + \"o\"] = ordinalizeToken(formatTokenFunctions[i]);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n    /************************************\n        Constructors\n    ************************************/\n    function Language() {}\n    // Moment prototype object\n    function Moment(config) {\n        extend(this, config);\n    }\n    // Duration Constructor\n    function Duration(duration) {\n        var data = this._data = {}, years = duration.years || duration.year || duration.y || 0, months = duration.months || duration.month || duration.M || 0, weeks = duration.weeks || duration.week || duration.w || 0, days = duration.days || duration.day || duration.d || 0, hours = duration.hours || duration.hour || duration.h || 0, minutes = duration.minutes || duration.minute || duration.m || 0, seconds = duration.seconds || duration.second || duration.s || 0, milliseconds = duration.milliseconds || duration.millisecond || duration.ms || 0;\n        // representation for dateAddRemove\n        this._milliseconds = milliseconds + seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 36e5;\n        // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = days + weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = months + years * 12;\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1e3;\n        seconds += absRound(milliseconds / 1e3);\n        data.seconds = seconds % 60;\n        minutes += absRound(seconds / 60);\n        data.minutes = minutes % 60;\n        hours += absRound(minutes / 60);\n        data.hours = hours % 24;\n        days += absRound(hours / 24);\n        days += weeks * 7;\n        data.days = days % 30;\n        months += absRound(days / 30);\n        data.months = months % 12;\n        years += absRound(months / 12);\n        data.years = years;\n    }\n    /************************************\n        Helpers\n    ************************************/\n    function extend(a, b) {\n        for (var i in b) {\n            if (b.hasOwnProperty(i)) {\n                a[i] = b[i];\n            }\n        }\n        return a;\n    }\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength) {\n        var output = number + \"\";\n        while (output.length < targetLength) {\n            output = \"0\" + output;\n        }\n        return output;\n    }\n    // helper function for _.addTime and _.subtractTime\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding) {\n        var ms = duration._milliseconds, d = duration._days, M = duration._months, currentDate;\n        if (ms) {\n            mom._d.setTime(+mom + ms * isAdding);\n        }\n        if (d) {\n            mom.date(mom.date() + d * isAdding);\n        }\n        if (M) {\n            currentDate = mom.date();\n            mom.date(1).month(mom.month() + M * isAdding).date(Math.min(currentDate, mom.daysInMonth()));\n        }\n    }\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === \"[object Array]\";\n    }\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2) {\n        var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;\n        for (i = 0; i < len; i++) {\n            if (~~array1[i] !== ~~array2[i]) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n    /************************************\n        Languages\n    ************************************/\n    Language.prototype = {\n        set: function(config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === \"function\") {\n                    this[i] = prop;\n                } else {\n                    this[\"_\" + i] = prop;\n                }\n            }\n        },\n        _months: \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n        months: function(m) {\n            return this._months[m.month()];\n        },\n        _monthsShort: \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n        monthsShort: function(m) {\n            return this._monthsShort[m.month()];\n        },\n        monthsParse: function(monthName) {\n            var i, mom, regex, output;\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n            }\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                if (!this._monthsParse[i]) {\n                    mom = moment([ 2e3, i ]);\n                    regex = \"^\" + this.months(mom, \"\") + \"|^\" + this.monthsShort(mom, \"\");\n                    this._monthsParse[i] = new RegExp(regex.replace(\".\", \"\"), \"i\");\n                }\n                // test the regex\n                if (this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n        _weekdays: \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n        weekdays: function(m) {\n            return this._weekdays[m.day()];\n        },\n        _weekdaysShort: \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n        weekdaysShort: function(m) {\n            return this._weekdaysShort[m.day()];\n        },\n        _weekdaysMin: \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n        weekdaysMin: function(m) {\n            return this._weekdaysMin[m.day()];\n        },\n        _longDateFormat: {\n            LT: \"h:mm A\",\n            L: \"MM/DD/YYYY\",\n            LL: \"MMMM D YYYY\",\n            LLL: \"MMMM D YYYY LT\",\n            LLLL: \"dddd, MMMM D YYYY LT\"\n        },\n        longDateFormat: function(key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n        meridiem: function(hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? \"pm\" : \"PM\";\n            } else {\n                return isLower ? \"am\" : \"AM\";\n            }\n        },\n        _calendar: {\n            sameDay: \"[Today at] LT\",\n            nextDay: \"[Tomorrow at] LT\",\n            nextWeek: \"dddd [at] LT\",\n            lastDay: \"[Yesterday at] LT\",\n            lastWeek: \"[last] dddd [at] LT\",\n            sameElse: \"L\"\n        },\n        calendar: function(key, mom) {\n            var output = this._calendar[key];\n            return typeof output === \"function\" ? output.apply(mom) : output;\n        },\n        _relativeTime: {\n            future: \"in %s\",\n            past: \"%s ago\",\n            s: \"a few seconds\",\n            m: \"a minute\",\n            mm: \"%d minutes\",\n            h: \"an hour\",\n            hh: \"%d hours\",\n            d: \"a day\",\n            dd: \"%d days\",\n            M: \"a month\",\n            MM: \"%d months\",\n            y: \"a year\",\n            yy: \"%d years\"\n        },\n        relativeTime: function(number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return typeof output === \"function\" ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n        },\n        pastFuture: function(diff, output) {\n            var format = this._relativeTime[diff > 0 ? \"future\" : \"past\"];\n            return typeof format === \"function\" ? format(output) : format.replace(/%s/i, output);\n        },\n        ordinal: function(number) {\n            return this._ordinal.replace(\"%d\", number);\n        },\n        _ordinal: \"%d\",\n        preparse: function(string) {\n            return string;\n        },\n        postformat: function(string) {\n            return string;\n        },\n        week: function(mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy);\n        },\n        _week: {\n            dow: 0,\n            // Sunday is the first day of the week.\n            doy: 6\n        }\n    };\n    // Loads a language definition into the `languages` cache.  The function\n    // takes a key and optionally values.  If not in the browser and no values\n    // are provided, it will load the language file module.  As a convenience,\n    // this function also returns the language values.\n    function loadLang(key, values) {\n        values.abbr = key;\n        if (!languages[key]) {\n            languages[key] = new Language();\n        }\n        languages[key].set(values);\n        return languages[key];\n    }\n    // Determines which language definition to use and returns it.\n    //\n    // With no parameters, it will return the global language.  If you\n    // pass in a language key, such as 'en', it will return the\n    // definition for 'en', so long as 'en' has already been loaded using\n    // moment.lang.\n    function getLangDefinition(key) {\n        if (!key) {\n            return moment.fn._lang;\n        }\n        if (!languages[key] && hasModule) {\n            require(\"./lang/\" + key);\n        }\n        return languages[key];\n    }\n    /************************************\n        Formatting\n    ************************************/\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[.*\\]/)) {\n            return input.replace(/^\\[|\\]$/g, \"\");\n        }\n        return input.replace(/\\\\/g, \"\");\n    }\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n        return function(mom) {\n            var output = \"\";\n            for (i = 0; i < length; i++) {\n                output += typeof array[i].call === \"function\" ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n    // format date using native date object\n    function formatMoment(m, format) {\n        var i = 5;\n        function replaceLongDateFormatTokens(input) {\n            return m.lang().longDateFormat(input) || input;\n        }\n        while (i-- && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        }\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n        return formatFunctions[format](m);\n    }\n    /************************************\n        Parsing\n    ************************************/\n    // get the regex to find the next token\n    function getParseRegexForToken(token) {\n        switch (token) {\n          case \"DDDD\":\n            return parseTokenThreeDigits;\n\n          case \"YYYY\":\n            return parseTokenFourDigits;\n\n          case \"YYYYY\":\n            return parseTokenSixDigits;\n\n          case \"S\":\n          case \"SS\":\n          case \"SSS\":\n          case \"DDD\":\n            return parseTokenOneToThreeDigits;\n\n          case \"MMM\":\n          case \"MMMM\":\n          case \"dd\":\n          case \"ddd\":\n          case \"dddd\":\n          case \"a\":\n          case \"A\":\n            return parseTokenWord;\n\n          case \"X\":\n            return parseTokenTimestampMs;\n\n          case \"Z\":\n          case \"ZZ\":\n            return parseTokenTimezone;\n\n          case \"T\":\n            return parseTokenT;\n\n          case \"MM\":\n          case \"DD\":\n          case \"YY\":\n          case \"HH\":\n          case \"hh\":\n          case \"mm\":\n          case \"ss\":\n          case \"M\":\n          case \"D\":\n          case \"d\":\n          case \"H\":\n          case \"h\":\n          case \"m\":\n          case \"s\":\n            return parseTokenOneOrTwoDigits;\n\n          default:\n            return new RegExp(token.replace(\"\\\\\", \"\"));\n        }\n    }\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, b, datePartArray = config._a;\n        switch (token) {\n          // MONTH\n            case \"M\":\n          // fall through to MM\n            case \"MM\":\n            datePartArray[1] = input == null ? 0 : ~~input - 1;\n            break;\n\n          case \"MMM\":\n          // fall through to MMMM\n            case \"MMMM\":\n            a = getLangDefinition(config._l).monthsParse(input);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[1] = a;\n            } else {\n                config._isValid = false;\n            }\n            break;\n\n          // DAY OF MONTH\n            case \"D\":\n          // fall through to DDDD\n            case \"DD\":\n          // fall through to DDDD\n            case \"DDD\":\n          // fall through to DDDD\n            case \"DDDD\":\n            if (input != null) {\n                datePartArray[2] = ~~input;\n            }\n            break;\n\n          // YEAR\n            case \"YY\":\n            datePartArray[0] = ~~input + (~~input > 68 ? 1900 : 2e3);\n            break;\n\n          case \"YYYY\":\n          case \"YYYYY\":\n            datePartArray[0] = ~~input;\n            break;\n\n          // AM / PM\n            case \"a\":\n          // fall through to A\n            case \"A\":\n            config._isPm = (input + \"\").toLowerCase() === \"pm\";\n            break;\n\n          // 24 HOUR\n            case \"H\":\n          // fall through to hh\n            case \"HH\":\n          // fall through to hh\n            case \"h\":\n          // fall through to hh\n            case \"hh\":\n            datePartArray[3] = ~~input;\n            break;\n\n          // MINUTE\n            case \"m\":\n          // fall through to mm\n            case \"mm\":\n            datePartArray[4] = ~~input;\n            break;\n\n          // SECOND\n            case \"s\":\n          // fall through to ss\n            case \"ss\":\n            datePartArray[5] = ~~input;\n            break;\n\n          // MILLISECOND\n            case \"S\":\n          case \"SS\":\n          case \"SSS\":\n            datePartArray[6] = ~~((\"0.\" + input) * 1e3);\n            break;\n\n          // UNIX TIMESTAMP WITH MS\n            case \"X\":\n            config._d = new Date(parseFloat(input) * 1e3);\n            break;\n\n          // TIMEZONE\n            case \"Z\":\n          // fall through to ZZ\n            case \"ZZ\":\n            config._useUTC = true;\n            a = (input + \"\").match(parseTimezoneChunker);\n            if (a && a[1]) {\n                config._tzh = ~~a[1];\n            }\n            if (a && a[2]) {\n                config._tzm = ~~a[2];\n            }\n            // reverse offsets\n            if (a && a[0] === \"+\") {\n                config._tzh = -config._tzh;\n                config._tzm = -config._tzm;\n            }\n            break;\n        }\n        // if the input is null, the date is not valid\n        if (input == null) {\n            config._isValid = false;\n        }\n    }\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromArray(config) {\n        var i, date, input = [];\n        if (config._d) {\n            return;\n        }\n        for (i = 0; i < 7; i++) {\n            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n        }\n        // add the offsets to the time to be parsed so that we can have a clean array for checking isValid\n        input[3] += config._tzh || 0;\n        input[4] += config._tzm || 0;\n        date = new Date(0);\n        if (config._useUTC) {\n            date.setUTCFullYear(input[0], input[1], input[2]);\n            date.setUTCHours(input[3], input[4], input[5], input[6]);\n        } else {\n            date.setFullYear(input[0], input[1], input[2]);\n            date.setHours(input[3], input[4], input[5], input[6]);\n        }\n        config._d = date;\n    }\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var tokens = config._f.match(formattingTokens), string = config._i, i, parsedInput;\n        config._a = [];\n        for (i = 0; i < tokens.length; i++) {\n            parsedInput = (getParseRegexForToken(tokens[i]).exec(string) || [])[0];\n            if (parsedInput) {\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            }\n            // don't parse if its not a known token\n            if (formatTokenFunctions[tokens[i]]) {\n                addTimeToArrayFromToken(tokens[i], parsedInput, config);\n            }\n        }\n        // handle am pm\n        if (config._isPm && config._a[3] < 12) {\n            config._a[3] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[3] === 12) {\n            config._a[3] = 0;\n        }\n        // return\n        dateFromArray(config);\n    }\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig, tempMoment, bestMoment, scoreToBeat = 99, i, currentDate, currentScore;\n        while (config._f.length) {\n            tempConfig = extend({}, config);\n            tempConfig._f = config._f.pop();\n            makeDateFromStringAndFormat(tempConfig);\n            tempMoment = new Moment(tempConfig);\n            if (tempMoment.isValid()) {\n                bestMoment = tempMoment;\n                break;\n            }\n            currentScore = compareArrays(tempConfig._a, tempMoment.toArray());\n            if (currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempMoment;\n            }\n        }\n        extend(config, bestMoment);\n    }\n    // date from iso format\n    function makeDateFromString(config) {\n        var i, string = config._i;\n        if (isoRegex.exec(string)) {\n            config._f = \"YYYY-MM-DDT\";\n            for (i = 0; i < 4; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (parseTokenTimezone.exec(string)) {\n                config._f += \" Z\";\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._d = new Date(string);\n        }\n    }\n    function makeDateFromInput(config) {\n        var input = config._i, matched = aspNetJsonRegex.exec(input);\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (matched) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === \"string\") {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = input.slice(0);\n            dateFromArray(config);\n        } else {\n            config._d = input instanceof Date ? new Date(+input) : new Date(input);\n        }\n    }\n    /************************************\n        Relative Time\n    ************************************/\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {\n        return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n    function relativeTime(milliseconds, withoutSuffix, lang) {\n        var seconds = round(Math.abs(milliseconds) / 1e3), minutes = round(seconds / 60), hours = round(minutes / 60), days = round(hours / 24), years = round(days / 365), args = seconds < 45 && [ \"s\", seconds ] || minutes === 1 && [ \"m\" ] || minutes < 45 && [ \"mm\", minutes ] || hours === 1 && [ \"h\" ] || hours < 22 && [ \"hh\", hours ] || days === 1 && [ \"d\" ] || days <= 25 && [ \"dd\", days ] || days <= 45 && [ \"M\" ] || days < 345 && [ \"MM\", round(days / 30) ] || years === 1 && [ \"y\" ] || [ \"yy\", years ];\n        args[2] = withoutSuffix;\n        args[3] = milliseconds > 0;\n        args[4] = lang;\n        return substituteTimeAgo.apply({}, args);\n    }\n    /************************************\n        Week of Year\n    ************************************/\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek, daysToDayOfWeek = firstDayOfWeekOfYear - mom.day();\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n        return Math.ceil(moment(mom).add(\"d\", daysToDayOfWeek).dayOfYear() / 7);\n    }\n    /************************************\n        Top Level Functions\n    ************************************/\n    function makeMoment(config) {\n        var input = config._i, format = config._f;\n        if (input === null || input === \"\") {\n            return null;\n        }\n        if (typeof input === \"string\") {\n            config._i = input = getLangDefinition().preparse(input);\n        }\n        if (moment.isMoment(input)) {\n            config = extend({}, input);\n            config._d = new Date(+input._d);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n        return new Moment(config);\n    }\n    moment = function(input, format, lang) {\n        return makeMoment({\n            _i: input,\n            _f: format,\n            _l: lang,\n            _isUTC: false\n        });\n    };\n    // creating with utc\n    moment.utc = function(input, format, lang) {\n        return makeMoment({\n            _useUTC: true,\n            _isUTC: true,\n            _l: lang,\n            _i: input,\n            _f: format\n        });\n    };\n    // creating with unix timestamp (in seconds)\n    moment.unix = function(input) {\n        return moment(input * 1e3);\n    };\n    // duration\n    moment.duration = function(input, key) {\n        var isDuration = moment.isDuration(input), isNumber = typeof input === \"number\", duration = isDuration ? input._data : isNumber ? {} : input, ret;\n        if (isNumber) {\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        }\n        ret = new Duration(duration);\n        if (isDuration && input.hasOwnProperty(\"_lang\")) {\n            ret._lang = input._lang;\n        }\n        return ret;\n    };\n    // version number\n    moment.version = VERSION;\n    // default format\n    moment.defaultFormat = isoFormat;\n    // This function will load languages and then set the global language.  If\n    // no arguments are passed in, it will simply return the current global\n    // language key.\n    moment.lang = function(key, values) {\n        var i;\n        if (!key) {\n            return moment.fn._lang._abbr;\n        }\n        if (values) {\n            loadLang(key, values);\n        } else if (!languages[key]) {\n            getLangDefinition(key);\n        }\n        moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);\n    };\n    // returns language data\n    moment.langData = function(key) {\n        if (key && key._lang && key._lang._abbr) {\n            key = key._lang._abbr;\n        }\n        return getLangDefinition(key);\n    };\n    // compare moment object\n    moment.isMoment = function(obj) {\n        return obj instanceof Moment;\n    };\n    // for typechecking Duration objects\n    moment.isDuration = function(obj) {\n        return obj instanceof Duration;\n    };\n    /************************************\n        Moment Prototype\n    ************************************/\n    moment.fn = Moment.prototype = {\n        clone: function() {\n            return moment(this);\n        },\n        valueOf: function() {\n            return +this._d;\n        },\n        unix: function() {\n            return Math.floor(+this._d / 1e3);\n        },\n        toString: function() {\n            return this.format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n        },\n        toDate: function() {\n            return this._d;\n        },\n        toJSON: function() {\n            return moment.utc(this).format(\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\");\n        },\n        toArray: function() {\n            var m = this;\n            return [ m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds() ];\n        },\n        isValid: function() {\n            if (this._isValid == null) {\n                if (this._a) {\n                    this._isValid = !compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray());\n                } else {\n                    this._isValid = !isNaN(this._d.getTime());\n                }\n            }\n            return !!this._isValid;\n        },\n        utc: function() {\n            this._isUTC = true;\n            return this;\n        },\n        local: function() {\n            this._isUTC = false;\n            return this;\n        },\n        format: function(inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.lang().postformat(output);\n        },\n        add: function(input, val) {\n            var dur;\n            // switch args to support add('s', 1) and add(1, 's')\n            if (typeof input === \"string\") {\n                dur = moment.duration(+val, input);\n            } else {\n                dur = moment.duration(input, val);\n            }\n            addOrSubtractDurationFromMoment(this, dur, 1);\n            return this;\n        },\n        subtract: function(input, val) {\n            var dur;\n            // switch args to support subtract('s', 1) and subtract(1, 's')\n            if (typeof input === \"string\") {\n                dur = moment.duration(+val, input);\n            } else {\n                dur = moment.duration(input, val);\n            }\n            addOrSubtractDurationFromMoment(this, dur, -1);\n            return this;\n        },\n        diff: function(input, units, asFloat) {\n            var that = this._isUTC ? moment(input).utc() : moment(input).local(), zoneDiff = (this.zone() - that.zone()) * 6e4, diff, output;\n            if (units) {\n                // standardize on singular form\n                units = units.replace(/s$/, \"\");\n            }\n            if (units === \"year\" || units === \"month\") {\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5;\n                // 24 * 60 * 60 * 1000 / 2\n                output = (this.year() - that.year()) * 12 + (this.month() - that.month());\n                output += (this - moment(this).startOf(\"month\") - (that - moment(that).startOf(\"month\"))) / diff;\n                if (units === \"year\") {\n                    output = output / 12;\n                }\n            } else {\n                diff = this - that - zoneDiff;\n                output = units === \"second\" ? diff / 1e3 : // 1000\n                units === \"minute\" ? diff / 6e4 : // 1000 * 60\n                units === \"hour\" ? diff / 36e5 : // 1000 * 60 * 60\n                units === \"day\" ? diff / 864e5 : // 1000 * 60 * 60 * 24\n                units === \"week\" ? diff / 6048e5 : // 1000 * 60 * 60 * 24 * 7\n                diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n        from: function(time, withoutSuffix) {\n            return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);\n        },\n        fromNow: function(withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n        calendar: function() {\n            var diff = this.diff(moment().startOf(\"day\"), \"days\", true), format = diff < -6 ? \"sameElse\" : diff < -1 ? \"lastWeek\" : diff < 0 ? \"lastDay\" : diff < 1 ? \"sameDay\" : diff < 2 ? \"nextDay\" : diff < 7 ? \"nextWeek\" : \"sameElse\";\n            return this.format(this.lang().calendar(format, this));\n        },\n        isLeapYear: function() {\n            var year = this.year();\n            return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n        },\n        isDST: function() {\n            return this.zone() < moment([ this.year() ]).zone() || this.zone() < moment([ this.year(), 5 ]).zone();\n        },\n        day: function(input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            return input == null ? day : this.add({\n                d: input - day\n            });\n        },\n        startOf: function(units) {\n            units = units.replace(/s$/, \"\");\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n              case \"year\":\n                this.month(0);\n\n              /* falls through */\n                case \"month\":\n                this.date(1);\n\n              /* falls through */\n                case \"week\":\n              case \"day\":\n                this.hours(0);\n\n              /* falls through */\n                case \"hour\":\n                this.minutes(0);\n\n              /* falls through */\n                case \"minute\":\n                this.seconds(0);\n\n              /* falls through */\n                case \"second\":\n                this.milliseconds(0);\n            }\n            // weeks are a special case\n            if (units === \"week\") {\n                this.day(0);\n            }\n            return this;\n        },\n        endOf: function(units) {\n            return this.startOf(units).add(units.replace(/s?$/, \"s\"), 1).subtract(\"ms\", 1);\n        },\n        isAfter: function(input, units) {\n            units = typeof units !== \"undefined\" ? units : \"millisecond\";\n            return +this.clone().startOf(units) > +moment(input).startOf(units);\n        },\n        isBefore: function(input, units) {\n            units = typeof units !== \"undefined\" ? units : \"millisecond\";\n            return +this.clone().startOf(units) < +moment(input).startOf(units);\n        },\n        isSame: function(input, units) {\n            units = typeof units !== \"undefined\" ? units : \"millisecond\";\n            return +this.clone().startOf(units) === +moment(input).startOf(units);\n        },\n        zone: function() {\n            return this._isUTC ? 0 : this._d.getTimezoneOffset();\n        },\n        daysInMonth: function() {\n            return moment.utc([ this.year(), this.month() + 1, 0 ]).date();\n        },\n        dayOfYear: function(input) {\n            var dayOfYear = round((moment(this).startOf(\"day\") - moment(this).startOf(\"year\")) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add(\"d\", input - dayOfYear);\n        },\n        isoWeek: function(input) {\n            var week = weekOfYear(this, 1, 4);\n            return input == null ? week : this.add(\"d\", (input - week) * 7);\n        },\n        week: function(input) {\n            var week = this.lang().week(this);\n            return input == null ? week : this.add(\"d\", (input - week) * 7);\n        },\n        // If passed a language key, it will set the language for this\n        // instance.  Otherwise, it will return the language configuration\n        // variables for this instance.\n        lang: function(key) {\n            if (key === undefined) {\n                return this._lang;\n            } else {\n                this._lang = getLangDefinition(key);\n                return this;\n            }\n        }\n    };\n    // helper for adding shortcuts\n    function makeGetterAndSetter(name, key) {\n        moment.fn[name] = moment.fn[name + \"s\"] = function(input) {\n            var utc = this._isUTC ? \"UTC\" : \"\";\n            if (input != null) {\n                this._d[\"set\" + utc + key](input);\n                return this;\n            } else {\n                return this._d[\"get\" + utc + key]();\n            }\n        };\n    }\n    // loop through and add shortcuts (Month, Date, Hours, Minutes, Seconds, Milliseconds)\n    for (i = 0; i < proxyGettersAndSetters.length; i++) {\n        makeGetterAndSetter(proxyGettersAndSetters[i].toLowerCase().replace(/s$/, \"\"), proxyGettersAndSetters[i]);\n    }\n    // add shortcut for year (uses different syntax than the getter/setter 'year' == 'FullYear')\n    makeGetterAndSetter(\"year\", \"FullYear\");\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    /************************************\n        Duration Prototype\n    ************************************/\n    moment.duration.fn = Duration.prototype = {\n        weeks: function() {\n            return absRound(this.days() / 7);\n        },\n        valueOf: function() {\n            return this._milliseconds + this._days * 864e5 + this._months * 2592e6;\n        },\n        humanize: function(withSuffix) {\n            var difference = +this, output = relativeTime(difference, !withSuffix, this.lang());\n            if (withSuffix) {\n                output = this.lang().pastFuture(difference, output);\n            }\n            return this.lang().postformat(output);\n        },\n        lang: moment.fn.lang\n    };\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function() {\n            return this._data[name];\n        };\n    }\n    function makeDurationAsGetter(name, factor) {\n        moment.duration.fn[\"as\" + name] = function() {\n            return +this / factor;\n        };\n    }\n    for (i in unitMillisecondFactors) {\n        if (unitMillisecondFactors.hasOwnProperty(i)) {\n            makeDurationAsGetter(i, unitMillisecondFactors[i]);\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n    makeDurationAsGetter(\"Weeks\", 6048e5);\n    /************************************\n        Default Lang\n    ************************************/\n    // Set default language, other languages will inherit from English.\n    moment.lang(\"en\", {\n        ordinal: function(number) {\n            var b = number % 10, output = ~~(number % 100 / 10) === 1 ? \"th\" : b === 1 ? \"st\" : b === 2 ? \"nd\" : b === 3 ? \"rd\" : \"th\";\n            return number + output;\n        }\n    });\n    /************************************\n        Exposing Moment\n    ************************************/\n    // CommonJS module is defined\n    module.exports = moment;\n});\n"],"sourceRoot":"/source/"}