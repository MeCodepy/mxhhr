{"version":3,"sources":["gallery/handlebars/1.0.2/handlebars-debug.js"],"names":["define","require","exports","module","Handlebars","undefined","VERSION","COMPILER_REVISION","REVISION_CHANGES",1,2,3,"helpers","partials","toString","Object","prototype","functionType","objectType","registerHelper","name","fn","inverse","call","Exception","Utils","extend","this","not","registerPartial","str","arg","arguments","length","Error","context","options","type","each","K","createFrame","create","object","obj","logger","DEBUG","INFO","WARN","ERROR","level","methodMap","log","method","console","data","i","ret","Array","j","index","key","hasOwnProperty","isEmpty","parseInt","handlebars","Parser","yy","parser","trace","symbols_","error","root","program","EOF","simpleInverse","statements","statement","openInverse","closeBlock","openBlock","mustache","partial","CONTENT","COMMENT","OPEN_BLOCK","inMustache","CLOSE","OPEN_INVERSE","OPEN_ENDBLOCK","path","OPEN","OPEN_UNESCAPED","OPEN_PARTIAL","partialName","params","hash","DATA","param","STRING","INTEGER","BOOLEAN","hashSegments","hashSegment","ID","EQUALS","PARTIAL_NAME","pathSegments","SEP","$accept","$end","terminals_",5,14,15,16,18,19,20,22,23,24,28,30,31,32,35,36,37,39,"productions_","performAction","yytext","yyleng","yylineno","yystate","$$","$0","$","ProgramNode","push","BlockNode","ContentNode","CommentNode","MustacheNode","PartialNode","concat","DataNode","StringNode","IntegerNode","BooleanNode","HashNode","PartialNameNode","IdNode","table",4,6,7,8,9,11,12,13,17,21,38,25,26,27,29,33,34,10,"defaultActions",57,"parseError","parse","input","lex","token","self","lexer","stack","vstack","lstack","recovering","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","_$","first_line","last_line","first_column","last_column","range","slice","_input","_more","_less","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","less","n","pastInput","past","replace","upcomingInput","next","pre","c","tempMatch","rules","_currentRules","flex","matches","begin","condition","popState","pop","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","mu","inclusive","emu","com","par","INITIAL","constructor","AST","rawParams","unescaped","escaped","id","eligibleHelper","isSimple","isHelper","close","verifyMatch","open","original","isInverse","string","pairs","parts","dig","depth","l","part","isScoped","stringModeValue","integer","Number","bool","comment","errorProps","tmp","apply","idx","SafeString","escape","&","<",">","\"","'","`","badChars","possible","escapeChar","chr","value","escapeExpression","test","Compiler","JavaScriptCompiler","compiler","disassemble","opcode","opcodes","out","args","equals","other","otherOpcode","children","guid","compile","depths","list","knownHelpers","helperMissing","blockHelperMissing","if","unless","with","accept","node","sort","a","b","compileProgram","result","usePartial","addDepth","block","classifyMustache","helperMustache","simpleMustache","ambiguousMustache","pair","val","stringParams","content","noEscape","isBlock","setupFullMustacheParams","knownHelpersOnly","declare","isNaN","isEligible","pushParams","setupMustacheParams","Literal","nameLookup","parent","isValidJavaScriptVariableName","appendToBuffer","environment","initializeBuffer","quotedString","namespace","asObject","isChild","programs","environments","aliases","preamble","stackSlot","stackVars","registers","compileStack","inlineStack","compileChildren","createFunctionContext","nextOpcode","eat","copies","lastContext","source","locals","alias","substring","mergeSource","revision","versions","Function","functionSource","buffer","blockValue","setupParams","replaceStack","current","splice","ambiguousBlockValue","topStack","lastHelper","appendContent","append","flushInline","local","popStack","appendEscaped","getContext","lookupOnContext","pushContext","pushStackLiteral","resolvePossibleLambda","lookup","lookupData","pushStringParam","pushString","emptyHash","register","pushHash","values","types","contexts","popHash","expr","pushLiteral","pushProgram","programExpression","invokeHelper","paramSize","helper","setupHelper","callParams","helperMissingParams","invokeKnownHelper","invokeAmbiguous","helperCall","helperName","nonHelper","nextStack","invokePartial","assignToHash","child","matchExistingProgram","programParams","useRegister","item","pushStack","incrStack","callback","prefix","inline","isInline","top","topStackName","entry","wrapped","missingParams","foundHelper","reservedWords","compilerWords","RESERVED_WORDS","precompile","ast","templateSpec","template","compiled","VM","container","programWrapper","programWithDepth","noop","compilerInfo","compilerRevision","currentRevision","runtimeVersions","compilerVersions"],"mappings":"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","file":"gallery/handlebars/1.0.2/handlebars-debug.js","sourcesContent":["define(\"gallery/handlebars/1.0.2/handlebars-debug\", [], function(require, exports, module) {\n    /*\n\nCopyright (C) 2011 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n    // lib/handlebars/browser-prefix.js\n    var Handlebars = {};\n    (function(Handlebars, undefined) {\n        // lib/handlebars/base.js\n        Handlebars.VERSION = \"1.0.0-rc.4\";\n        Handlebars.COMPILER_REVISION = 3;\n        Handlebars.REVISION_CHANGES = {\n            1: \"<= 1.0.rc.2\",\n            // 1.0.rc.2 is actually rev2 but doesn't report it\n            2: \"== 1.0.0-rc.3\",\n            3: \">= 1.0.0-rc.4\"\n        };\n        Handlebars.helpers = {};\n        Handlebars.partials = {};\n        var toString = Object.prototype.toString, functionType = \"[object Function]\", objectType = \"[object Object]\";\n        Handlebars.registerHelper = function(name, fn, inverse) {\n            if (toString.call(name) === objectType) {\n                if (inverse || fn) {\n                    throw new Handlebars.Exception(\"Arg not supported with multiple helpers\");\n                }\n                Handlebars.Utils.extend(this.helpers, name);\n            } else {\n                if (inverse) {\n                    fn.not = inverse;\n                }\n                this.helpers[name] = fn;\n            }\n        };\n        Handlebars.registerPartial = function(name, str) {\n            if (toString.call(name) === objectType) {\n                Handlebars.Utils.extend(this.partials, name);\n            } else {\n                this.partials[name] = str;\n            }\n        };\n        Handlebars.registerHelper(\"helperMissing\", function(arg) {\n            if (arguments.length === 2) {\n                return undefined;\n            } else {\n                throw new Error(\"Could not find property '\" + arg + \"'\");\n            }\n        });\n        Handlebars.registerHelper(\"blockHelperMissing\", function(context, options) {\n            var inverse = options.inverse || function() {}, fn = options.fn;\n            var type = toString.call(context);\n            if (type === functionType) {\n                context = context.call(this);\n            }\n            if (context === true) {\n                return fn(this);\n            } else if (context === false || context == null) {\n                return inverse(this);\n            } else if (type === \"[object Array]\") {\n                if (context.length > 0) {\n                    return Handlebars.helpers.each(context, options);\n                } else {\n                    return inverse(this);\n                }\n            } else {\n                return fn(context);\n            }\n        });\n        Handlebars.K = function() {};\n        Handlebars.createFrame = Object.create || function(object) {\n            Handlebars.K.prototype = object;\n            var obj = new Handlebars.K();\n            Handlebars.K.prototype = null;\n            return obj;\n        };\n        Handlebars.logger = {\n            DEBUG: 0,\n            INFO: 1,\n            WARN: 2,\n            ERROR: 3,\n            level: 3,\n            methodMap: {\n                0: \"debug\",\n                1: \"info\",\n                2: \"warn\",\n                3: \"error\"\n            },\n            // can be overridden in the host environment\n            log: function(level, obj) {\n                if (Handlebars.logger.level <= level) {\n                    var method = Handlebars.logger.methodMap[level];\n                    if (typeof console !== \"undefined\" && console[method]) {\n                        console[method].call(console, obj);\n                    }\n                }\n            }\n        };\n        Handlebars.log = function(level, obj) {\n            Handlebars.logger.log(level, obj);\n        };\n        Handlebars.registerHelper(\"each\", function(context, options) {\n            var fn = options.fn, inverse = options.inverse;\n            var i = 0, ret = \"\", data;\n            if (options.data) {\n                data = Handlebars.createFrame(options.data);\n            }\n            if (context && typeof context === \"object\") {\n                if (context instanceof Array) {\n                    for (var j = context.length; i < j; i++) {\n                        if (data) {\n                            data.index = i;\n                        }\n                        ret = ret + fn(context[i], {\n                            data: data\n                        });\n                    }\n                } else {\n                    for (var key in context) {\n                        if (context.hasOwnProperty(key)) {\n                            if (data) {\n                                data.key = key;\n                            }\n                            ret = ret + fn(context[key], {\n                                data: data\n                            });\n                            i++;\n                        }\n                    }\n                }\n            }\n            if (i === 0) {\n                ret = inverse(this);\n            }\n            return ret;\n        });\n        Handlebars.registerHelper(\"if\", function(context, options) {\n            var type = toString.call(context);\n            if (type === functionType) {\n                context = context.call(this);\n            }\n            if (!context || Handlebars.Utils.isEmpty(context)) {\n                return options.inverse(this);\n            } else {\n                return options.fn(this);\n            }\n        });\n        Handlebars.registerHelper(\"unless\", function(context, options) {\n            return Handlebars.helpers[\"if\"].call(this, context, {\n                fn: options.inverse,\n                inverse: options.fn\n            });\n        });\n        Handlebars.registerHelper(\"with\", function(context, options) {\n            if (!Handlebars.Utils.isEmpty(context)) return options.fn(context);\n        });\n        Handlebars.registerHelper(\"log\", function(context, options) {\n            var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n            Handlebars.log(level, context);\n        });\n        // lib/handlebars/compiler/parser.js\n        /* Jison generated parser */\n        var handlebars = function() {\n            var parser = {\n                trace: function trace() {},\n                yy: {},\n                symbols_: {\n                    error: 2,\n                    root: 3,\n                    program: 4,\n                    EOF: 5,\n                    simpleInverse: 6,\n                    statements: 7,\n                    statement: 8,\n                    openInverse: 9,\n                    closeBlock: 10,\n                    openBlock: 11,\n                    mustache: 12,\n                    partial: 13,\n                    CONTENT: 14,\n                    COMMENT: 15,\n                    OPEN_BLOCK: 16,\n                    inMustache: 17,\n                    CLOSE: 18,\n                    OPEN_INVERSE: 19,\n                    OPEN_ENDBLOCK: 20,\n                    path: 21,\n                    OPEN: 22,\n                    OPEN_UNESCAPED: 23,\n                    OPEN_PARTIAL: 24,\n                    partialName: 25,\n                    params: 26,\n                    hash: 27,\n                    DATA: 28,\n                    param: 29,\n                    STRING: 30,\n                    INTEGER: 31,\n                    BOOLEAN: 32,\n                    hashSegments: 33,\n                    hashSegment: 34,\n                    ID: 35,\n                    EQUALS: 36,\n                    PARTIAL_NAME: 37,\n                    pathSegments: 38,\n                    SEP: 39,\n                    $accept: 0,\n                    $end: 1\n                },\n                terminals_: {\n                    2: \"error\",\n                    5: \"EOF\",\n                    14: \"CONTENT\",\n                    15: \"COMMENT\",\n                    16: \"OPEN_BLOCK\",\n                    18: \"CLOSE\",\n                    19: \"OPEN_INVERSE\",\n                    20: \"OPEN_ENDBLOCK\",\n                    22: \"OPEN\",\n                    23: \"OPEN_UNESCAPED\",\n                    24: \"OPEN_PARTIAL\",\n                    28: \"DATA\",\n                    30: \"STRING\",\n                    31: \"INTEGER\",\n                    32: \"BOOLEAN\",\n                    35: \"ID\",\n                    36: \"EQUALS\",\n                    37: \"PARTIAL_NAME\",\n                    39: \"SEP\"\n                },\n                productions_: [ 0, [ 3, 2 ], [ 4, 2 ], [ 4, 3 ], [ 4, 2 ], [ 4, 1 ], [ 4, 1 ], [ 4, 0 ], [ 7, 1 ], [ 7, 2 ], [ 8, 3 ], [ 8, 3 ], [ 8, 1 ], [ 8, 1 ], [ 8, 1 ], [ 8, 1 ], [ 11, 3 ], [ 9, 3 ], [ 10, 3 ], [ 12, 3 ], [ 12, 3 ], [ 13, 3 ], [ 13, 4 ], [ 6, 2 ], [ 17, 3 ], [ 17, 2 ], [ 17, 2 ], [ 17, 1 ], [ 17, 1 ], [ 26, 2 ], [ 26, 1 ], [ 29, 1 ], [ 29, 1 ], [ 29, 1 ], [ 29, 1 ], [ 29, 1 ], [ 27, 1 ], [ 33, 2 ], [ 33, 1 ], [ 34, 3 ], [ 34, 3 ], [ 34, 3 ], [ 34, 3 ], [ 34, 3 ], [ 25, 1 ], [ 21, 1 ], [ 38, 3 ], [ 38, 1 ] ],\n                performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n                    var $0 = $$.length - 1;\n                    switch (yystate) {\n                      case 1:\n                        return $$[$0 - 1];\n                        break;\n\n                      case 2:\n                        this.$ = new yy.ProgramNode([], $$[$0]);\n                        break;\n\n                      case 3:\n                        this.$ = new yy.ProgramNode($$[$0 - 2], $$[$0]);\n                        break;\n\n                      case 4:\n                        this.$ = new yy.ProgramNode($$[$0 - 1], []);\n                        break;\n\n                      case 5:\n                        this.$ = new yy.ProgramNode($$[$0]);\n                        break;\n\n                      case 6:\n                        this.$ = new yy.ProgramNode([], []);\n                        break;\n\n                      case 7:\n                        this.$ = new yy.ProgramNode([]);\n                        break;\n\n                      case 8:\n                        this.$ = [ $$[$0] ];\n                        break;\n\n                      case 9:\n                        $$[$0 - 1].push($$[$0]);\n                        this.$ = $$[$0 - 1];\n                        break;\n\n                      case 10:\n                        this.$ = new yy.BlockNode($$[$0 - 2], $$[$0 - 1].inverse, $$[$0 - 1], $$[$0]);\n                        break;\n\n                      case 11:\n                        this.$ = new yy.BlockNode($$[$0 - 2], $$[$0 - 1], $$[$0 - 1].inverse, $$[$0]);\n                        break;\n\n                      case 12:\n                        this.$ = $$[$0];\n                        break;\n\n                      case 13:\n                        this.$ = $$[$0];\n                        break;\n\n                      case 14:\n                        this.$ = new yy.ContentNode($$[$0]);\n                        break;\n\n                      case 15:\n                        this.$ = new yy.CommentNode($$[$0]);\n                        break;\n\n                      case 16:\n                        this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);\n                        break;\n\n                      case 17:\n                        this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);\n                        break;\n\n                      case 18:\n                        this.$ = $$[$0 - 1];\n                        break;\n\n                      case 19:\n                        this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);\n                        break;\n\n                      case 20:\n                        this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1], true);\n                        break;\n\n                      case 21:\n                        this.$ = new yy.PartialNode($$[$0 - 1]);\n                        break;\n\n                      case 22:\n                        this.$ = new yy.PartialNode($$[$0 - 2], $$[$0 - 1]);\n                        break;\n\n                      case 23:\n                        break;\n\n                      case 24:\n                        this.$ = [ [ $$[$0 - 2] ].concat($$[$0 - 1]), $$[$0] ];\n                        break;\n\n                      case 25:\n                        this.$ = [ [ $$[$0 - 1] ].concat($$[$0]), null ];\n                        break;\n\n                      case 26:\n                        this.$ = [ [ $$[$0 - 1] ], $$[$0] ];\n                        break;\n\n                      case 27:\n                        this.$ = [ [ $$[$0] ], null ];\n                        break;\n\n                      case 28:\n                        this.$ = [ [ new yy.DataNode($$[$0]) ], null ];\n                        break;\n\n                      case 29:\n                        $$[$0 - 1].push($$[$0]);\n                        this.$ = $$[$0 - 1];\n                        break;\n\n                      case 30:\n                        this.$ = [ $$[$0] ];\n                        break;\n\n                      case 31:\n                        this.$ = $$[$0];\n                        break;\n\n                      case 32:\n                        this.$ = new yy.StringNode($$[$0]);\n                        break;\n\n                      case 33:\n                        this.$ = new yy.IntegerNode($$[$0]);\n                        break;\n\n                      case 34:\n                        this.$ = new yy.BooleanNode($$[$0]);\n                        break;\n\n                      case 35:\n                        this.$ = new yy.DataNode($$[$0]);\n                        break;\n\n                      case 36:\n                        this.$ = new yy.HashNode($$[$0]);\n                        break;\n\n                      case 37:\n                        $$[$0 - 1].push($$[$0]);\n                        this.$ = $$[$0 - 1];\n                        break;\n\n                      case 38:\n                        this.$ = [ $$[$0] ];\n                        break;\n\n                      case 39:\n                        this.$ = [ $$[$0 - 2], $$[$0] ];\n                        break;\n\n                      case 40:\n                        this.$ = [ $$[$0 - 2], new yy.StringNode($$[$0]) ];\n                        break;\n\n                      case 41:\n                        this.$ = [ $$[$0 - 2], new yy.IntegerNode($$[$0]) ];\n                        break;\n\n                      case 42:\n                        this.$ = [ $$[$0 - 2], new yy.BooleanNode($$[$0]) ];\n                        break;\n\n                      case 43:\n                        this.$ = [ $$[$0 - 2], new yy.DataNode($$[$0]) ];\n                        break;\n\n                      case 44:\n                        this.$ = new yy.PartialNameNode($$[$0]);\n                        break;\n\n                      case 45:\n                        this.$ = new yy.IdNode($$[$0]);\n                        break;\n\n                      case 46:\n                        $$[$0 - 2].push($$[$0]);\n                        this.$ = $$[$0 - 2];\n                        break;\n\n                      case 47:\n                        this.$ = [ $$[$0] ];\n                        break;\n                    }\n                },\n                table: [ {\n                    3: 1,\n                    4: 2,\n                    5: [ 2, 7 ],\n                    6: 3,\n                    7: 4,\n                    8: 6,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 5 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    1: [ 3 ]\n                }, {\n                    5: [ 1, 17 ]\n                }, {\n                    5: [ 2, 6 ],\n                    7: 18,\n                    8: 6,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 19 ],\n                    20: [ 2, 6 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    5: [ 2, 5 ],\n                    6: 20,\n                    8: 21,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 5 ],\n                    20: [ 2, 5 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    17: 23,\n                    18: [ 1, 22 ],\n                    21: 24,\n                    28: [ 1, 25 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    5: [ 2, 8 ],\n                    14: [ 2, 8 ],\n                    15: [ 2, 8 ],\n                    16: [ 2, 8 ],\n                    19: [ 2, 8 ],\n                    20: [ 2, 8 ],\n                    22: [ 2, 8 ],\n                    23: [ 2, 8 ],\n                    24: [ 2, 8 ]\n                }, {\n                    4: 28,\n                    6: 3,\n                    7: 4,\n                    8: 6,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 5 ],\n                    20: [ 2, 7 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    4: 29,\n                    6: 3,\n                    7: 4,\n                    8: 6,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 5 ],\n                    20: [ 2, 7 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    5: [ 2, 12 ],\n                    14: [ 2, 12 ],\n                    15: [ 2, 12 ],\n                    16: [ 2, 12 ],\n                    19: [ 2, 12 ],\n                    20: [ 2, 12 ],\n                    22: [ 2, 12 ],\n                    23: [ 2, 12 ],\n                    24: [ 2, 12 ]\n                }, {\n                    5: [ 2, 13 ],\n                    14: [ 2, 13 ],\n                    15: [ 2, 13 ],\n                    16: [ 2, 13 ],\n                    19: [ 2, 13 ],\n                    20: [ 2, 13 ],\n                    22: [ 2, 13 ],\n                    23: [ 2, 13 ],\n                    24: [ 2, 13 ]\n                }, {\n                    5: [ 2, 14 ],\n                    14: [ 2, 14 ],\n                    15: [ 2, 14 ],\n                    16: [ 2, 14 ],\n                    19: [ 2, 14 ],\n                    20: [ 2, 14 ],\n                    22: [ 2, 14 ],\n                    23: [ 2, 14 ],\n                    24: [ 2, 14 ]\n                }, {\n                    5: [ 2, 15 ],\n                    14: [ 2, 15 ],\n                    15: [ 2, 15 ],\n                    16: [ 2, 15 ],\n                    19: [ 2, 15 ],\n                    20: [ 2, 15 ],\n                    22: [ 2, 15 ],\n                    23: [ 2, 15 ],\n                    24: [ 2, 15 ]\n                }, {\n                    17: 30,\n                    21: 24,\n                    28: [ 1, 25 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    17: 31,\n                    21: 24,\n                    28: [ 1, 25 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    17: 32,\n                    21: 24,\n                    28: [ 1, 25 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    25: 33,\n                    37: [ 1, 34 ]\n                }, {\n                    1: [ 2, 1 ]\n                }, {\n                    5: [ 2, 2 ],\n                    8: 21,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 19 ],\n                    20: [ 2, 2 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    17: 23,\n                    21: 24,\n                    28: [ 1, 25 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    5: [ 2, 4 ],\n                    7: 35,\n                    8: 6,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 19 ],\n                    20: [ 2, 4 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    5: [ 2, 9 ],\n                    14: [ 2, 9 ],\n                    15: [ 2, 9 ],\n                    16: [ 2, 9 ],\n                    19: [ 2, 9 ],\n                    20: [ 2, 9 ],\n                    22: [ 2, 9 ],\n                    23: [ 2, 9 ],\n                    24: [ 2, 9 ]\n                }, {\n                    5: [ 2, 23 ],\n                    14: [ 2, 23 ],\n                    15: [ 2, 23 ],\n                    16: [ 2, 23 ],\n                    19: [ 2, 23 ],\n                    20: [ 2, 23 ],\n                    22: [ 2, 23 ],\n                    23: [ 2, 23 ],\n                    24: [ 2, 23 ]\n                }, {\n                    18: [ 1, 36 ]\n                }, {\n                    18: [ 2, 27 ],\n                    21: 41,\n                    26: 37,\n                    27: 38,\n                    28: [ 1, 45 ],\n                    29: 39,\n                    30: [ 1, 42 ],\n                    31: [ 1, 43 ],\n                    32: [ 1, 44 ],\n                    33: 40,\n                    34: 46,\n                    35: [ 1, 47 ],\n                    38: 26\n                }, {\n                    18: [ 2, 28 ]\n                }, {\n                    18: [ 2, 45 ],\n                    28: [ 2, 45 ],\n                    30: [ 2, 45 ],\n                    31: [ 2, 45 ],\n                    32: [ 2, 45 ],\n                    35: [ 2, 45 ],\n                    39: [ 1, 48 ]\n                }, {\n                    18: [ 2, 47 ],\n                    28: [ 2, 47 ],\n                    30: [ 2, 47 ],\n                    31: [ 2, 47 ],\n                    32: [ 2, 47 ],\n                    35: [ 2, 47 ],\n                    39: [ 2, 47 ]\n                }, {\n                    10: 49,\n                    20: [ 1, 50 ]\n                }, {\n                    10: 51,\n                    20: [ 1, 50 ]\n                }, {\n                    18: [ 1, 52 ]\n                }, {\n                    18: [ 1, 53 ]\n                }, {\n                    18: [ 1, 54 ]\n                }, {\n                    18: [ 1, 55 ],\n                    21: 56,\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    18: [ 2, 44 ],\n                    35: [ 2, 44 ]\n                }, {\n                    5: [ 2, 3 ],\n                    8: 21,\n                    9: 7,\n                    11: 8,\n                    12: 9,\n                    13: 10,\n                    14: [ 1, 11 ],\n                    15: [ 1, 12 ],\n                    16: [ 1, 13 ],\n                    19: [ 1, 19 ],\n                    20: [ 2, 3 ],\n                    22: [ 1, 14 ],\n                    23: [ 1, 15 ],\n                    24: [ 1, 16 ]\n                }, {\n                    14: [ 2, 17 ],\n                    15: [ 2, 17 ],\n                    16: [ 2, 17 ],\n                    19: [ 2, 17 ],\n                    20: [ 2, 17 ],\n                    22: [ 2, 17 ],\n                    23: [ 2, 17 ],\n                    24: [ 2, 17 ]\n                }, {\n                    18: [ 2, 25 ],\n                    21: 41,\n                    27: 57,\n                    28: [ 1, 45 ],\n                    29: 58,\n                    30: [ 1, 42 ],\n                    31: [ 1, 43 ],\n                    32: [ 1, 44 ],\n                    33: 40,\n                    34: 46,\n                    35: [ 1, 47 ],\n                    38: 26\n                }, {\n                    18: [ 2, 26 ]\n                }, {\n                    18: [ 2, 30 ],\n                    28: [ 2, 30 ],\n                    30: [ 2, 30 ],\n                    31: [ 2, 30 ],\n                    32: [ 2, 30 ],\n                    35: [ 2, 30 ]\n                }, {\n                    18: [ 2, 36 ],\n                    34: 59,\n                    35: [ 1, 60 ]\n                }, {\n                    18: [ 2, 31 ],\n                    28: [ 2, 31 ],\n                    30: [ 2, 31 ],\n                    31: [ 2, 31 ],\n                    32: [ 2, 31 ],\n                    35: [ 2, 31 ]\n                }, {\n                    18: [ 2, 32 ],\n                    28: [ 2, 32 ],\n                    30: [ 2, 32 ],\n                    31: [ 2, 32 ],\n                    32: [ 2, 32 ],\n                    35: [ 2, 32 ]\n                }, {\n                    18: [ 2, 33 ],\n                    28: [ 2, 33 ],\n                    30: [ 2, 33 ],\n                    31: [ 2, 33 ],\n                    32: [ 2, 33 ],\n                    35: [ 2, 33 ]\n                }, {\n                    18: [ 2, 34 ],\n                    28: [ 2, 34 ],\n                    30: [ 2, 34 ],\n                    31: [ 2, 34 ],\n                    32: [ 2, 34 ],\n                    35: [ 2, 34 ]\n                }, {\n                    18: [ 2, 35 ],\n                    28: [ 2, 35 ],\n                    30: [ 2, 35 ],\n                    31: [ 2, 35 ],\n                    32: [ 2, 35 ],\n                    35: [ 2, 35 ]\n                }, {\n                    18: [ 2, 38 ],\n                    35: [ 2, 38 ]\n                }, {\n                    18: [ 2, 47 ],\n                    28: [ 2, 47 ],\n                    30: [ 2, 47 ],\n                    31: [ 2, 47 ],\n                    32: [ 2, 47 ],\n                    35: [ 2, 47 ],\n                    36: [ 1, 61 ],\n                    39: [ 2, 47 ]\n                }, {\n                    35: [ 1, 62 ]\n                }, {\n                    5: [ 2, 10 ],\n                    14: [ 2, 10 ],\n                    15: [ 2, 10 ],\n                    16: [ 2, 10 ],\n                    19: [ 2, 10 ],\n                    20: [ 2, 10 ],\n                    22: [ 2, 10 ],\n                    23: [ 2, 10 ],\n                    24: [ 2, 10 ]\n                }, {\n                    21: 63,\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    5: [ 2, 11 ],\n                    14: [ 2, 11 ],\n                    15: [ 2, 11 ],\n                    16: [ 2, 11 ],\n                    19: [ 2, 11 ],\n                    20: [ 2, 11 ],\n                    22: [ 2, 11 ],\n                    23: [ 2, 11 ],\n                    24: [ 2, 11 ]\n                }, {\n                    14: [ 2, 16 ],\n                    15: [ 2, 16 ],\n                    16: [ 2, 16 ],\n                    19: [ 2, 16 ],\n                    20: [ 2, 16 ],\n                    22: [ 2, 16 ],\n                    23: [ 2, 16 ],\n                    24: [ 2, 16 ]\n                }, {\n                    5: [ 2, 19 ],\n                    14: [ 2, 19 ],\n                    15: [ 2, 19 ],\n                    16: [ 2, 19 ],\n                    19: [ 2, 19 ],\n                    20: [ 2, 19 ],\n                    22: [ 2, 19 ],\n                    23: [ 2, 19 ],\n                    24: [ 2, 19 ]\n                }, {\n                    5: [ 2, 20 ],\n                    14: [ 2, 20 ],\n                    15: [ 2, 20 ],\n                    16: [ 2, 20 ],\n                    19: [ 2, 20 ],\n                    20: [ 2, 20 ],\n                    22: [ 2, 20 ],\n                    23: [ 2, 20 ],\n                    24: [ 2, 20 ]\n                }, {\n                    5: [ 2, 21 ],\n                    14: [ 2, 21 ],\n                    15: [ 2, 21 ],\n                    16: [ 2, 21 ],\n                    19: [ 2, 21 ],\n                    20: [ 2, 21 ],\n                    22: [ 2, 21 ],\n                    23: [ 2, 21 ],\n                    24: [ 2, 21 ]\n                }, {\n                    18: [ 1, 64 ]\n                }, {\n                    18: [ 2, 24 ]\n                }, {\n                    18: [ 2, 29 ],\n                    28: [ 2, 29 ],\n                    30: [ 2, 29 ],\n                    31: [ 2, 29 ],\n                    32: [ 2, 29 ],\n                    35: [ 2, 29 ]\n                }, {\n                    18: [ 2, 37 ],\n                    35: [ 2, 37 ]\n                }, {\n                    36: [ 1, 61 ]\n                }, {\n                    21: 65,\n                    28: [ 1, 69 ],\n                    30: [ 1, 66 ],\n                    31: [ 1, 67 ],\n                    32: [ 1, 68 ],\n                    35: [ 1, 27 ],\n                    38: 26\n                }, {\n                    18: [ 2, 46 ],\n                    28: [ 2, 46 ],\n                    30: [ 2, 46 ],\n                    31: [ 2, 46 ],\n                    32: [ 2, 46 ],\n                    35: [ 2, 46 ],\n                    39: [ 2, 46 ]\n                }, {\n                    18: [ 1, 70 ]\n                }, {\n                    5: [ 2, 22 ],\n                    14: [ 2, 22 ],\n                    15: [ 2, 22 ],\n                    16: [ 2, 22 ],\n                    19: [ 2, 22 ],\n                    20: [ 2, 22 ],\n                    22: [ 2, 22 ],\n                    23: [ 2, 22 ],\n                    24: [ 2, 22 ]\n                }, {\n                    18: [ 2, 39 ],\n                    35: [ 2, 39 ]\n                }, {\n                    18: [ 2, 40 ],\n                    35: [ 2, 40 ]\n                }, {\n                    18: [ 2, 41 ],\n                    35: [ 2, 41 ]\n                }, {\n                    18: [ 2, 42 ],\n                    35: [ 2, 42 ]\n                }, {\n                    18: [ 2, 43 ],\n                    35: [ 2, 43 ]\n                }, {\n                    5: [ 2, 18 ],\n                    14: [ 2, 18 ],\n                    15: [ 2, 18 ],\n                    16: [ 2, 18 ],\n                    19: [ 2, 18 ],\n                    20: [ 2, 18 ],\n                    22: [ 2, 18 ],\n                    23: [ 2, 18 ],\n                    24: [ 2, 18 ]\n                } ],\n                defaultActions: {\n                    17: [ 2, 1 ],\n                    25: [ 2, 28 ],\n                    38: [ 2, 26 ],\n                    57: [ 2, 24 ]\n                },\n                parseError: function parseError(str, hash) {\n                    throw new Error(str);\n                },\n                parse: function parse(input) {\n                    var self = this, stack = [ 0 ], vstack = [ null ], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n                    this.lexer.setInput(input);\n                    this.lexer.yy = this.yy;\n                    this.yy.lexer = this.lexer;\n                    this.yy.parser = this;\n                    if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n                    var yyloc = this.lexer.yylloc;\n                    lstack.push(yyloc);\n                    var ranges = this.lexer.options && this.lexer.options.ranges;\n                    if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n                    function popStack(n) {\n                        stack.length = stack.length - 2 * n;\n                        vstack.length = vstack.length - n;\n                        lstack.length = lstack.length - n;\n                    }\n                    function lex() {\n                        var token;\n                        token = self.lexer.lex() || 1;\n                        if (typeof token !== \"number\") {\n                            token = self.symbols_[token] || token;\n                        }\n                        return token;\n                    }\n                    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n                    while (true) {\n                        state = stack[stack.length - 1];\n                        if (this.defaultActions[state]) {\n                            action = this.defaultActions[state];\n                        } else {\n                            if (symbol === null || typeof symbol == \"undefined\") {\n                                symbol = lex();\n                            }\n                            action = table[state] && table[state][symbol];\n                        }\n                        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                            var errStr = \"\";\n                            if (!recovering) {\n                                expected = [];\n                                for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                                    expected.push(\"'\" + this.terminals_[p] + \"'\");\n                                }\n                                if (this.lexer.showPosition) {\n                                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                                } else {\n                                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                                }\n                                this.parseError(errStr, {\n                                    text: this.lexer.match,\n                                    token: this.terminals_[symbol] || symbol,\n                                    line: this.lexer.yylineno,\n                                    loc: yyloc,\n                                    expected: expected\n                                });\n                            }\n                        }\n                        if (action[0] instanceof Array && action.length > 1) {\n                            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                        }\n                        switch (action[0]) {\n                          case 1:\n                            stack.push(symbol);\n                            vstack.push(this.lexer.yytext);\n                            lstack.push(this.lexer.yylloc);\n                            stack.push(action[1]);\n                            symbol = null;\n                            if (!preErrorSymbol) {\n                                yyleng = this.lexer.yyleng;\n                                yytext = this.lexer.yytext;\n                                yylineno = this.lexer.yylineno;\n                                yyloc = this.lexer.yylloc;\n                                if (recovering > 0) recovering--;\n                            } else {\n                                symbol = preErrorSymbol;\n                                preErrorSymbol = null;\n                            }\n                            break;\n\n                          case 2:\n                            len = this.productions_[action[1]][1];\n                            yyval.$ = vstack[vstack.length - len];\n                            yyval._$ = {\n                                first_line: lstack[lstack.length - (len || 1)].first_line,\n                                last_line: lstack[lstack.length - 1].last_line,\n                                first_column: lstack[lstack.length - (len || 1)].first_column,\n                                last_column: lstack[lstack.length - 1].last_column\n                            };\n                            if (ranges) {\n                                yyval._$.range = [ lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1] ];\n                            }\n                            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n                            if (typeof r !== \"undefined\") {\n                                return r;\n                            }\n                            if (len) {\n                                stack = stack.slice(0, -1 * len * 2);\n                                vstack = vstack.slice(0, -1 * len);\n                                lstack = lstack.slice(0, -1 * len);\n                            }\n                            stack.push(this.productions_[action[1]][0]);\n                            vstack.push(yyval.$);\n                            lstack.push(yyval._$);\n                            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                            stack.push(newState);\n                            break;\n\n                          case 3:\n                            return true;\n                        }\n                    }\n                    return true;\n                }\n            };\n            /* Jison generated lexer */\n            var lexer = function() {\n                var lexer = {\n                    EOF: 1,\n                    parseError: function parseError(str, hash) {\n                        if (this.yy.parser) {\n                            this.yy.parser.parseError(str, hash);\n                        } else {\n                            throw new Error(str);\n                        }\n                    },\n                    setInput: function(input) {\n                        this._input = input;\n                        this._more = this._less = this.done = false;\n                        this.yylineno = this.yyleng = 0;\n                        this.yytext = this.matched = this.match = \"\";\n                        this.conditionStack = [ \"INITIAL\" ];\n                        this.yylloc = {\n                            first_line: 1,\n                            first_column: 0,\n                            last_line: 1,\n                            last_column: 0\n                        };\n                        if (this.options.ranges) this.yylloc.range = [ 0, 0 ];\n                        this.offset = 0;\n                        return this;\n                    },\n                    input: function() {\n                        var ch = this._input[0];\n                        this.yytext += ch;\n                        this.yyleng++;\n                        this.offset++;\n                        this.match += ch;\n                        this.matched += ch;\n                        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                        if (lines) {\n                            this.yylineno++;\n                            this.yylloc.last_line++;\n                        } else {\n                            this.yylloc.last_column++;\n                        }\n                        if (this.options.ranges) this.yylloc.range[1]++;\n                        this._input = this._input.slice(1);\n                        return ch;\n                    },\n                    unput: function(ch) {\n                        var len = ch.length;\n                        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n                        this._input = ch + this._input;\n                        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n                        //this.yyleng -= len;\n                        this.offset -= len;\n                        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                        this.match = this.match.substr(0, this.match.length - 1);\n                        this.matched = this.matched.substr(0, this.matched.length - 1);\n                        if (lines.length - 1) this.yylineno -= lines.length - 1;\n                        var r = this.yylloc.range;\n                        this.yylloc = {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.yylineno + 1,\n                            first_column: this.yylloc.first_column,\n                            last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                        };\n                        if (this.options.ranges) {\n                            this.yylloc.range = [ r[0], r[0] + this.yyleng - len ];\n                        }\n                        return this;\n                    },\n                    more: function() {\n                        this._more = true;\n                        return this;\n                    },\n                    less: function(n) {\n                        this.unput(this.match.slice(n));\n                    },\n                    pastInput: function() {\n                        var past = this.matched.substr(0, this.matched.length - this.match.length);\n                        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n                    },\n                    upcomingInput: function() {\n                        var next = this.match;\n                        if (next.length < 20) {\n                            next += this._input.substr(0, 20 - next.length);\n                        }\n                        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n                    },\n                    showPosition: function() {\n                        var pre = this.pastInput();\n                        var c = new Array(pre.length + 1).join(\"-\");\n                        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n                    },\n                    next: function() {\n                        if (this.done) {\n                            return this.EOF;\n                        }\n                        if (!this._input) this.done = true;\n                        var token, match, tempMatch, index, col, lines;\n                        if (!this._more) {\n                            this.yytext = \"\";\n                            this.match = \"\";\n                        }\n                        var rules = this._currentRules();\n                        for (var i = 0; i < rules.length; i++) {\n                            tempMatch = this._input.match(this.rules[rules[i]]);\n                            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                                match = tempMatch;\n                                index = i;\n                                if (!this.options.flex) break;\n                            }\n                        }\n                        if (match) {\n                            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                            if (lines) this.yylineno += lines.length;\n                            this.yylloc = {\n                                first_line: this.yylloc.last_line,\n                                last_line: this.yylineno + 1,\n                                first_column: this.yylloc.last_column,\n                                last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                            };\n                            this.yytext += match[0];\n                            this.match += match[0];\n                            this.matches = match;\n                            this.yyleng = this.yytext.length;\n                            if (this.options.ranges) {\n                                this.yylloc.range = [ this.offset, this.offset += this.yyleng ];\n                            }\n                            this._more = false;\n                            this._input = this._input.slice(match[0].length);\n                            this.matched += match[0];\n                            token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n                            if (this.done && this._input) this.done = false;\n                            if (token) return token; else return;\n                        }\n                        if (this._input === \"\") {\n                            return this.EOF;\n                        } else {\n                            return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n                                text: \"\",\n                                token: null,\n                                line: this.yylineno\n                            });\n                        }\n                    },\n                    lex: function lex() {\n                        var r = this.next();\n                        if (typeof r !== \"undefined\") {\n                            return r;\n                        } else {\n                            return this.lex();\n                        }\n                    },\n                    begin: function begin(condition) {\n                        this.conditionStack.push(condition);\n                    },\n                    popState: function popState() {\n                        return this.conditionStack.pop();\n                    },\n                    _currentRules: function _currentRules() {\n                        return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                    },\n                    topState: function() {\n                        return this.conditionStack[this.conditionStack.length - 2];\n                    },\n                    pushState: function begin(condition) {\n                        this.begin(condition);\n                    }\n                };\n                lexer.options = {};\n                lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                    var YYSTATE = YY_START;\n                    switch ($avoiding_name_collisions) {\n                      case 0:\n                        yy_.yytext = \"\\\\\";\n                        return 14;\n                        break;\n\n                      case 1:\n                        if (yy_.yytext.slice(-1) !== \"\\\\\") this.begin(\"mu\");\n                        if (yy_.yytext.slice(-1) === \"\\\\\") yy_.yytext = yy_.yytext.substr(0, yy_.yyleng - 1), \n                        this.begin(\"emu\");\n                        if (yy_.yytext) return 14;\n                        break;\n\n                      case 2:\n                        return 14;\n                        break;\n\n                      case 3:\n                        if (yy_.yytext.slice(-1) !== \"\\\\\") this.popState();\n                        if (yy_.yytext.slice(-1) === \"\\\\\") yy_.yytext = yy_.yytext.substr(0, yy_.yyleng - 1);\n                        return 14;\n                        break;\n\n                      case 4:\n                        yy_.yytext = yy_.yytext.substr(0, yy_.yyleng - 4);\n                        this.popState();\n                        return 15;\n                        break;\n\n                      case 5:\n                        this.begin(\"par\");\n                        return 24;\n                        break;\n\n                      case 6:\n                        return 16;\n                        break;\n\n                      case 7:\n                        return 20;\n                        break;\n\n                      case 8:\n                        return 19;\n                        break;\n\n                      case 9:\n                        return 19;\n                        break;\n\n                      case 10:\n                        return 23;\n                        break;\n\n                      case 11:\n                        return 23;\n                        break;\n\n                      case 12:\n                        this.popState();\n                        this.begin(\"com\");\n                        break;\n\n                      case 13:\n                        yy_.yytext = yy_.yytext.substr(3, yy_.yyleng - 5);\n                        this.popState();\n                        return 15;\n                        break;\n\n                      case 14:\n                        return 22;\n                        break;\n\n                      case 15:\n                        return 36;\n                        break;\n\n                      case 16:\n                        return 35;\n                        break;\n\n                      case 17:\n                        return 35;\n                        break;\n\n                      case 18:\n                        return 39;\n                        break;\n\n                      case 19:\n                        /*ignore whitespace*/\n                        break;\n\n                      case 20:\n                        this.popState();\n                        return 18;\n                        break;\n\n                      case 21:\n                        this.popState();\n                        return 18;\n                        break;\n\n                      case 22:\n                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2).replace(/\\\\\"/g, '\"');\n                        return 30;\n                        break;\n\n                      case 23:\n                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2).replace(/\\\\'/g, \"'\");\n                        return 30;\n                        break;\n\n                      case 24:\n                        yy_.yytext = yy_.yytext.substr(1);\n                        return 28;\n                        break;\n\n                      case 25:\n                        return 32;\n                        break;\n\n                      case 26:\n                        return 32;\n                        break;\n\n                      case 27:\n                        return 31;\n                        break;\n\n                      case 28:\n                        return 35;\n                        break;\n\n                      case 29:\n                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);\n                        return 35;\n                        break;\n\n                      case 30:\n                        return \"INVALID\";\n                        break;\n\n                      case 31:\n                        /*ignore whitespace*/\n                        break;\n\n                      case 32:\n                        this.popState();\n                        return 37;\n                        break;\n\n                      case 33:\n                        return 5;\n                        break;\n                    }\n                };\n                lexer.rules = [ /^(?:\\\\\\\\(?=(\\{\\{)))/, /^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|$)))/, /^(?:[\\s\\S]*?--\\}\\})/, /^(?:\\{\\{>)/, /^(?:\\{\\{#)/, /^(?:\\{\\{\\/)/, /^(?:\\{\\{\\^)/, /^(?:\\{\\{\\s*else\\b)/, /^(?:\\{\\{\\{)/, /^(?:\\{\\{&)/, /^(?:\\{\\{!--)/, /^(?:\\{\\{![\\s\\S]*?\\}\\})/, /^(?:\\{\\{)/, /^(?:=)/, /^(?:\\.(?=[}/ ]))/, /^(?:\\.\\.)/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}\\}\\})/, /^(?:\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@[a-zA-Z]+)/, /^(?:true(?=[}\\s]))/, /^(?:false(?=[}\\s]))/, /^(?:-?[0-9]+(?=[}\\s]))/, /^(?:[a-zA-Z0-9_$:\\-]+(?=[=}\\s\\/.]))/, /^(?:\\[[^\\]]*\\])/, /^(?:.)/, /^(?:\\s+)/, /^(?:[a-zA-Z0-9_$\\-\\/]+)/, /^(?:$)/ ];\n                lexer.conditions = {\n                    mu: {\n                        rules: [ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33 ],\n                        inclusive: false\n                    },\n                    emu: {\n                        rules: [ 3 ],\n                        inclusive: false\n                    },\n                    com: {\n                        rules: [ 4 ],\n                        inclusive: false\n                    },\n                    par: {\n                        rules: [ 31, 32 ],\n                        inclusive: false\n                    },\n                    INITIAL: {\n                        rules: [ 0, 1, 2, 33 ],\n                        inclusive: true\n                    }\n                };\n                return lexer;\n            }();\n            parser.lexer = lexer;\n            function Parser() {\n                this.yy = {};\n            }\n            Parser.prototype = parser;\n            parser.Parser = Parser;\n            return new Parser();\n        }();\n        // lib/handlebars/compiler/base.js\n        Handlebars.Parser = handlebars;\n        Handlebars.parse = function(input) {\n            // Just return if an already-compile AST was passed in.\n            if (input.constructor === Handlebars.AST.ProgramNode) {\n                return input;\n            }\n            Handlebars.Parser.yy = Handlebars.AST;\n            return Handlebars.Parser.parse(input);\n        };\n        // lib/handlebars/compiler/ast.js\n        Handlebars.AST = {};\n        Handlebars.AST.ProgramNode = function(statements, inverse) {\n            this.type = \"program\";\n            this.statements = statements;\n            if (inverse) {\n                this.inverse = new Handlebars.AST.ProgramNode(inverse);\n            }\n        };\n        Handlebars.AST.MustacheNode = function(rawParams, hash, unescaped) {\n            this.type = \"mustache\";\n            this.escaped = !unescaped;\n            this.hash = hash;\n            var id = this.id = rawParams[0];\n            var params = this.params = rawParams.slice(1);\n            // a mustache is an eligible helper if:\n            // * its id is simple (a single part, not `this` or `..`)\n            var eligibleHelper = this.eligibleHelper = id.isSimple;\n            // a mustache is definitely a helper if:\n            // * it is an eligible helper, and\n            // * it has at least one parameter or hash segment\n            this.isHelper = eligibleHelper && (params.length || hash);\n        };\n        Handlebars.AST.PartialNode = function(partialName, context) {\n            this.type = \"partial\";\n            this.partialName = partialName;\n            this.context = context;\n        };\n        Handlebars.AST.BlockNode = function(mustache, program, inverse, close) {\n            var verifyMatch = function(open, close) {\n                if (open.original !== close.original) {\n                    throw new Handlebars.Exception(open.original + \" doesn't match \" + close.original);\n                }\n            };\n            verifyMatch(mustache.id, close);\n            this.type = \"block\";\n            this.mustache = mustache;\n            this.program = program;\n            this.inverse = inverse;\n            if (this.inverse && !this.program) {\n                this.isInverse = true;\n            }\n        };\n        Handlebars.AST.ContentNode = function(string) {\n            this.type = \"content\";\n            this.string = string;\n        };\n        Handlebars.AST.HashNode = function(pairs) {\n            this.type = \"hash\";\n            this.pairs = pairs;\n        };\n        Handlebars.AST.IdNode = function(parts) {\n            this.type = \"ID\";\n            this.original = parts.join(\".\");\n            var dig = [], depth = 0;\n            for (var i = 0, l = parts.length; i < l; i++) {\n                var part = parts[i];\n                if (part === \"..\" || part === \".\" || part === \"this\") {\n                    if (dig.length > 0) {\n                        throw new Handlebars.Exception(\"Invalid path: \" + this.original);\n                    } else if (part === \"..\") {\n                        depth++;\n                    } else {\n                        this.isScoped = true;\n                    }\n                } else {\n                    dig.push(part);\n                }\n            }\n            this.parts = dig;\n            this.string = dig.join(\".\");\n            this.depth = depth;\n            // an ID is simple if it only has one part, and that part is not\n            // `..` or `this`.\n            this.isSimple = parts.length === 1 && !this.isScoped && depth === 0;\n            this.stringModeValue = this.string;\n        };\n        Handlebars.AST.PartialNameNode = function(name) {\n            this.type = \"PARTIAL_NAME\";\n            this.name = name;\n        };\n        Handlebars.AST.DataNode = function(id) {\n            this.type = \"DATA\";\n            this.id = id;\n        };\n        Handlebars.AST.StringNode = function(string) {\n            this.type = \"STRING\";\n            this.string = string;\n            this.stringModeValue = string;\n        };\n        Handlebars.AST.IntegerNode = function(integer) {\n            this.type = \"INTEGER\";\n            this.integer = integer;\n            this.stringModeValue = Number(integer);\n        };\n        Handlebars.AST.BooleanNode = function(bool) {\n            this.type = \"BOOLEAN\";\n            this.bool = bool;\n            this.stringModeValue = bool === \"true\";\n        };\n        Handlebars.AST.CommentNode = function(comment) {\n            this.type = \"comment\";\n            this.comment = comment;\n        };\n        // lib/handlebars/utils.js\n        var errorProps = [ \"description\", \"fileName\", \"lineNumber\", \"message\", \"name\", \"number\", \"stack\" ];\n        Handlebars.Exception = function(message) {\n            var tmp = Error.prototype.constructor.apply(this, arguments);\n            // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n            for (var idx = 0; idx < errorProps.length; idx++) {\n                this[errorProps[idx]] = tmp[errorProps[idx]];\n            }\n        };\n        Handlebars.Exception.prototype = new Error();\n        // Build out our basic SafeString type\n        Handlebars.SafeString = function(string) {\n            this.string = string;\n        };\n        Handlebars.SafeString.prototype.toString = function() {\n            return this.string.toString();\n        };\n        var escape = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#x27;\",\n            \"`\": \"&#x60;\"\n        };\n        var badChars = /[&<>\"'`]/g;\n        var possible = /[&<>\"'`]/;\n        var escapeChar = function(chr) {\n            return escape[chr] || \"&amp;\";\n        };\n        Handlebars.Utils = {\n            extend: function(obj, value) {\n                for (var key in value) {\n                    if (value.hasOwnProperty(key)) {\n                        obj[key] = value[key];\n                    }\n                }\n            },\n            escapeExpression: function(string) {\n                // don't escape SafeStrings, since they're already safe\n                if (string instanceof Handlebars.SafeString) {\n                    return string.toString();\n                } else if (string == null || string === false) {\n                    return \"\";\n                }\n                // Force a string conversion as this will be done by the append regardless and\n                // the regex test will do this transparently behind the scenes, causing issues if\n                // an object's to string has escaped characters in it.\n                string = string.toString();\n                if (!possible.test(string)) {\n                    return string;\n                }\n                return string.replace(badChars, escapeChar);\n            },\n            isEmpty: function(value) {\n                if (!value && value !== 0) {\n                    return true;\n                } else if (toString.call(value) === \"[object Array]\" && value.length === 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        };\n        // lib/handlebars/compiler/compiler.js\n        /*jshint eqnull:true*/\n        var Compiler = Handlebars.Compiler = function() {};\n        var JavaScriptCompiler = Handlebars.JavaScriptCompiler = function() {};\n        // the foundHelper register will disambiguate helper lookup from finding a\n        // function in a context. This is necessary for mustache compatibility, which\n        // requires that context functions in blocks are evaluated by blockHelperMissing,\n        // and then proceed as if the resulting value was provided to blockHelperMissing.\n        Compiler.prototype = {\n            compiler: Compiler,\n            disassemble: function() {\n                var opcodes = this.opcodes, opcode, out = [], params, param;\n                for (var i = 0, l = opcodes.length; i < l; i++) {\n                    opcode = opcodes[i];\n                    if (opcode.opcode === \"DECLARE\") {\n                        out.push(\"DECLARE \" + opcode.name + \"=\" + opcode.value);\n                    } else {\n                        params = [];\n                        for (var j = 0; j < opcode.args.length; j++) {\n                            param = opcode.args[j];\n                            if (typeof param === \"string\") {\n                                param = '\"' + param.replace(\"\\n\", \"\\\\n\") + '\"';\n                            }\n                            params.push(param);\n                        }\n                        out.push(opcode.opcode + \" \" + params.join(\" \"));\n                    }\n                }\n                return out.join(\"\\n\");\n            },\n            equals: function(other) {\n                var len = this.opcodes.length;\n                if (other.opcodes.length !== len) {\n                    return false;\n                }\n                for (var i = 0; i < len; i++) {\n                    var opcode = this.opcodes[i], otherOpcode = other.opcodes[i];\n                    if (opcode.opcode !== otherOpcode.opcode || opcode.args.length !== otherOpcode.args.length) {\n                        return false;\n                    }\n                    for (var j = 0; j < opcode.args.length; j++) {\n                        if (opcode.args[j] !== otherOpcode.args[j]) {\n                            return false;\n                        }\n                    }\n                }\n                len = this.children.length;\n                if (other.children.length !== len) {\n                    return false;\n                }\n                for (i = 0; i < len; i++) {\n                    if (!this.children[i].equals(other.children[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            guid: 0,\n            compile: function(program, options) {\n                this.children = [];\n                this.depths = {\n                    list: []\n                };\n                this.options = options;\n                // These changes will propagate to the other compiler components\n                var knownHelpers = this.options.knownHelpers;\n                this.options.knownHelpers = {\n                    helperMissing: true,\n                    blockHelperMissing: true,\n                    each: true,\n                    \"if\": true,\n                    unless: true,\n                    \"with\": true,\n                    log: true\n                };\n                if (knownHelpers) {\n                    for (var name in knownHelpers) {\n                        this.options.knownHelpers[name] = knownHelpers[name];\n                    }\n                }\n                return this.program(program);\n            },\n            accept: function(node) {\n                return this[node.type](node);\n            },\n            program: function(program) {\n                var statements = program.statements, statement;\n                this.opcodes = [];\n                for (var i = 0, l = statements.length; i < l; i++) {\n                    statement = statements[i];\n                    this[statement.type](statement);\n                }\n                this.isSimple = l === 1;\n                this.depths.list = this.depths.list.sort(function(a, b) {\n                    return a - b;\n                });\n                return this;\n            },\n            compileProgram: function(program) {\n                var result = new this.compiler().compile(program, this.options);\n                var guid = this.guid++, depth;\n                this.usePartial = this.usePartial || result.usePartial;\n                this.children[guid] = result;\n                for (var i = 0, l = result.depths.list.length; i < l; i++) {\n                    depth = result.depths.list[i];\n                    if (depth < 2) {\n                        continue;\n                    } else {\n                        this.addDepth(depth - 1);\n                    }\n                }\n                return guid;\n            },\n            block: function(block) {\n                var mustache = block.mustache, program = block.program, inverse = block.inverse;\n                if (program) {\n                    program = this.compileProgram(program);\n                }\n                if (inverse) {\n                    inverse = this.compileProgram(inverse);\n                }\n                var type = this.classifyMustache(mustache);\n                if (type === \"helper\") {\n                    this.helperMustache(mustache, program, inverse);\n                } else if (type === \"simple\") {\n                    this.simpleMustache(mustache);\n                    // now that the simple mustache is resolved, we need to\n                    // evaluate it by executing `blockHelperMissing`\n                    this.opcode(\"pushProgram\", program);\n                    this.opcode(\"pushProgram\", inverse);\n                    this.opcode(\"emptyHash\");\n                    this.opcode(\"blockValue\");\n                } else {\n                    this.ambiguousMustache(mustache, program, inverse);\n                    // now that the simple mustache is resolved, we need to\n                    // evaluate it by executing `blockHelperMissing`\n                    this.opcode(\"pushProgram\", program);\n                    this.opcode(\"pushProgram\", inverse);\n                    this.opcode(\"emptyHash\");\n                    this.opcode(\"ambiguousBlockValue\");\n                }\n                this.opcode(\"append\");\n            },\n            hash: function(hash) {\n                var pairs = hash.pairs, pair, val;\n                this.opcode(\"pushHash\");\n                for (var i = 0, l = pairs.length; i < l; i++) {\n                    pair = pairs[i];\n                    val = pair[1];\n                    if (this.options.stringParams) {\n                        if (val.depth) {\n                            this.addDepth(val.depth);\n                        }\n                        this.opcode(\"getContext\", val.depth || 0);\n                        this.opcode(\"pushStringParam\", val.stringModeValue, val.type);\n                    } else {\n                        this.accept(val);\n                    }\n                    this.opcode(\"assignToHash\", pair[0]);\n                }\n                this.opcode(\"popHash\");\n            },\n            partial: function(partial) {\n                var partialName = partial.partialName;\n                this.usePartial = true;\n                if (partial.context) {\n                    this.ID(partial.context);\n                } else {\n                    this.opcode(\"push\", \"depth0\");\n                }\n                this.opcode(\"invokePartial\", partialName.name);\n                this.opcode(\"append\");\n            },\n            content: function(content) {\n                this.opcode(\"appendContent\", content.string);\n            },\n            mustache: function(mustache) {\n                var options = this.options;\n                var type = this.classifyMustache(mustache);\n                if (type === \"simple\") {\n                    this.simpleMustache(mustache);\n                } else if (type === \"helper\") {\n                    this.helperMustache(mustache);\n                } else {\n                    this.ambiguousMustache(mustache);\n                }\n                if (mustache.escaped && !options.noEscape) {\n                    this.opcode(\"appendEscaped\");\n                } else {\n                    this.opcode(\"append\");\n                }\n            },\n            ambiguousMustache: function(mustache, program, inverse) {\n                var id = mustache.id, name = id.parts[0], isBlock = program != null || inverse != null;\n                this.opcode(\"getContext\", id.depth);\n                this.opcode(\"pushProgram\", program);\n                this.opcode(\"pushProgram\", inverse);\n                this.opcode(\"invokeAmbiguous\", name, isBlock);\n            },\n            simpleMustache: function(mustache) {\n                var id = mustache.id;\n                if (id.type === \"DATA\") {\n                    this.DATA(id);\n                } else if (id.parts.length) {\n                    this.ID(id);\n                } else {\n                    // Simplified ID for `this`\n                    this.addDepth(id.depth);\n                    this.opcode(\"getContext\", id.depth);\n                    this.opcode(\"pushContext\");\n                }\n                this.opcode(\"resolvePossibleLambda\");\n            },\n            helperMustache: function(mustache, program, inverse) {\n                var params = this.setupFullMustacheParams(mustache, program, inverse), name = mustache.id.parts[0];\n                if (this.options.knownHelpers[name]) {\n                    this.opcode(\"invokeKnownHelper\", params.length, name);\n                } else if (this.options.knownHelpersOnly) {\n                    throw new Error(\"You specified knownHelpersOnly, but used the unknown helper \" + name);\n                } else {\n                    this.opcode(\"invokeHelper\", params.length, name);\n                }\n            },\n            ID: function(id) {\n                this.addDepth(id.depth);\n                this.opcode(\"getContext\", id.depth);\n                var name = id.parts[0];\n                if (!name) {\n                    this.opcode(\"pushContext\");\n                } else {\n                    this.opcode(\"lookupOnContext\", id.parts[0]);\n                }\n                for (var i = 1, l = id.parts.length; i < l; i++) {\n                    this.opcode(\"lookup\", id.parts[i]);\n                }\n            },\n            DATA: function(data) {\n                this.options.data = true;\n                this.opcode(\"lookupData\", data.id);\n            },\n            STRING: function(string) {\n                this.opcode(\"pushString\", string.string);\n            },\n            INTEGER: function(integer) {\n                this.opcode(\"pushLiteral\", integer.integer);\n            },\n            BOOLEAN: function(bool) {\n                this.opcode(\"pushLiteral\", bool.bool);\n            },\n            comment: function() {},\n            // HELPERS\n            opcode: function(name) {\n                this.opcodes.push({\n                    opcode: name,\n                    args: [].slice.call(arguments, 1)\n                });\n            },\n            declare: function(name, value) {\n                this.opcodes.push({\n                    opcode: \"DECLARE\",\n                    name: name,\n                    value: value\n                });\n            },\n            addDepth: function(depth) {\n                if (isNaN(depth)) {\n                    throw new Error(\"EWOT\");\n                }\n                if (depth === 0) {\n                    return;\n                }\n                if (!this.depths[depth]) {\n                    this.depths[depth] = true;\n                    this.depths.list.push(depth);\n                }\n            },\n            classifyMustache: function(mustache) {\n                var isHelper = mustache.isHelper;\n                var isEligible = mustache.eligibleHelper;\n                var options = this.options;\n                // if ambiguous, we can possibly resolve the ambiguity now\n                if (isEligible && !isHelper) {\n                    var name = mustache.id.parts[0];\n                    if (options.knownHelpers[name]) {\n                        isHelper = true;\n                    } else if (options.knownHelpersOnly) {\n                        isEligible = false;\n                    }\n                }\n                if (isHelper) {\n                    return \"helper\";\n                } else if (isEligible) {\n                    return \"ambiguous\";\n                } else {\n                    return \"simple\";\n                }\n            },\n            pushParams: function(params) {\n                var i = params.length, param;\n                while (i--) {\n                    param = params[i];\n                    if (this.options.stringParams) {\n                        if (param.depth) {\n                            this.addDepth(param.depth);\n                        }\n                        this.opcode(\"getContext\", param.depth || 0);\n                        this.opcode(\"pushStringParam\", param.stringModeValue, param.type);\n                    } else {\n                        this[param.type](param);\n                    }\n                }\n            },\n            setupMustacheParams: function(mustache) {\n                var params = mustache.params;\n                this.pushParams(params);\n                if (mustache.hash) {\n                    this.hash(mustache.hash);\n                } else {\n                    this.opcode(\"emptyHash\");\n                }\n                return params;\n            },\n            // this will replace setupMustacheParams when we're done\n            setupFullMustacheParams: function(mustache, program, inverse) {\n                var params = mustache.params;\n                this.pushParams(params);\n                this.opcode(\"pushProgram\", program);\n                this.opcode(\"pushProgram\", inverse);\n                if (mustache.hash) {\n                    this.hash(mustache.hash);\n                } else {\n                    this.opcode(\"emptyHash\");\n                }\n                return params;\n            }\n        };\n        var Literal = function(value) {\n            this.value = value;\n        };\n        JavaScriptCompiler.prototype = {\n            // PUBLIC API: You can override these methods in a subclass to provide\n            // alternative compiled forms for name lookup and buffering semantics\n            nameLookup: function(parent, name) {\n                if (/^[0-9]+$/.test(name)) {\n                    return parent + \"[\" + name + \"]\";\n                } else if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {\n                    return parent + \".\" + name;\n                } else {\n                    return parent + \"['\" + name + \"']\";\n                }\n            },\n            appendToBuffer: function(string) {\n                if (this.environment.isSimple) {\n                    return \"return \" + string + \";\";\n                } else {\n                    return {\n                        appendToBuffer: true,\n                        content: string,\n                        toString: function() {\n                            return \"buffer += \" + string + \";\";\n                        }\n                    };\n                }\n            },\n            initializeBuffer: function() {\n                return this.quotedString(\"\");\n            },\n            namespace: \"Handlebars\",\n            // END PUBLIC API\n            compile: function(environment, options, context, asObject) {\n                this.environment = environment;\n                this.options = options || {};\n                Handlebars.log(Handlebars.logger.DEBUG, this.environment.disassemble() + \"\\n\\n\");\n                this.name = this.environment.name;\n                this.isChild = !!context;\n                this.context = context || {\n                    programs: [],\n                    environments: [],\n                    aliases: {}\n                };\n                this.preamble();\n                this.stackSlot = 0;\n                this.stackVars = [];\n                this.registers = {\n                    list: []\n                };\n                this.compileStack = [];\n                this.inlineStack = [];\n                this.compileChildren(environment, options);\n                var opcodes = environment.opcodes, opcode;\n                this.i = 0;\n                for (l = opcodes.length; this.i < l; this.i++) {\n                    opcode = opcodes[this.i];\n                    if (opcode.opcode === \"DECLARE\") {\n                        this[opcode.name] = opcode.value;\n                    } else {\n                        this[opcode.opcode].apply(this, opcode.args);\n                    }\n                }\n                return this.createFunctionContext(asObject);\n            },\n            nextOpcode: function() {\n                var opcodes = this.environment.opcodes;\n                return opcodes[this.i + 1];\n            },\n            eat: function() {\n                this.i = this.i + 1;\n            },\n            preamble: function() {\n                var out = [];\n                if (!this.isChild) {\n                    var namespace = this.namespace;\n                    var copies = \"helpers = helpers || \" + namespace + \".helpers;\";\n                    if (this.environment.usePartial) {\n                        copies = copies + \" partials = partials || \" + namespace + \".partials;\";\n                    }\n                    if (this.options.data) {\n                        copies = copies + \" data = data || {};\";\n                    }\n                    out.push(copies);\n                } else {\n                    out.push(\"\");\n                }\n                if (!this.environment.isSimple) {\n                    out.push(\", buffer = \" + this.initializeBuffer());\n                } else {\n                    out.push(\"\");\n                }\n                // track the last context pushed into place to allow skipping the\n                // getContext opcode when it would be a noop\n                this.lastContext = 0;\n                this.source = out;\n            },\n            createFunctionContext: function(asObject) {\n                var locals = this.stackVars.concat(this.registers.list);\n                if (locals.length > 0) {\n                    this.source[1] = this.source[1] + \", \" + locals.join(\", \");\n                }\n                // Generate minimizer alias mappings\n                if (!this.isChild) {\n                    for (var alias in this.context.aliases) {\n                        this.source[1] = this.source[1] + \", \" + alias + \"=\" + this.context.aliases[alias];\n                    }\n                }\n                if (this.source[1]) {\n                    this.source[1] = \"var \" + this.source[1].substring(2) + \";\";\n                }\n                // Merge children\n                if (!this.isChild) {\n                    this.source[1] += \"\\n\" + this.context.programs.join(\"\\n\") + \"\\n\";\n                }\n                if (!this.environment.isSimple) {\n                    this.source.push(\"return buffer;\");\n                }\n                var params = this.isChild ? [ \"depth0\", \"data\" ] : [ \"Handlebars\", \"depth0\", \"helpers\", \"partials\", \"data\" ];\n                for (var i = 0, l = this.environment.depths.list.length; i < l; i++) {\n                    params.push(\"depth\" + this.environment.depths.list[i]);\n                }\n                // Perform a second pass over the output to merge content when possible\n                var source = this.mergeSource();\n                if (!this.isChild) {\n                    var revision = Handlebars.COMPILER_REVISION, versions = Handlebars.REVISION_CHANGES[revision];\n                    source = \"this.compilerInfo = [\" + revision + \",'\" + versions + \"'];\\n\" + source;\n                }\n                if (asObject) {\n                    params.push(source);\n                    return Function.apply(this, params);\n                } else {\n                    var functionSource = \"function \" + (this.name || \"\") + \"(\" + params.join(\",\") + \") {\\n  \" + source + \"}\";\n                    Handlebars.log(Handlebars.logger.DEBUG, functionSource + \"\\n\\n\");\n                    return functionSource;\n                }\n            },\n            mergeSource: function() {\n                // WARN: We are not handling the case where buffer is still populated as the source should\n                // not have buffer append operations as their final action.\n                var source = \"\", buffer;\n                for (var i = 0, len = this.source.length; i < len; i++) {\n                    var line = this.source[i];\n                    if (line.appendToBuffer) {\n                        if (buffer) {\n                            buffer = buffer + \"\\n    + \" + line.content;\n                        } else {\n                            buffer = line.content;\n                        }\n                    } else {\n                        if (buffer) {\n                            source += \"buffer += \" + buffer + \";\\n  \";\n                            buffer = undefined;\n                        }\n                        source += line + \"\\n  \";\n                    }\n                }\n                return source;\n            },\n            // [blockValue]\n            //\n            // On stack, before: hash, inverse, program, value\n            // On stack, after: return value of blockHelperMissing\n            //\n            // The purpose of this opcode is to take a block of the form\n            // `{{#foo}}...{{/foo}}`, resolve the value of `foo`, and\n            // replace it on the stack with the result of properly\n            // invoking blockHelperMissing.\n            blockValue: function() {\n                this.context.aliases.blockHelperMissing = \"helpers.blockHelperMissing\";\n                var params = [ \"depth0\" ];\n                this.setupParams(0, params);\n                this.replaceStack(function(current) {\n                    params.splice(1, 0, current);\n                    return \"blockHelperMissing.call(\" + params.join(\", \") + \")\";\n                });\n            },\n            // [ambiguousBlockValue]\n            //\n            // On stack, before: hash, inverse, program, value\n            // Compiler value, before: lastHelper=value of last found helper, if any\n            // On stack, after, if no lastHelper: same as [blockValue]\n            // On stack, after, if lastHelper: value\n            ambiguousBlockValue: function() {\n                this.context.aliases.blockHelperMissing = \"helpers.blockHelperMissing\";\n                var params = [ \"depth0\" ];\n                this.setupParams(0, params);\n                var current = this.topStack();\n                params.splice(1, 0, current);\n                // Use the options value generated from the invocation\n                params[params.length - 1] = \"options\";\n                this.source.push(\"if (!\" + this.lastHelper + \") { \" + current + \" = blockHelperMissing.call(\" + params.join(\", \") + \"); }\");\n            },\n            // [appendContent]\n            //\n            // On stack, before: ...\n            // On stack, after: ...\n            //\n            // Appends the string value of `content` to the current buffer\n            appendContent: function(content) {\n                this.source.push(this.appendToBuffer(this.quotedString(content)));\n            },\n            // [append]\n            //\n            // On stack, before: value, ...\n            // On stack, after: ...\n            //\n            // Coerces `value` to a String and appends it to the current buffer.\n            //\n            // If `value` is truthy, or 0, it is coerced into a string and appended\n            // Otherwise, the empty string is appended\n            append: function() {\n                // Force anything that is inlined onto the stack so we don't have duplication\n                // when we examine local\n                this.flushInline();\n                var local = this.popStack();\n                this.source.push(\"if(\" + local + \" || \" + local + \" === 0) { \" + this.appendToBuffer(local) + \" }\");\n                if (this.environment.isSimple) {\n                    this.source.push(\"else { \" + this.appendToBuffer(\"''\") + \" }\");\n                }\n            },\n            // [appendEscaped]\n            //\n            // On stack, before: value, ...\n            // On stack, after: ...\n            //\n            // Escape `value` and append it to the buffer\n            appendEscaped: function() {\n                this.context.aliases.escapeExpression = \"this.escapeExpression\";\n                this.source.push(this.appendToBuffer(\"escapeExpression(\" + this.popStack() + \")\"));\n            },\n            // [getContext]\n            //\n            // On stack, before: ...\n            // On stack, after: ...\n            // Compiler value, after: lastContext=depth\n            //\n            // Set the value of the `lastContext` compiler value to the depth\n            getContext: function(depth) {\n                if (this.lastContext !== depth) {\n                    this.lastContext = depth;\n                }\n            },\n            // [lookupOnContext]\n            //\n            // On stack, before: ...\n            // On stack, after: currentContext[name], ...\n            //\n            // Looks up the value of `name` on the current context and pushes\n            // it onto the stack.\n            lookupOnContext: function(name) {\n                this.push(this.nameLookup(\"depth\" + this.lastContext, name, \"context\"));\n            },\n            // [pushContext]\n            //\n            // On stack, before: ...\n            // On stack, after: currentContext, ...\n            //\n            // Pushes the value of the current context onto the stack.\n            pushContext: function() {\n                this.pushStackLiteral(\"depth\" + this.lastContext);\n            },\n            // [resolvePossibleLambda]\n            //\n            // On stack, before: value, ...\n            // On stack, after: resolved value, ...\n            //\n            // If the `value` is a lambda, replace it on the stack by\n            // the return value of the lambda\n            resolvePossibleLambda: function() {\n                this.context.aliases.functionType = '\"function\"';\n                this.replaceStack(function(current) {\n                    return \"typeof \" + current + \" === functionType ? \" + current + \".apply(depth0) : \" + current;\n                });\n            },\n            // [lookup]\n            //\n            // On stack, before: value, ...\n            // On stack, after: value[name], ...\n            //\n            // Replace the value on the stack with the result of looking\n            // up `name` on `value`\n            lookup: function(name) {\n                this.replaceStack(function(current) {\n                    return current + \" == null || \" + current + \" === false ? \" + current + \" : \" + this.nameLookup(current, name, \"context\");\n                });\n            },\n            // [lookupData]\n            //\n            // On stack, before: ...\n            // On stack, after: data[id], ...\n            //\n            // Push the result of looking up `id` on the current data\n            lookupData: function(id) {\n                this.push(this.nameLookup(\"data\", id, \"data\"));\n            },\n            // [pushStringParam]\n            //\n            // On stack, before: ...\n            // On stack, after: string, currentContext, ...\n            //\n            // This opcode is designed for use in string mode, which\n            // provides the string value of a parameter along with its\n            // depth rather than resolving it immediately.\n            pushStringParam: function(string, type) {\n                this.pushStackLiteral(\"depth\" + this.lastContext);\n                this.pushString(type);\n                if (typeof string === \"string\") {\n                    this.pushString(string);\n                } else {\n                    this.pushStackLiteral(string);\n                }\n            },\n            emptyHash: function() {\n                this.pushStackLiteral(\"{}\");\n                if (this.options.stringParams) {\n                    this.register(\"hashTypes\", \"{}\");\n                    this.register(\"hashContexts\", \"{}\");\n                }\n            },\n            pushHash: function() {\n                this.hash = {\n                    values: [],\n                    types: [],\n                    contexts: []\n                };\n            },\n            popHash: function() {\n                var hash = this.hash;\n                this.hash = undefined;\n                if (this.options.stringParams) {\n                    this.register(\"hashContexts\", \"{\" + hash.contexts.join(\",\") + \"}\");\n                    this.register(\"hashTypes\", \"{\" + hash.types.join(\",\") + \"}\");\n                }\n                this.push(\"{\\n    \" + hash.values.join(\",\\n    \") + \"\\n  }\");\n            },\n            // [pushString]\n            //\n            // On stack, before: ...\n            // On stack, after: quotedString(string), ...\n            //\n            // Push a quoted version of `string` onto the stack\n            pushString: function(string) {\n                this.pushStackLiteral(this.quotedString(string));\n            },\n            // [push]\n            //\n            // On stack, before: ...\n            // On stack, after: expr, ...\n            //\n            // Push an expression onto the stack\n            push: function(expr) {\n                this.inlineStack.push(expr);\n                return expr;\n            },\n            // [pushLiteral]\n            //\n            // On stack, before: ...\n            // On stack, after: value, ...\n            //\n            // Pushes a value onto the stack. This operation prevents\n            // the compiler from creating a temporary variable to hold\n            // it.\n            pushLiteral: function(value) {\n                this.pushStackLiteral(value);\n            },\n            // [pushProgram]\n            //\n            // On stack, before: ...\n            // On stack, after: program(guid), ...\n            //\n            // Push a program expression onto the stack. This takes\n            // a compile-time guid and converts it into a runtime-accessible\n            // expression.\n            pushProgram: function(guid) {\n                if (guid != null) {\n                    this.pushStackLiteral(this.programExpression(guid));\n                } else {\n                    this.pushStackLiteral(null);\n                }\n            },\n            // [invokeHelper]\n            //\n            // On stack, before: hash, inverse, program, params..., ...\n            // On stack, after: result of helper invocation\n            //\n            // Pops off the helper's parameters, invokes the helper,\n            // and pushes the helper's return value onto the stack.\n            //\n            // If the helper is not found, `helperMissing` is called.\n            invokeHelper: function(paramSize, name) {\n                this.context.aliases.helperMissing = \"helpers.helperMissing\";\n                var helper = this.lastHelper = this.setupHelper(paramSize, name, true);\n                this.push(helper.name);\n                this.replaceStack(function(name) {\n                    return name + \" ? \" + name + \".call(\" + helper.callParams + \") \" + \": helperMissing.call(\" + helper.helperMissingParams + \")\";\n                });\n            },\n            // [invokeKnownHelper]\n            //\n            // On stack, before: hash, inverse, program, params..., ...\n            // On stack, after: result of helper invocation\n            //\n            // This operation is used when the helper is known to exist,\n            // so a `helperMissing` fallback is not required.\n            invokeKnownHelper: function(paramSize, name) {\n                var helper = this.setupHelper(paramSize, name);\n                this.push(helper.name + \".call(\" + helper.callParams + \")\");\n            },\n            // [invokeAmbiguous]\n            //\n            // On stack, before: hash, inverse, program, params..., ...\n            // On stack, after: result of disambiguation\n            //\n            // This operation is used when an expression like `{{foo}}`\n            // is provided, but we don't know at compile-time whether it\n            // is a helper or a path.\n            //\n            // This operation emits more code than the other options,\n            // and can be avoided by passing the `knownHelpers` and\n            // `knownHelpersOnly` flags at compile-time.\n            invokeAmbiguous: function(name, helperCall) {\n                this.context.aliases.functionType = '\"function\"';\n                this.pushStackLiteral(\"{}\");\n                // Hash value\n                var helper = this.setupHelper(0, name, helperCall);\n                var helperName = this.lastHelper = this.nameLookup(\"helpers\", name, \"helper\");\n                var nonHelper = this.nameLookup(\"depth\" + this.lastContext, name, \"context\");\n                var nextStack = this.nextStack();\n                this.source.push(\"if (\" + nextStack + \" = \" + helperName + \") { \" + nextStack + \" = \" + nextStack + \".call(\" + helper.callParams + \"); }\");\n                this.source.push(\"else { \" + nextStack + \" = \" + nonHelper + \"; \" + nextStack + \" = typeof \" + nextStack + \" === functionType ? \" + nextStack + \".apply(depth0) : \" + nextStack + \"; }\");\n            },\n            // [invokePartial]\n            //\n            // On stack, before: context, ...\n            // On stack after: result of partial invocation\n            //\n            // This operation pops off a context, invokes a partial with that context,\n            // and pushes the result of the invocation back.\n            invokePartial: function(name) {\n                var params = [ this.nameLookup(\"partials\", name, \"partial\"), \"'\" + name + \"'\", this.popStack(), \"helpers\", \"partials\" ];\n                if (this.options.data) {\n                    params.push(\"data\");\n                }\n                this.context.aliases.self = \"this\";\n                this.push(\"self.invokePartial(\" + params.join(\", \") + \")\");\n            },\n            // [assignToHash]\n            //\n            // On stack, before: value, hash, ...\n            // On stack, after: hash, ...\n            //\n            // Pops a value and hash off the stack, assigns `hash[key] = value`\n            // and pushes the hash back onto the stack.\n            assignToHash: function(key) {\n                var value = this.popStack(), context, type;\n                if (this.options.stringParams) {\n                    type = this.popStack();\n                    context = this.popStack();\n                }\n                var hash = this.hash;\n                if (context) {\n                    hash.contexts.push(\"'\" + key + \"': \" + context);\n                }\n                if (type) {\n                    hash.types.push(\"'\" + key + \"': \" + type);\n                }\n                hash.values.push(\"'\" + key + \"': (\" + value + \")\");\n            },\n            // HELPERS\n            compiler: JavaScriptCompiler,\n            compileChildren: function(environment, options) {\n                var children = environment.children, child, compiler;\n                for (var i = 0, l = children.length; i < l; i++) {\n                    child = children[i];\n                    compiler = new this.compiler();\n                    var index = this.matchExistingProgram(child);\n                    if (index == null) {\n                        this.context.programs.push(\"\");\n                        // Placeholder to prevent name conflicts for nested children\n                        index = this.context.programs.length;\n                        child.index = index;\n                        child.name = \"program\" + index;\n                        this.context.programs[index] = compiler.compile(child, options, this.context);\n                        this.context.environments[index] = child;\n                    } else {\n                        child.index = index;\n                        child.name = \"program\" + index;\n                    }\n                }\n            },\n            matchExistingProgram: function(child) {\n                for (var i = 0, len = this.context.environments.length; i < len; i++) {\n                    var environment = this.context.environments[i];\n                    if (environment && environment.equals(child)) {\n                        return i;\n                    }\n                }\n            },\n            programExpression: function(guid) {\n                this.context.aliases.self = \"this\";\n                if (guid == null) {\n                    return \"self.noop\";\n                }\n                var child = this.environment.children[guid], depths = child.depths.list, depth;\n                var programParams = [ child.index, child.name, \"data\" ];\n                for (var i = 0, l = depths.length; i < l; i++) {\n                    depth = depths[i];\n                    if (depth === 1) {\n                        programParams.push(\"depth0\");\n                    } else {\n                        programParams.push(\"depth\" + (depth - 1));\n                    }\n                }\n                return (depths.length === 0 ? \"self.program(\" : \"self.programWithDepth(\") + programParams.join(\", \") + \")\";\n            },\n            register: function(name, val) {\n                this.useRegister(name);\n                this.source.push(name + \" = \" + val + \";\");\n            },\n            useRegister: function(name) {\n                if (!this.registers[name]) {\n                    this.registers[name] = true;\n                    this.registers.list.push(name);\n                }\n            },\n            pushStackLiteral: function(item) {\n                return this.push(new Literal(item));\n            },\n            pushStack: function(item) {\n                this.flushInline();\n                var stack = this.incrStack();\n                if (item) {\n                    this.source.push(stack + \" = \" + item + \";\");\n                }\n                this.compileStack.push(stack);\n                return stack;\n            },\n            replaceStack: function(callback) {\n                var prefix = \"\", inline = this.isInline(), stack;\n                // If we are currently inline then we want to merge the inline statement into the\n                // replacement statement via ','\n                if (inline) {\n                    var top = this.popStack(true);\n                    if (top instanceof Literal) {\n                        // Literals do not need to be inlined\n                        stack = top.value;\n                    } else {\n                        // Get or create the current stack name for use by the inline\n                        var name = this.stackSlot ? this.topStackName() : this.incrStack();\n                        prefix = \"(\" + this.push(name) + \" = \" + top + \"),\";\n                        stack = this.topStack();\n                    }\n                } else {\n                    stack = this.topStack();\n                }\n                var item = callback.call(this, stack);\n                if (inline) {\n                    if (this.inlineStack.length || this.compileStack.length) {\n                        this.popStack();\n                    }\n                    this.push(\"(\" + prefix + item + \")\");\n                } else {\n                    // Prevent modification of the context depth variable. Through replaceStack\n                    if (!/^stack/.test(stack)) {\n                        stack = this.nextStack();\n                    }\n                    this.source.push(stack + \" = (\" + prefix + item + \");\");\n                }\n                return stack;\n            },\n            nextStack: function() {\n                return this.pushStack();\n            },\n            incrStack: function() {\n                this.stackSlot++;\n                if (this.stackSlot > this.stackVars.length) {\n                    this.stackVars.push(\"stack\" + this.stackSlot);\n                }\n                return this.topStackName();\n            },\n            topStackName: function() {\n                return \"stack\" + this.stackSlot;\n            },\n            flushInline: function() {\n                var inlineStack = this.inlineStack;\n                if (inlineStack.length) {\n                    this.inlineStack = [];\n                    for (var i = 0, len = inlineStack.length; i < len; i++) {\n                        var entry = inlineStack[i];\n                        if (entry instanceof Literal) {\n                            this.compileStack.push(entry);\n                        } else {\n                            this.pushStack(entry);\n                        }\n                    }\n                }\n            },\n            isInline: function() {\n                return this.inlineStack.length;\n            },\n            popStack: function(wrapped) {\n                var inline = this.isInline(), item = (inline ? this.inlineStack : this.compileStack).pop();\n                if (!wrapped && item instanceof Literal) {\n                    return item.value;\n                } else {\n                    if (!inline) {\n                        this.stackSlot--;\n                    }\n                    return item;\n                }\n            },\n            topStack: function(wrapped) {\n                var stack = this.isInline() ? this.inlineStack : this.compileStack, item = stack[stack.length - 1];\n                if (!wrapped && item instanceof Literal) {\n                    return item.value;\n                } else {\n                    return item;\n                }\n            },\n            quotedString: function(str) {\n                return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\") + '\"';\n            },\n            setupHelper: function(paramSize, name, missingParams) {\n                var params = [];\n                this.setupParams(paramSize, params, missingParams);\n                var foundHelper = this.nameLookup(\"helpers\", name, \"helper\");\n                return {\n                    params: params,\n                    name: foundHelper,\n                    callParams: [ \"depth0\" ].concat(params).join(\", \"),\n                    helperMissingParams: missingParams && [ \"depth0\", this.quotedString(name) ].concat(params).join(\", \")\n                };\n            },\n            // the params and contexts arguments are passed in arrays\n            // to fill in\n            setupParams: function(paramSize, params, useRegister) {\n                var options = [], contexts = [], types = [], param, inverse, program;\n                options.push(\"hash:\" + this.popStack());\n                inverse = this.popStack();\n                program = this.popStack();\n                // Avoid setting fn and inverse if neither are set. This allows\n                // helpers to do a check for `if (options.fn)`\n                if (program || inverse) {\n                    if (!program) {\n                        this.context.aliases.self = \"this\";\n                        program = \"self.noop\";\n                    }\n                    if (!inverse) {\n                        this.context.aliases.self = \"this\";\n                        inverse = \"self.noop\";\n                    }\n                    options.push(\"inverse:\" + inverse);\n                    options.push(\"fn:\" + program);\n                }\n                for (var i = 0; i < paramSize; i++) {\n                    param = this.popStack();\n                    params.push(param);\n                    if (this.options.stringParams) {\n                        types.push(this.popStack());\n                        contexts.push(this.popStack());\n                    }\n                }\n                if (this.options.stringParams) {\n                    options.push(\"contexts:[\" + contexts.join(\",\") + \"]\");\n                    options.push(\"types:[\" + types.join(\",\") + \"]\");\n                    options.push(\"hashContexts:hashContexts\");\n                    options.push(\"hashTypes:hashTypes\");\n                }\n                if (this.options.data) {\n                    options.push(\"data:data\");\n                }\n                options = \"{\" + options.join(\",\") + \"}\";\n                if (useRegister) {\n                    this.register(\"options\", options);\n                    params.push(\"options\");\n                } else {\n                    params.push(options);\n                }\n                return params.join(\", \");\n            }\n        };\n        var reservedWords = (\"break else new var\" + \" case finally return void\" + \" catch for switch while\" + \" continue function this with\" + \" default if throw\" + \" delete in try\" + \" do instanceof typeof\" + \" abstract enum int short\" + \" boolean export interface static\" + \" byte extends long super\" + \" char final native synchronized\" + \" class float package throws\" + \" const goto private transient\" + \" debugger implements protected volatile\" + \" double import public let yield\").split(\" \");\n        var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n        for (var i = 0, l = reservedWords.length; i < l; i++) {\n            compilerWords[reservedWords[i]] = true;\n        }\n        JavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n            if (!JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]+$/.test(name)) {\n                return true;\n            }\n            return false;\n        };\n        Handlebars.precompile = function(input, options) {\n            if (input == null || typeof input !== \"string\" && input.constructor !== Handlebars.AST.ProgramNode) {\n                throw new Handlebars.Exception(\"You must pass a string or Handlebars AST to Handlebars.precompile. You passed \" + input);\n            }\n            options = options || {};\n            if (!(\"data\" in options)) {\n                options.data = true;\n            }\n            var ast = Handlebars.parse(input);\n            var environment = new Compiler().compile(ast, options);\n            return new JavaScriptCompiler().compile(environment, options);\n        };\n        Handlebars.compile = function(input, options) {\n            if (input == null || typeof input !== \"string\" && input.constructor !== Handlebars.AST.ProgramNode) {\n                throw new Handlebars.Exception(\"You must pass a string or Handlebars AST to Handlebars.compile. You passed \" + input);\n            }\n            options = options || {};\n            if (!(\"data\" in options)) {\n                options.data = true;\n            }\n            var compiled;\n            function compile() {\n                var ast = Handlebars.parse(input);\n                var environment = new Compiler().compile(ast, options);\n                var templateSpec = new JavaScriptCompiler().compile(environment, options, undefined, true);\n                return Handlebars.template(templateSpec);\n            }\n            // Template is only compiled on first use and cached after that point.\n            return function(context, options) {\n                if (!compiled) {\n                    compiled = compile();\n                }\n                return compiled.call(this, context, options);\n            };\n        };\n        // lib/handlebars/runtime.js\n        Handlebars.VM = {\n            template: function(templateSpec) {\n                // Just add water\n                var container = {\n                    escapeExpression: Handlebars.Utils.escapeExpression,\n                    invokePartial: Handlebars.VM.invokePartial,\n                    programs: [],\n                    program: function(i, fn, data) {\n                        var programWrapper = this.programs[i];\n                        if (data) {\n                            programWrapper = Handlebars.VM.program(i, fn, data);\n                        } else if (!programWrapper) {\n                            programWrapper = this.programs[i] = Handlebars.VM.program(i, fn);\n                        }\n                        return programWrapper;\n                    },\n                    programWithDepth: Handlebars.VM.programWithDepth,\n                    noop: Handlebars.VM.noop,\n                    compilerInfo: null\n                };\n                return function(context, options) {\n                    options = options || {};\n                    var result = templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);\n                    var compilerInfo = container.compilerInfo || [], compilerRevision = compilerInfo[0] || 1, currentRevision = Handlebars.COMPILER_REVISION;\n                    if (compilerRevision !== currentRevision) {\n                        if (compilerRevision < currentRevision) {\n                            var runtimeVersions = Handlebars.REVISION_CHANGES[currentRevision], compilerVersions = Handlebars.REVISION_CHANGES[compilerRevision];\n                            throw \"Template was precompiled with an older version of Handlebars than the current runtime. \" + \"Please update your precompiler to a newer version (\" + runtimeVersions + \") or downgrade your runtime to an older version (\" + compilerVersions + \").\";\n                        } else {\n                            // Use the embedded version info since the runtime doesn't know about this revision yet\n                            throw \"Template was precompiled with a newer version of Handlebars than the current runtime. \" + \"Please update your runtime to a newer version (\" + compilerInfo[1] + \").\";\n                        }\n                    }\n                    return result;\n                };\n            },\n            programWithDepth: function(i, fn, data) {\n                var args = Array.prototype.slice.call(arguments, 3);\n                var program = function(context, options) {\n                    options = options || {};\n                    return fn.apply(this, [ context, options.data || data ].concat(args));\n                };\n                program.program = i;\n                program.depth = args.length;\n                return program;\n            },\n            program: function(i, fn, data) {\n                var program = function(context, options) {\n                    options = options || {};\n                    return fn(context, options.data || data);\n                };\n                program.program = i;\n                program.depth = 0;\n                return program;\n            },\n            noop: function() {\n                return \"\";\n            },\n            invokePartial: function(partial, name, context, helpers, partials, data) {\n                var options = {\n                    helpers: helpers,\n                    partials: partials,\n                    data: data\n                };\n                if (partial === undefined) {\n                    throw new Handlebars.Exception(\"The partial \" + name + \" could not be found\");\n                } else if (partial instanceof Function) {\n                    return partial(context, options);\n                } else if (!Handlebars.compile) {\n                    throw new Handlebars.Exception(\"The partial \" + name + \" could not be compiled when running in runtime-only mode\");\n                } else {\n                    partials[name] = Handlebars.compile(partial, {\n                        data: data !== undefined\n                    });\n                    return partials[name](context, options);\n                }\n            }\n        };\n        Handlebars.template = Handlebars.VM.template;\n    })(Handlebars);\n    module.exports = Handlebars;\n});\n"],"sourceRoot":"/source/"}