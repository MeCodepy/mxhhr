{"version":3,"sources":["gallery/handlebars/1.0.2/runtime-debug.js"],"names":["define","require","exports","module","Handlebars","undefined","VERSION","COMPILER_REVISION","REVISION_CHANGES",1,2,3,"helpers","partials","toString","Object","prototype","functionType","objectType","registerHelper","name","fn","inverse","call","Exception","Utils","extend","this","not","registerPartial","str","arg","arguments","length","Error","context","options","type","each","K","createFrame","create","object","obj","logger","DEBUG","INFO","WARN","ERROR","level","methodMap","log","method","console","data","i","ret","Array","j","index","key","hasOwnProperty","isEmpty","parseInt","errorProps","tmp","constructor","apply","idx","SafeString","string","escape","&","<",">","\"","'","`","badChars","possible","escapeChar","chr","value","escapeExpression","test","replace","VM","template","templateSpec","container","invokePartial","programs","program","programWrapper","programWithDepth","noop","compilerInfo","result","compilerRevision","currentRevision","runtimeVersions","compilerVersions","args","slice","concat","depth","partial","Function","compile"],"mappings":"AAAAA,OAAO,4CAA8C,SAASC,EAASC,EAASC,GAyB5E,GAAIC,OACJ,SAAUA,EAAYC,GAElBD,EAAWE,QAAU,aACrBF,EAAWG,kBAAoB,EAC/BH,EAAWI,kBACPC,EAAG,cAEHC,EAAG,gBACHC,EAAG,iBAEPP,EAAWQ,WACXR,EAAWS,WACX,IAAIC,GAAWC,OAAOC,UAAUF,SAAUG,EAAe,oBAAqBC,EAAa,iBAC3Fd,GAAWe,eAAiB,SAASC,EAAMC,EAAIC,GAC3C,GAAIR,EAASS,KAAKH,KAAUF,EAAY,CACpC,GAAII,GAAWD,EACX,KAAM,IAAIjB,GAAWoB,UAAU,0CAEnCpB,GAAWqB,MAAMC,OAAOC,KAAKf,QAASQ,OAElCE,KACAD,EAAGO,IAAMN,GAEbK,KAAKf,QAAQQ,GAAQC,GAG7BjB,EAAWyB,gBAAkB,SAAST,EAAMU,GACpChB,EAASS,KAAKH,KAAUF,EACxBd,EAAWqB,MAAMC,OAAOC,KAAKd,SAAUO,GAEvCO,KAAKd,SAASO,GAAQU,GAG9B1B,EAAWe,eAAe,gBAAiB,SAASY,GAChD,GAAyB,IAArBC,UAAUC,OACV,MAAO5B,EAEP,MAAM,IAAI6B,OAAM,4BAA8BH,EAAM,OAG5D3B,EAAWe,eAAe,qBAAsB,SAASgB,EAASC,GAC9D,GAAId,GAAUc,EAAQd,SAAW,aAAeD,EAAKe,EAAQf,GACzDgB,EAAOvB,EAASS,KAAKY,EAIzB,OAHIE,KAASpB,IACTkB,EAAUA,EAAQZ,KAAKI,OAEvBQ,KAAY,EACLd,EAAGM,MACHQ,KAAY,GAAoB,MAAXA,EACrBb,EAAQK,MACC,mBAATU,EACHF,EAAQF,OAAS,EACV7B,EAAWQ,QAAQ0B,KAAKH,EAASC,GAEjCd,EAAQK,MAGZN,EAAGc,KAGlB/B,EAAWmC,EAAI,aACfnC,EAAWoC,YAAczB,OAAO0B,QAAU,SAASC,GAC/CtC,EAAWmC,EAAEvB,UAAY0B,CACzB,IAAIC,GAAM,GAAIvC,GAAWmC,CAEzB,OADAnC,GAAWmC,EAAEvB,UAAY,KAClB2B,GAEXvC,EAAWwC,QACPC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,WACI,EAAG,QACHzC,EAAG,OACHC,EAAG,OACHC,EAAG,SAGPwC,IAAK,SAASF,EAAON,GACjB,GAAIvC,EAAWwC,OAAOK,OAASA,EAAO,CAClC,GAAIG,GAAShD,EAAWwC,OAAOM,UAAUD,EAClB,oBAAZI,UAA2BA,QAAQD,IAC1CC,QAAQD,GAAQ7B,KAAK8B,QAASV,MAK9CvC,EAAW+C,IAAM,SAASF,EAAON,GAC7BvC,EAAWwC,OAAOO,IAAIF,EAAON,IAEjCvC,EAAWe,eAAe,OAAQ,SAASgB,EAASC,GAChD,GACqBkB,GADjBjC,EAAKe,EAAQf,GAAIC,EAAUc,EAAQd,QACnCiC,EAAI,EAAGC,EAAM,EAIjB,IAHIpB,EAAQkB,OACRA,EAAOlD,EAAWoC,YAAYJ,EAAQkB,OAEtCnB,GAA8B,gBAAZA,GAClB,GAAIA,YAAmBsB,OACnB,IAAK,GAAIC,GAAIvB,EAAQF,OAAYyB,EAAJH,EAAOA,IAC5BD,IACAA,EAAKK,MAAQJ,GAEjBC,GAAYnC,EAAGc,EAAQoB,IACnBD,KAAMA,QAId,KAAK,GAAIM,KAAOzB,GACRA,EAAQ0B,eAAeD,KACnBN,IACAA,EAAKM,IAAMA,GAEfJ,GAAYnC,EAAGc,EAAQyB,IACnBN,KAAMA,IAEVC,IAQhB,OAHU,KAANA,IACAC,EAAMlC,EAAQK,OAEX6B,IAEXpD,EAAWe,eAAe,KAAM,SAASgB,EAASC,GAC9C,GAAIC,GAAOvB,EAASS,KAAKY,EAIzB,OAHIE,KAASpB,IACTkB,EAAUA,EAAQZ,KAAKI,QAEtBQ,GAAW/B,EAAWqB,MAAMqC,QAAQ3B,GAC9BC,EAAQd,QAAQK,MAEhBS,EAAQf,GAAGM,QAG1BvB,EAAWe,eAAe,SAAU,SAASgB,EAASC,GAClD,MAAOhC,GAAWQ,QAAQ,MAAMW,KAAKI,KAAMQ,GACvCd,GAAIe,EAAQd,QACZA,QAASc,EAAQf,OAGzBjB,EAAWe,eAAe,OAAQ,SAASgB,EAASC,GAChD,MAAKhC,GAAWqB,MAAMqC,QAAQ3B,GAA9B,OAA+CC,EAAQf,GAAGc,KAE9D/B,EAAWe,eAAe,MAAO,SAASgB,EAASC,GAC/C,GAAIa,GAAQb,EAAQkB,MAA8B,MAAtBlB,EAAQkB,KAAKL,MAAgBc,SAAS3B,EAAQkB,KAAKL,MAAO,IAAM,CAC5F7C,GAAW+C,IAAIF,EAAOd,IAG1B,IAAI6B,IAAe,cAAe,WAAY,aAAc,UAAW,OAAQ,SAAU,QACzF5D,GAAWoB,UAAY,WAGnB,IAAK,GAFDyC,GAAM/B,MAAMlB,UAAUkD,YAAYC,MAAMxC,KAAMK,WAEzCoC,EAAM,EAAGA,EAAMJ,EAAW/B,OAAQmC,IACvCzC,KAAKqC,EAAWI,IAAQH,EAAID,EAAWI,KAG/ChE,EAAWoB,UAAUR,UAAY,GAAIkB,OAErC9B,EAAWiE,WAAa,SAASC,GAC7B3C,KAAK2C,OAASA,GAElBlE,EAAWiE,WAAWrD,UAAUF,SAAW,WACvC,MAAOa,MAAK2C,OAAOxD,WAEvB,IAAIyD,IACAC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAELC,EAAW,YACXC,EAAW,WACXC,EAAa,SAASC,GACtB,MAAOV,GAAOU,IAAQ,QAE1B7E,GAAWqB,OACPC,OAAQ,SAASiB,EAAKuC,GAClB,IAAK,GAAItB,KAAOsB,GACRA,EAAMrB,eAAeD,KACrBjB,EAAIiB,GAAOsB,EAAMtB,KAI7BuB,iBAAkB,SAASb,GAEvB,MAAIA,aAAkBlE,GAAWiE,WACtBC,EAAOxD,WACG,MAAVwD,GAAkBA,KAAW,EAC7B,IAKXA,EAASA,EAAOxD,WACXiE,EAASK,KAAKd,GAGZA,EAAOe,QAAQP,EAAUE,GAFrBV,IAIfR,QAAS,SAASoB,GACd,MAAKA,IAAmB,IAAVA,EAEsB,mBAAzBpE,EAASS,KAAK2D,IAAgD,IAAjBA,EAAMjD,QACnD,GAEA,GAJA,IASnB7B,EAAWkF,IACPC,SAAU,SAASC,GAEf,GAAIC,IACAN,iBAAkB/E,EAAWqB,MAAM0D,iBACnCO,cAAetF,EAAWkF,GAAGI,cAC7BC,YACAC,QAAS,SAASrC,EAAGlC,EAAIiC,GACrB,GAAIuC,GAAiBlE,KAAKgE,SAASpC,EAMnC,OALID,GACAuC,EAAiBzF,EAAWkF,GAAGM,QAAQrC,EAAGlC,EAAIiC,GACtCuC,IACRA,EAAiBlE,KAAKgE,SAASpC,GAAKnD,EAAWkF,GAAGM,QAAQrC,EAAGlC,IAE1DwE,GAEXC,iBAAkB1F,EAAWkF,GAAGQ,iBAChCC,KAAM3F,EAAWkF,GAAGS,KACpBC,aAAc,KAElB,OAAO,UAAS7D,EAASC,GACrBA,EAAUA,KACV,IAAI6D,GAAST,EAAajE,KAAKkE,EAAWrF,EAAY+B,EAASC,EAAQxB,QAASwB,EAAQvB,SAAUuB,EAAQkB,MACtG0C,EAAeP,EAAUO,iBAAoBE,EAAmBF,EAAa,IAAM,EAAGG,EAAkB/F,EAAWG,iBACvH,IAAI2F,IAAqBC,EAAiB,CACtC,GAAuBA,EAAnBD,EAAoC,CACpC,GAAIE,GAAkBhG,EAAWI,iBAAiB2F,GAAkBE,EAAmBjG,EAAWI,iBAAiB0F,EACnH,MAAM,6IAAoJE,EAAkB,oDAAsDC,EAAmB,KAGrP,KAAM,wIAA+IL,EAAa,GAAK,KAG/K,MAAOC,KAGfH,iBAAkB,SAASvC,EAAGlC,EAAIiC,GAC9B,GAAIgD,GAAO7C,MAAMzC,UAAUuF,MAAMhF,KAAKS,UAAW,GAC7C4D,EAAU,SAASzD,EAASC,GAE5B,MADAA,GAAUA,MACHf,EAAG8C,MAAMxC,MAAQQ,EAASC,EAAQkB,MAAQA,GAAOkD,OAAOF,IAInE,OAFAV,GAAQA,QAAUrC,EAClBqC,EAAQa,MAAQH,EAAKrE,OACd2D,GAEXA,QAAS,SAASrC,EAAGlC,EAAIiC,GACrB,GAAIsC,GAAU,SAASzD,EAASC,GAE5B,MADAA,GAAUA,MACHf,EAAGc,EAASC,EAAQkB,MAAQA,GAIvC,OAFAsC,GAAQA,QAAUrC,EAClBqC,EAAQa,MAAQ,EACTb,GAEXG,KAAM,WACF,MAAO,IAEXL,cAAe,SAASgB,EAAStF,EAAMe,EAASvB,EAASC,EAAUyC,GAC/D,GAAIlB,IACAxB,QAASA,EACTC,SAAUA,EACVyC,KAAMA,EAEV,IAAIoD,IAAYrG,EACZ,KAAM,IAAID,GAAWoB,UAAU,eAAiBJ,EAAO,sBACpD,IAAIsF,YAAmBC,UAC1B,MAAOD,GAAQvE,EAASC,EACrB,IAAKhC,EAAWwG,QAMnB,MAHA/F,GAASO,GAAQhB,EAAWwG,QAAQF,GAChCpD,KAAMA,IAASjD,IAEZQ,EAASO,GAAMe,EAASC,EAL/B,MAAM,IAAIhC,GAAWoB,UAAU,eAAiBJ,EAAO,8DASnEhB,EAAWmF,SAAWnF,EAAWkF,GAAGC,UACrCnF,GACHD,EAAOD,QAAUE","file":"gallery/handlebars/1.0.2/runtime-debug.js","sourcesContent":["define(\"gallery/handlebars/1.0.2/runtime-debug\", [], function(require, exports, module) {\n    /*\n\nCopyright (C) 2011 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n    // lib/handlebars/browser-prefix.js\n    var Handlebars = {};\n    (function(Handlebars, undefined) {\n        // lib/handlebars/base.js\n        Handlebars.VERSION = \"1.0.0-rc.4\";\n        Handlebars.COMPILER_REVISION = 3;\n        Handlebars.REVISION_CHANGES = {\n            1: \"<= 1.0.rc.2\",\n            // 1.0.rc.2 is actually rev2 but doesn't report it\n            2: \"== 1.0.0-rc.3\",\n            3: \">= 1.0.0-rc.4\"\n        };\n        Handlebars.helpers = {};\n        Handlebars.partials = {};\n        var toString = Object.prototype.toString, functionType = \"[object Function]\", objectType = \"[object Object]\";\n        Handlebars.registerHelper = function(name, fn, inverse) {\n            if (toString.call(name) === objectType) {\n                if (inverse || fn) {\n                    throw new Handlebars.Exception(\"Arg not supported with multiple helpers\");\n                }\n                Handlebars.Utils.extend(this.helpers, name);\n            } else {\n                if (inverse) {\n                    fn.not = inverse;\n                }\n                this.helpers[name] = fn;\n            }\n        };\n        Handlebars.registerPartial = function(name, str) {\n            if (toString.call(name) === objectType) {\n                Handlebars.Utils.extend(this.partials, name);\n            } else {\n                this.partials[name] = str;\n            }\n        };\n        Handlebars.registerHelper(\"helperMissing\", function(arg) {\n            if (arguments.length === 2) {\n                return undefined;\n            } else {\n                throw new Error(\"Could not find property '\" + arg + \"'\");\n            }\n        });\n        Handlebars.registerHelper(\"blockHelperMissing\", function(context, options) {\n            var inverse = options.inverse || function() {}, fn = options.fn;\n            var type = toString.call(context);\n            if (type === functionType) {\n                context = context.call(this);\n            }\n            if (context === true) {\n                return fn(this);\n            } else if (context === false || context == null) {\n                return inverse(this);\n            } else if (type === \"[object Array]\") {\n                if (context.length > 0) {\n                    return Handlebars.helpers.each(context, options);\n                } else {\n                    return inverse(this);\n                }\n            } else {\n                return fn(context);\n            }\n        });\n        Handlebars.K = function() {};\n        Handlebars.createFrame = Object.create || function(object) {\n            Handlebars.K.prototype = object;\n            var obj = new Handlebars.K();\n            Handlebars.K.prototype = null;\n            return obj;\n        };\n        Handlebars.logger = {\n            DEBUG: 0,\n            INFO: 1,\n            WARN: 2,\n            ERROR: 3,\n            level: 3,\n            methodMap: {\n                0: \"debug\",\n                1: \"info\",\n                2: \"warn\",\n                3: \"error\"\n            },\n            // can be overridden in the host environment\n            log: function(level, obj) {\n                if (Handlebars.logger.level <= level) {\n                    var method = Handlebars.logger.methodMap[level];\n                    if (typeof console !== \"undefined\" && console[method]) {\n                        console[method].call(console, obj);\n                    }\n                }\n            }\n        };\n        Handlebars.log = function(level, obj) {\n            Handlebars.logger.log(level, obj);\n        };\n        Handlebars.registerHelper(\"each\", function(context, options) {\n            var fn = options.fn, inverse = options.inverse;\n            var i = 0, ret = \"\", data;\n            if (options.data) {\n                data = Handlebars.createFrame(options.data);\n            }\n            if (context && typeof context === \"object\") {\n                if (context instanceof Array) {\n                    for (var j = context.length; i < j; i++) {\n                        if (data) {\n                            data.index = i;\n                        }\n                        ret = ret + fn(context[i], {\n                            data: data\n                        });\n                    }\n                } else {\n                    for (var key in context) {\n                        if (context.hasOwnProperty(key)) {\n                            if (data) {\n                                data.key = key;\n                            }\n                            ret = ret + fn(context[key], {\n                                data: data\n                            });\n                            i++;\n                        }\n                    }\n                }\n            }\n            if (i === 0) {\n                ret = inverse(this);\n            }\n            return ret;\n        });\n        Handlebars.registerHelper(\"if\", function(context, options) {\n            var type = toString.call(context);\n            if (type === functionType) {\n                context = context.call(this);\n            }\n            if (!context || Handlebars.Utils.isEmpty(context)) {\n                return options.inverse(this);\n            } else {\n                return options.fn(this);\n            }\n        });\n        Handlebars.registerHelper(\"unless\", function(context, options) {\n            return Handlebars.helpers[\"if\"].call(this, context, {\n                fn: options.inverse,\n                inverse: options.fn\n            });\n        });\n        Handlebars.registerHelper(\"with\", function(context, options) {\n            if (!Handlebars.Utils.isEmpty(context)) return options.fn(context);\n        });\n        Handlebars.registerHelper(\"log\", function(context, options) {\n            var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n            Handlebars.log(level, context);\n        });\n        // lib/handlebars/utils.js\n        var errorProps = [ \"description\", \"fileName\", \"lineNumber\", \"message\", \"name\", \"number\", \"stack\" ];\n        Handlebars.Exception = function(message) {\n            var tmp = Error.prototype.constructor.apply(this, arguments);\n            // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n            for (var idx = 0; idx < errorProps.length; idx++) {\n                this[errorProps[idx]] = tmp[errorProps[idx]];\n            }\n        };\n        Handlebars.Exception.prototype = new Error();\n        // Build out our basic SafeString type\n        Handlebars.SafeString = function(string) {\n            this.string = string;\n        };\n        Handlebars.SafeString.prototype.toString = function() {\n            return this.string.toString();\n        };\n        var escape = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#x27;\",\n            \"`\": \"&#x60;\"\n        };\n        var badChars = /[&<>\"'`]/g;\n        var possible = /[&<>\"'`]/;\n        var escapeChar = function(chr) {\n            return escape[chr] || \"&amp;\";\n        };\n        Handlebars.Utils = {\n            extend: function(obj, value) {\n                for (var key in value) {\n                    if (value.hasOwnProperty(key)) {\n                        obj[key] = value[key];\n                    }\n                }\n            },\n            escapeExpression: function(string) {\n                // don't escape SafeStrings, since they're already safe\n                if (string instanceof Handlebars.SafeString) {\n                    return string.toString();\n                } else if (string == null || string === false) {\n                    return \"\";\n                }\n                // Force a string conversion as this will be done by the append regardless and\n                // the regex test will do this transparently behind the scenes, causing issues if\n                // an object's to string has escaped characters in it.\n                string = string.toString();\n                if (!possible.test(string)) {\n                    return string;\n                }\n                return string.replace(badChars, escapeChar);\n            },\n            isEmpty: function(value) {\n                if (!value && value !== 0) {\n                    return true;\n                } else if (toString.call(value) === \"[object Array]\" && value.length === 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        };\n        // lib/handlebars/runtime.js\n        Handlebars.VM = {\n            template: function(templateSpec) {\n                // Just add water\n                var container = {\n                    escapeExpression: Handlebars.Utils.escapeExpression,\n                    invokePartial: Handlebars.VM.invokePartial,\n                    programs: [],\n                    program: function(i, fn, data) {\n                        var programWrapper = this.programs[i];\n                        if (data) {\n                            programWrapper = Handlebars.VM.program(i, fn, data);\n                        } else if (!programWrapper) {\n                            programWrapper = this.programs[i] = Handlebars.VM.program(i, fn);\n                        }\n                        return programWrapper;\n                    },\n                    programWithDepth: Handlebars.VM.programWithDepth,\n                    noop: Handlebars.VM.noop,\n                    compilerInfo: null\n                };\n                return function(context, options) {\n                    options = options || {};\n                    var result = templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);\n                    var compilerInfo = container.compilerInfo || [], compilerRevision = compilerInfo[0] || 1, currentRevision = Handlebars.COMPILER_REVISION;\n                    if (compilerRevision !== currentRevision) {\n                        if (compilerRevision < currentRevision) {\n                            var runtimeVersions = Handlebars.REVISION_CHANGES[currentRevision], compilerVersions = Handlebars.REVISION_CHANGES[compilerRevision];\n                            throw \"Template was precompiled with an older version of Handlebars than the current runtime. \" + \"Please update your precompiler to a newer version (\" + runtimeVersions + \") or downgrade your runtime to an older version (\" + compilerVersions + \").\";\n                        } else {\n                            // Use the embedded version info since the runtime doesn't know about this revision yet\n                            throw \"Template was precompiled with a newer version of Handlebars than the current runtime. \" + \"Please update your runtime to a newer version (\" + compilerInfo[1] + \").\";\n                        }\n                    }\n                    return result;\n                };\n            },\n            programWithDepth: function(i, fn, data) {\n                var args = Array.prototype.slice.call(arguments, 3);\n                var program = function(context, options) {\n                    options = options || {};\n                    return fn.apply(this, [ context, options.data || data ].concat(args));\n                };\n                program.program = i;\n                program.depth = args.length;\n                return program;\n            },\n            program: function(i, fn, data) {\n                var program = function(context, options) {\n                    options = options || {};\n                    return fn(context, options.data || data);\n                };\n                program.program = i;\n                program.depth = 0;\n                return program;\n            },\n            noop: function() {\n                return \"\";\n            },\n            invokePartial: function(partial, name, context, helpers, partials, data) {\n                var options = {\n                    helpers: helpers,\n                    partials: partials,\n                    data: data\n                };\n                if (partial === undefined) {\n                    throw new Handlebars.Exception(\"The partial \" + name + \" could not be found\");\n                } else if (partial instanceof Function) {\n                    return partial(context, options);\n                } else if (!Handlebars.compile) {\n                    throw new Handlebars.Exception(\"The partial \" + name + \" could not be compiled when running in runtime-only mode\");\n                } else {\n                    partials[name] = Handlebars.compile(partial, {\n                        data: data !== undefined\n                    });\n                    return partials[name](context, options);\n                }\n            }\n        };\n        Handlebars.template = Handlebars.VM.template;\n    })(Handlebars);\n    module.exports = Handlebars;\n});\n"],"sourceRoot":"/source/"}