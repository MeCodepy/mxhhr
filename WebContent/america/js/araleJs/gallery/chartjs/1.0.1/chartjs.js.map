{"version":3,"sources":["gallery/chartjs/1.0.1/chartjs.js"],"names":["define","require","exports","module","root","this","previous","Chart","context","canvas","ctx","width","height","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","onAnimationProgress","onAnimationComplete","types","each","loopable","callback","self","additionalArgs","Array","prototype","slice","call","arguments","length","i","apply","concat","item","clone","obj","objClone","value","key","hasOwnProperty","extend","base","extensionObject","merge","args","unshift","indexOf","arrayToSearch","inherits","where","collection","filterCallback","filtered","push","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","parent","ChartElement","constructor","Surrogate","__super__","noop","uid","id","warn","str","window","console","amd","isNumber","n","isNaN","parseFloat","isFinite","max","array","Math","min","getDecimalPlaces","cap","valueToCap","maxValue","minValue","num","toString","split","toRadians","radians","degrees","PI","aliasPixel","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","x","distanceFromYCenter","y","radialDistanceFromCenter","sqrt","angle","atan2","distance","pixelWidth","calculateOrderOfMagnitude","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","val","floor","log","LN10","template","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","minSteps","maxSteps","skipFitting","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","templateString","valuesObject","tmpl","data","fn","test","Function","replace","join","cache","easingEffects","generateLabels","labelsArray","labelTemplateString","index","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","addEvent","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","left","clientY","top","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","unbindEvents","bindEvents","arrayOfEvents","events","eventName","chart","getMaximumWidth","domNode","container","parentNode","clientWidth","getMaximumHeight","clientHeight","getMaximumSize","devicePixelRatio","style","scale","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","newWidth","newHeight","reflow","render","draw","generateLegend","legendTemplate","destroy","showTooltip","ChartElements","forceRedraw","activeElements","isChanged","Elements","changed","element","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xMax","yMax","xMin","yMin","xPositions","yPositions","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","label","Element","tooltipPosition","Tooltip","caretHeight","text","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","betweenAngles","startAngle","endAngle","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","padding","cachedYLabelWidth","cachedHeight","calculateYRange","calculateXLabelRotation","firstRotated","lastRotated","firstWidth","lastWidth","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","cosRotation","originalLabelWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","innerWidth","valueWidth","valueOffset","offsetGridLines","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","gridLineWidth","gridLineColor","lineColor","xPos","linePos","isRotated","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","pointPosition","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","largestPossibleRadius","pointLabelFontSize","furthestRight","furthestLeft","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","angleMultiplier","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","timeout","instance","noConflict","defaultConfig","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","baseWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","dataTotal","values","scaleOptions","beginAtZero","currentHeight","updatedRanges","addData","removeData","newScaleProps","easingDecimal","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","segmentsArray","location","atIndex","silent","splice","color","highlight","circumference","calculateCircumference","total","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","nextPoint","previousPoint","pointsWithValues","tension","controlPoints","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","totalDataArray"],"mappings":"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","file":"gallery/chartjs/1.0.1/chartjs.js","sourcesContent":["/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.1-beta.4\n *\n * Copyright 2014 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\ndefine('gallery/chartjs/1.0.1/chartjs',[],function(require,exports,module){\n    \n\n(function(){\n\n    \"use strict\";\n\n    //Declare root variable - window in the browser, global on the server\n    var root = this,\n        previous = root.Chart;\n\n    //Occupy the global variable of Chart, and create a simple base class\n    var Chart = function(context){\n        var chart = this;\n        this.canvas = context.canvas;\n\n        this.ctx = context;\n\n        //Variables global to the chart\n        var width = this.width = context.canvas.width;\n        var height = this.height = context.canvas.height;\n        this.aspectRatio = this.width / this.height;\n        //High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n        helpers.retinaScale(this);\n\n        return this;\n    };\n    //Globally expose the defaults to allow for user updating/changing\n    Chart.defaults = {\n        global: {\n            // Boolean - Whether to animate the chart\n            animation: true,\n\n            // Number - Number of animation steps\n            animationSteps: 60,\n\n            // String - Animation easing effect\n            animationEasing: \"easeOutQuart\",\n\n            // Boolean - If we should show the scale at all\n            showScale: true,\n\n            // Boolean - If we want to override with a hard coded scale\n            scaleOverride: false,\n\n            // ** Required if scaleOverride is true **\n            // Number - The number of steps in a hard coded scale\n            scaleSteps: null,\n            // Number - The value jump in the hard coded scale\n            scaleStepWidth: null,\n            // Number - The scale starting value\n            scaleStartValue: null,\n\n            // String - Colour of the scale line\n            scaleLineColor: \"rgba(0,0,0,.1)\",\n\n            // Number - Pixel width of the scale line\n            scaleLineWidth: 1,\n\n            // Boolean - Whether to show labels on the scale\n            scaleShowLabels: true,\n\n            // Interpolated JS string - can access value\n            scaleLabel: \"<%=value%>\",\n\n            // Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n            scaleIntegersOnly: true,\n\n            // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n            scaleBeginAtZero: false,\n\n            // String - Scale label font declaration for the scale label\n            scaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n            // Number - Scale label font size in pixels\n            scaleFontSize: 12,\n\n            // String - Scale label font weight style\n            scaleFontStyle: \"normal\",\n\n            // String - Scale label font colour\n            scaleFontColor: \"#666\",\n\n            // Boolean - whether or not the chart should be responsive and resize when the browser does.\n            responsive: false,\n\n                        // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n                        maintainAspectRatio: true,\n\n            // Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n            showTooltips: true,\n\n            // Array - Array of string names to attach tooltip events\n            tooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n            // String - Tooltip background colour\n            tooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n            // String - Tooltip label font declaration for the scale label\n            tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n            // Number - Tooltip label font size in pixels\n            tooltipFontSize: 14,\n\n            // String - Tooltip font weight style\n            tooltipFontStyle: \"normal\",\n\n            // String - Tooltip label font colour\n            tooltipFontColor: \"#fff\",\n\n            // String - Tooltip title font declaration for the scale label\n            tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n            // Number - Tooltip title font size in pixels\n            tooltipTitleFontSize: 14,\n\n            // String - Tooltip title font weight style\n            tooltipTitleFontStyle: \"bold\",\n\n            // String - Tooltip title font colour\n            tooltipTitleFontColor: \"#fff\",\n\n            // Number - pixel width of padding around tooltip text\n            tooltipYPadding: 6,\n\n            // Number - pixel width of padding around tooltip text\n            tooltipXPadding: 6,\n\n            // Number - Size of the caret on the tooltip\n            tooltipCaretSize: 8,\n\n            // Number - Pixel radius of the tooltip border\n            tooltipCornerRadius: 6,\n\n            // Number - Pixel offset from point x to tooltip edge\n            tooltipXOffset: 10,\n\n            // String - Template string for single tooltips\n            tooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n            // String - Template string for single tooltips\n            multiTooltipTemplate: \"<%= value %>\",\n\n            // String - Colour behind the legend colour block\n            multiTooltipKeyBackground: '#fff',\n\n            // Function - Will fire on animation progression.\n            onAnimationProgress: function(){},\n\n            // Function - Will fire on animation completion.\n            onAnimationComplete: function(){}\n\n        }\n    };\n\n    //Create a dictionary of chart types, to allow for extension of existing types\n    Chart.types = {};\n\n    //Global Chart helpers object for utility methods and classes\n    var helpers = Chart.helpers = {};\n\n        //-- Basic js utility methods\n    var each = helpers.each = function(loopable,callback,self){\n            var additionalArgs = Array.prototype.slice.call(arguments, 3);\n            // Check to see if null or undefined firstly.\n            if (loopable){\n                if (loopable.length === +loopable.length){\n                    var i;\n                    for (i=0; i<loopable.length; i++){\n                        callback.apply(self,[loopable[i], i].concat(additionalArgs));\n                    }\n                }\n                else{\n                    for (var item in loopable){\n                        callback.apply(self,[loopable[item],item].concat(additionalArgs));\n                    }\n                }\n            }\n        },\n        clone = helpers.clone = function(obj){\n            var objClone = {};\n            each(obj,function(value,key){\n                if (obj.hasOwnProperty(key)) objClone[key] = value;\n            });\n            return objClone;\n        },\n        extend = helpers.extend = function(base){\n            each(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n                each(extensionObject,function(value,key){\n                    if (extensionObject.hasOwnProperty(key)) base[key] = value;\n                });\n            });\n            return base;\n        },\n        merge = helpers.merge = function(base,master){\n            //Merge properties in left object over to a shallow clone of object right.\n            var args = Array.prototype.slice.call(arguments,0);\n            args.unshift({});\n            return extend.apply(null, args);\n        },\n        indexOf = helpers.indexOf = function(arrayToSearch, item){\n            if (Array.prototype.indexOf) {\n                return arrayToSearch.indexOf(item);\n            }\n            else{\n                for (var i = 0; i < arrayToSearch.length; i++) {\n                    if (arrayToSearch[i] === item) return i;\n                }\n                return -1;\n            }\n        },\n        where = helpers.where = function(collection, filterCallback){\n            var filtered = [];\n\n            helpers.each(collection, function(item){\n                if (filterCallback(item)){\n                    filtered.push(item);\n                }\n            });\n\n            return filtered;\n        },\n        findNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n            // Default to start of the array\n            if (!startIndex){\n                startIndex = -1;\n            }\n            for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n                var currentItem = arrayToSearch[i];\n                if (filterCallback(currentItem)){\n                    return currentItem;\n                }\n            };\n        },\n        findPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n            // Default to end of the array\n            if (!startIndex){\n                startIndex = arrayToSearch.length;\n            }\n            for (var i = startIndex - 1; i >= 0; i--) {\n                var currentItem = arrayToSearch[i];\n                if (filterCallback(currentItem)){\n                    return currentItem;\n                }\n            };\n        },\n        inherits = helpers.inherits = function(extensions){\n            //Basic javascript inheritance based on the model created in Backbone.js\n            var parent = this;\n            var ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n            var Surrogate = function(){ this.constructor = ChartElement;};\n            Surrogate.prototype = parent.prototype;\n            ChartElement.prototype = new Surrogate();\n\n            ChartElement.extend = inherits;\n\n            if (extensions) extend(ChartElement.prototype, extensions);\n\n            ChartElement.__super__ = parent.prototype;\n\n            return ChartElement;\n        },\n        noop = helpers.noop = function(){},\n        uid = helpers.uid = (function(){\n            var id=0;\n            return function(){\n                return \"chart-\" + id++;\n            };\n        })(),\n        warn = helpers.warn = function(str){\n            //Method for warning of errors\n            if (window.console && typeof window.console.warn == \"function\") console.warn(str);\n        },\n        amd = helpers.amd = (typeof define == 'function' && define.amd),\n        //-- Math methods\n        isNumber = helpers.isNumber = function(n){\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n        max = helpers.max = function(array){\n            return Math.max.apply( Math, array );\n        },\n        min = helpers.min = function(array){\n            return Math.min.apply( Math, array );\n        },\n        cap = helpers.cap = function(valueToCap,maxValue,minValue){\n            if(isNumber(maxValue)) {\n                if( valueToCap > maxValue ) {\n                    return maxValue;\n                }\n            }\n            else if(isNumber(minValue)){\n                if ( valueToCap < minValue ){\n                    return minValue;\n                }\n            }\n            return valueToCap;\n        },\n        getDecimalPlaces = helpers.getDecimalPlaces = function(num){\n            if (num%1!==0 && isNumber(num)){\n                return num.toString().split(\".\")[1].length;\n            }\n            else {\n                return 0;\n            }\n        },\n        toRadians = helpers.radians = function(degrees){\n            return degrees * (Math.PI/180);\n        },\n        // Gets the angle from vertical upright to the point about a centre.\n        getAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n            var distanceFromXCenter = anglePoint.x - centrePoint.x,\n                distanceFromYCenter = anglePoint.y - centrePoint.y,\n                radialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n            var angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n            //If the segment is in the top left quadrant, we need to add another rotation to the angle\n            if (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n                angle += Math.PI*2;\n            }\n\n            return {\n                angle: angle,\n                distance: radialDistanceFromCenter\n            };\n        },\n        aliasPixel = helpers.aliasPixel = function(pixelWidth){\n            return (pixelWidth % 2 === 0) ? 0 : 0.5;\n        },\n        splineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n            //Props to Rob Spencer at scaled innovation for his post on splining between points\n            //http://scaledinnovation.com/analytics/splines/aboutSplines.html\n            var d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n                d12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n                fa=t*d01/(d01+d12),// scaling factor for triangle Ta\n                fb=t*d12/(d01+d12);\n            return {\n                inner : {\n                    x : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n                    y : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n                },\n                outer : {\n                    x: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n                    y : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n                }\n            };\n        },\n        calculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n            return Math.floor(Math.log(val) / Math.LN10);\n        },\n        calculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n            //Set a minimum step of two - a point at the top of the graph, and a point at the base\n            var minSteps = 2,\n                maxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n                skipFitting = (minSteps >= maxSteps);\n\n            var maxValue = max(valuesArray),\n                minValue = min(valuesArray);\n\n            // We need some degree of seperation here to calculate the scales if all the values are the same\n            // Adding/minusing 0.5 will give us a range of 1.\n            if (maxValue === minValue){\n                maxValue += 0.5;\n                // So we don't end up with a graph with a negative start value if we've said always start from zero\n                if (minValue >= 0.5 && !startFromZero){\n                    minValue -= 0.5;\n                }\n                else{\n                    // Make up a whole number above the values\n                    maxValue += 0.5;\n                }\n            }\n\n            var valueRange = Math.abs(maxValue - minValue),\n                rangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n                graphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n                graphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n                graphRange = graphMax - graphMin,\n                stepValue = Math.pow(10, rangeOrderOfMagnitude),\n                numberOfSteps = Math.round(graphRange / stepValue);\n\n            //If we have more space on the graph we'll use it to give more definition to the data\n            while((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n                if(numberOfSteps > maxSteps){\n                    stepValue *=2;\n                    numberOfSteps = Math.round(graphRange/stepValue);\n                    // Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n                    if (numberOfSteps % 1 !== 0){\n                        skipFitting = true;\n                    }\n                }\n                //We can fit in double the amount of scale points on the scale\n                else{\n                    //If user has declared ints only, and the step value isn't a decimal\n                    if (integersOnly && rangeOrderOfMagnitude >= 0){\n                        //If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n                        if(stepValue/2 % 1 === 0){\n                            stepValue /=2;\n                            numberOfSteps = Math.round(graphRange/stepValue);\n                        }\n                        //If it would make it a float break out of the loop\n                        else{\n                            break;\n                        }\n                    }\n                    //If the scale doesn't have to be an int, make the scale more granular anyway.\n                    else{\n                        stepValue /=2;\n                        numberOfSteps = Math.round(graphRange/stepValue);\n                    }\n\n                }\n            }\n\n            if (skipFitting){\n                numberOfSteps = minSteps;\n                stepValue = graphRange / numberOfSteps;\n            }\n\n            return {\n                steps : numberOfSteps,\n                stepValue : stepValue,\n                min : graphMin,\n                max : graphMin + (numberOfSteps * stepValue)\n            };\n\n        },\n        /* jshint ignore:start */\n        // Blows up jshint errors based on the new Function constructor\n        //Templating methods\n        //Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n        template = helpers.template = function(templateString, valuesObject){\n             // If templateString is function rather than string-template - call the function for valuesObject\n            if(templateString instanceof Function){\n                return templateString(valuesObject);\n            }\n\n            var cache = {};\n            function tmpl(str, data){\n                // Figure out if we're getting a template, or if we need to\n                // load the template - and be sure to cache the result.\n                var fn = !/\\W/.test(str) ?\n                cache[str] = cache[str] :\n\n                // Generate a reusable function that will serve as a template\n                // generator (and which will be cached).\n                new Function(\"obj\",\n                    \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n                    // Introduce the data as local variables using with(){}\n                    \"with(obj){p.push('\" +\n\n                    // Convert the template into pure JavaScript\n                    str\n                        .replace(/[\\r\\t\\n]/g, \" \")\n                        .split(\"<%\").join(\"\\t\")\n                        .replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n                        .replace(/\\t=(.*?)%>/g, \"',$1,'\")\n                        .split(\"\\t\").join(\"');\")\n                        .split(\"%>\").join(\"p.push('\")\n                        .split(\"\\r\").join(\"\\\\'\") +\n                    \"');}return p.join('');\"\n                );\n\n                // Provide some basic currying to the user\n                return data ? fn( data ) : fn;\n            }\n            return tmpl(templateString,valuesObject);\n        },\n        /* jshint ignore:end */\n        generateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n            var labelsArray = new Array(numberOfSteps);\n            if (labelTemplateString){\n                each(labelsArray,function(val,index){\n                    labelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n                });\n            }\n            return labelsArray;\n        },\n        //--Animation methods\n        //Easing functions adapted from Robert Penner's easing equations\n        //http://www.robertpenner.com/easing/\n        easingEffects = helpers.easingEffects = {\n            linear: function (t) {\n                return t;\n            },\n            easeInQuad: function (t) {\n                return t * t;\n            },\n            easeOutQuad: function (t) {\n                return -1 * t * (t - 2);\n            },\n            easeInOutQuad: function (t) {\n                if ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n                return -1 / 2 * ((--t) * (t - 2) - 1);\n            },\n            easeInCubic: function (t) {\n                return t * t * t;\n            },\n            easeOutCubic: function (t) {\n                return 1 * ((t = t / 1 - 1) * t * t + 1);\n            },\n            easeInOutCubic: function (t) {\n                if ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n                return 1 / 2 * ((t -= 2) * t * t + 2);\n            },\n            easeInQuart: function (t) {\n                return t * t * t * t;\n            },\n            easeOutQuart: function (t) {\n                return -1 * ((t = t / 1 - 1) * t * t * t - 1);\n            },\n            easeInOutQuart: function (t) {\n                if ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n                return -1 / 2 * ((t -= 2) * t * t * t - 2);\n            },\n            easeInQuint: function (t) {\n                return 1 * (t /= 1) * t * t * t * t;\n            },\n            easeOutQuint: function (t) {\n                return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n            },\n            easeInOutQuint: function (t) {\n                if ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n                return 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n            },\n            easeInSine: function (t) {\n                return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n            },\n            easeOutSine: function (t) {\n                return 1 * Math.sin(t / 1 * (Math.PI / 2));\n            },\n            easeInOutSine: function (t) {\n                return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n            },\n            easeInExpo: function (t) {\n                return (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n            },\n            easeOutExpo: function (t) {\n                return (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n            },\n            easeInOutExpo: function (t) {\n                if (t === 0) return 0;\n                if (t === 1) return 1;\n                if ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n                return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n            },\n            easeInCirc: function (t) {\n                if (t >= 1) return t;\n                return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n            },\n            easeOutCirc: function (t) {\n                return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n            },\n            easeInOutCirc: function (t) {\n                if ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n                return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n            },\n            easeInElastic: function (t) {\n                var s = 1.70158;\n                var p = 0;\n                var a = 1;\n                if (t === 0) return 0;\n                if ((t /= 1) == 1) return 1;\n                if (!p) p = 1 * 0.3;\n                if (a < Math.abs(1)) {\n                    a = 1;\n                    s = p / 4;\n                } else s = p / (2 * Math.PI) * Math.asin(1 / a);\n                return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n            },\n            easeOutElastic: function (t) {\n                var s = 1.70158;\n                var p = 0;\n                var a = 1;\n                if (t === 0) return 0;\n                if ((t /= 1) == 1) return 1;\n                if (!p) p = 1 * 0.3;\n                if (a < Math.abs(1)) {\n                    a = 1;\n                    s = p / 4;\n                } else s = p / (2 * Math.PI) * Math.asin(1 / a);\n                return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n            },\n            easeInOutElastic: function (t) {\n                var s = 1.70158;\n                var p = 0;\n                var a = 1;\n                if (t === 0) return 0;\n                if ((t /= 1 / 2) == 2) return 1;\n                if (!p) p = 1 * (0.3 * 1.5);\n                if (a < Math.abs(1)) {\n                    a = 1;\n                    s = p / 4;\n                } else s = p / (2 * Math.PI) * Math.asin(1 / a);\n                if (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n                return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n            },\n            easeInBack: function (t) {\n                var s = 1.70158;\n                return 1 * (t /= 1) * t * ((s + 1) * t - s);\n            },\n            easeOutBack: function (t) {\n                var s = 1.70158;\n                return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n            },\n            easeInOutBack: function (t) {\n                var s = 1.70158;\n                if ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n                return 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n            },\n            easeInBounce: function (t) {\n                return 1 - easingEffects.easeOutBounce(1 - t);\n            },\n            easeOutBounce: function (t) {\n                if ((t /= 1) < (1 / 2.75)) {\n                    return 1 * (7.5625 * t * t);\n                } else if (t < (2 / 2.75)) {\n                    return 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n                } else if (t < (2.5 / 2.75)) {\n                    return 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n                } else {\n                    return 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n                }\n            },\n            easeInOutBounce: function (t) {\n                if (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n                return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n            }\n        },\n        //Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n        requestAnimFrame = helpers.requestAnimFrame = (function(){\n            return window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                function(callback) {\n                    return window.setTimeout(callback, 1000 / 60);\n                };\n        })(),\n        cancelAnimFrame = helpers.cancelAnimFrame = (function(){\n            return window.cancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.oCancelAnimationFrame ||\n                window.msCancelAnimationFrame ||\n                function(callback) {\n                    return window.clearTimeout(callback, 1000 / 60);\n                };\n        })(),\n        animationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n            var currentStep = 0,\n                easingFunction = easingEffects[easingString] || easingEffects.linear;\n\n            var animationFrame = function(){\n                currentStep++;\n                var stepDecimal = currentStep/totalSteps;\n                var easeDecimal = easingFunction(stepDecimal);\n\n                callback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n                onProgress.call(chartInstance,easeDecimal,stepDecimal);\n                if (currentStep < totalSteps){\n                    chartInstance.animationFrame = requestAnimFrame(animationFrame);\n                } else{\n                    onComplete.apply(chartInstance);\n                }\n            };\n            requestAnimFrame(animationFrame);\n        },\n        //-- DOM methods\n        getRelativePosition = helpers.getRelativePosition = function(evt){\n            var mouseX, mouseY;\n            var e = evt.originalEvent || evt,\n                canvas = evt.currentTarget || evt.srcElement,\n                boundingRect = canvas.getBoundingClientRect();\n\n            if (e.touches){\n                mouseX = e.touches[0].clientX - boundingRect.left;\n                mouseY = e.touches[0].clientY - boundingRect.top;\n\n            }\n            else{\n                mouseX = e.clientX - boundingRect.left;\n                mouseY = e.clientY - boundingRect.top;\n            }\n\n            return {\n                x : mouseX,\n                y : mouseY\n            };\n\n        },\n        addEvent = helpers.addEvent = function(node,eventType,method){\n            if (node.addEventListener){\n                node.addEventListener(eventType,method);\n            } else if (node.attachEvent){\n                node.attachEvent(\"on\"+eventType, method);\n            } else {\n                node[\"on\"+eventType] = method;\n            }\n        },\n        removeEvent = helpers.removeEvent = function(node, eventType, handler){\n            if (node.removeEventListener){\n                node.removeEventListener(eventType, handler, false);\n            } else if (node.detachEvent){\n                node.detachEvent(\"on\"+eventType,handler);\n            } else{\n                node[\"on\" + eventType] = noop;\n            }\n        },\n        bindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n            // Create the events object if it's not already present\n            if (!chartInstance.events) chartInstance.events = {};\n\n            each(arrayOfEvents,function(eventName){\n                chartInstance.events[eventName] = function(){\n                    handler.apply(chartInstance, arguments);\n                };\n                addEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n            });\n        },\n        unbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n            each(arrayOfEvents, function(handler,eventName){\n                removeEvent(chartInstance.chart.canvas, eventName, handler);\n            });\n        },\n        getMaximumWidth = helpers.getMaximumWidth = function(domNode){\n            var container = domNode.parentNode;\n            // TODO = check cross browser stuff with this.\n            return container.clientWidth;\n        },\n        getMaximumHeight = helpers.getMaximumHeight = function(domNode){\n            var container = domNode.parentNode;\n            // TODO = check cross browser stuff with this.\n            return container.clientHeight;\n        },\n        getMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n        retinaScale = helpers.retinaScale = function(chart){\n            var ctx = chart.ctx,\n                width = chart.canvas.width,\n                height = chart.canvas.height;\n\n            if (window.devicePixelRatio) {\n                ctx.canvas.style.width = width + \"px\";\n                ctx.canvas.style.height = height + \"px\";\n                ctx.canvas.height = height * window.devicePixelRatio;\n                ctx.canvas.width = width * window.devicePixelRatio;\n                ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n            }\n        },\n        //-- Canvas methods\n        clear = helpers.clear = function(chart){\n            chart.ctx.clearRect(0,0,chart.width,chart.height);\n        },\n        fontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n            return fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n        },\n        longestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n            ctx.font = font;\n            var longest = 0;\n            each(arrayOfStrings,function(string){\n                var textWidth = ctx.measureText(string).width;\n                longest = (textWidth > longest) ? textWidth : longest;\n            });\n            return longest;\n        },\n        drawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n            ctx.beginPath();\n            ctx.moveTo(x + radius, y);\n            ctx.lineTo(x + width - radius, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n            ctx.lineTo(x + width, y + height - radius);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n            ctx.lineTo(x + radius, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n            ctx.lineTo(x, y + radius);\n            ctx.quadraticCurveTo(x, y, x + radius, y);\n            ctx.closePath();\n        };\n\n\n    //Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n    //Destroy method on the chart will remove the instance of the chart from this reference.\n    Chart.instances = {};\n\n    Chart.Type = function(data,options,chart){\n        this.options = options;\n        this.chart = chart;\n        this.id = uid();\n        //Add the chart instance to the global namespace\n        Chart.instances[this.id] = this;\n\n        // Initialize is always called when a chart type is created\n        // By default it is a no op, but it should be extended\n        if (options.responsive){\n            this.resize();\n        }\n        this.initialize.call(this,data);\n    };\n\n    //Core methods that'll be a part of every chart type\n    extend(Chart.Type.prototype,{\n        initialize : function(){return this;},\n        clear : function(){\n            clear(this.chart);\n            return this;\n        },\n        stop : function(){\n            // Stops any current animation loop occuring\n            helpers.cancelAnimFrame.call(root, this.animationFrame);\n            return this;\n        },\n        resize : function(callback){\n            this.stop();\n            var canvas = this.chart.canvas,\n                newWidth = getMaximumWidth(this.chart.canvas),\n                newHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n            canvas.width = this.chart.width = newWidth;\n            canvas.height =  this.chart.height = newHeight;\n\n            retinaScale(this.chart);\n\n            if (typeof callback === \"function\"){\n                callback.apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n            return this;\n        },\n        reflow : noop,\n        render : function(reflow){\n            if (reflow){\n                this.reflow();\n            }\n            if (this.options.animation && !reflow){\n                helpers.animationLoop(\n                    this.draw,\n                    this.options.animationSteps,\n                    this.options.animationEasing,\n                    this.options.onAnimationProgress,\n                    this.options.onAnimationComplete,\n                    this\n                );\n            }\n            else{\n                this.draw();\n                this.options.onAnimationComplete.call(this);\n            }\n            return this;\n        },\n        generateLegend : function(){\n            return template(this.options.legendTemplate,this);\n        },\n        destroy : function(){\n            this.clear();\n            unbindEvents(this, this.events);\n            delete Chart.instances[this.id];\n        },\n        showTooltip : function(ChartElements, forceRedraw){\n            // Only redraw the chart if we've actually changed what we're hovering on.\n            if (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n            var isChanged = (function(Elements){\n                var changed = false;\n\n                if (Elements.length !== this.activeElements.length){\n                    changed = true;\n                    return changed;\n                }\n\n                each(Elements, function(element, index){\n                    if (element !== this.activeElements[index]){\n                        changed = true;\n                    }\n                }, this);\n                return changed;\n            }).call(this, ChartElements);\n\n            if (!isChanged && !forceRedraw){\n                return;\n            }\n            else{\n                this.activeElements = ChartElements;\n            }\n            this.draw();\n            if (ChartElements.length > 0){\n                // If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n                if (this.datasets && this.datasets.length > 1) {\n                    var dataArray,\n                        dataIndex;\n\n                    for (var i = this.datasets.length - 1; i >= 0; i--) {\n                        dataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n                        dataIndex = indexOf(dataArray, ChartElements[0]);\n                        if (dataIndex !== -1){\n                            break;\n                        }\n                    }\n                    var tooltipLabels = [],\n                        tooltipColors = [],\n                        medianPosition = (function(index) {\n\n                            // Get all the points at that particular index\n                            var Elements = [],\n                                dataCollection,\n                                xPositions = [],\n                                yPositions = [],\n                                xMax,\n                                yMax,\n                                xMin,\n                                yMin;\n                            helpers.each(this.datasets, function(dataset){\n                                dataCollection = dataset.points || dataset.bars || dataset.segments;\n                                if (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n                                    Elements.push(dataCollection[dataIndex]);\n                                }\n                            });\n\n                            helpers.each(Elements, function(element) {\n                                xPositions.push(element.x);\n                                yPositions.push(element.y);\n\n\n                                //Include any colour information about the element\n                                tooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n                                tooltipColors.push({\n                                    fill: element._saved.fillColor || element.fillColor,\n                                    stroke: element._saved.strokeColor || element.strokeColor\n                                });\n\n                            }, this);\n\n                            yMin = min(yPositions);\n                            yMax = max(yPositions);\n\n                            xMin = min(xPositions);\n                            xMax = max(xPositions);\n\n                            return {\n                                x: (xMin > this.chart.width/2) ? xMin : xMax,\n                                y: (yMin + yMax)/2\n                            };\n                        }).call(this, dataIndex);\n\n                    new Chart.MultiTooltip({\n                        x: medianPosition.x,\n                        y: medianPosition.y,\n                        xPadding: this.options.tooltipXPadding,\n                        yPadding: this.options.tooltipYPadding,\n                        xOffset: this.options.tooltipXOffset,\n                        fillColor: this.options.tooltipFillColor,\n                        textColor: this.options.tooltipFontColor,\n                        fontFamily: this.options.tooltipFontFamily,\n                        fontStyle: this.options.tooltipFontStyle,\n                        fontSize: this.options.tooltipFontSize,\n                        titleTextColor: this.options.tooltipTitleFontColor,\n                        titleFontFamily: this.options.tooltipTitleFontFamily,\n                        titleFontStyle: this.options.tooltipTitleFontStyle,\n                        titleFontSize: this.options.tooltipTitleFontSize,\n                        cornerRadius: this.options.tooltipCornerRadius,\n                        labels: tooltipLabels,\n                        legendColors: tooltipColors,\n                        legendColorBackground : this.options.multiTooltipKeyBackground,\n                        title: ChartElements[0].label,\n                        chart: this.chart,\n                        ctx: this.chart.ctx\n                    }).draw();\n\n                } else {\n                    each(ChartElements, function(Element) {\n                        var tooltipPosition = Element.tooltipPosition();\n                        new Chart.Tooltip({\n                            x: Math.round(tooltipPosition.x),\n                            y: Math.round(tooltipPosition.y),\n                            xPadding: this.options.tooltipXPadding,\n                            yPadding: this.options.tooltipYPadding,\n                            fillColor: this.options.tooltipFillColor,\n                            textColor: this.options.tooltipFontColor,\n                            fontFamily: this.options.tooltipFontFamily,\n                            fontStyle: this.options.tooltipFontStyle,\n                            fontSize: this.options.tooltipFontSize,\n                            caretHeight: this.options.tooltipCaretSize,\n                            cornerRadius: this.options.tooltipCornerRadius,\n                            text: template(this.options.tooltipTemplate, Element),\n                            chart: this.chart\n                        }).draw();\n                    }, this);\n                }\n            }\n            return this;\n        },\n        toBase64Image : function(){\n            return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n        }\n    });\n\n    Chart.Type.extend = function(extensions){\n\n        var parent = this;\n\n        var ChartType = function(){\n            return parent.apply(this,arguments);\n        };\n\n        //Copy the prototype object of the this class\n        ChartType.prototype = clone(parent.prototype);\n        //Now overwrite some of the properties in the base class with the new extensions\n        extend(ChartType.prototype, extensions);\n\n        ChartType.extend = Chart.Type.extend;\n\n        if (extensions.name || parent.prototype.name){\n\n            var chartName = extensions.name || parent.prototype.name;\n            //Assign any potential default values of the new chart type\n\n            //If none are defined, we'll use a clone of the chart type this is being extended from.\n            //I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n            //doesn't define some defaults of their own.\n\n            var baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n            Chart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n            Chart.types[chartName] = ChartType;\n\n            //Register this new chart type in the Chart prototype\n            Chart.prototype[chartName] = function(data,options){\n                var config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n                return new ChartType(data,config,this);\n            };\n        } else{\n            warn(\"Name not provided for this chart, so it hasn't been registered\");\n        }\n        return parent;\n    };\n\n    Chart.Element = function(configuration){\n        extend(this,configuration);\n        this.initialize.apply(this,arguments);\n        this.save();\n    };\n    extend(Chart.Element.prototype,{\n        initialize : function(){},\n        restore : function(props){\n            if (!props){\n                extend(this,this._saved);\n            } else {\n                each(props,function(key){\n                    this[key] = this._saved[key];\n                },this);\n            }\n            return this;\n        },\n        save : function(){\n            this._saved = clone(this);\n            delete this._saved._saved;\n            return this;\n        },\n        update : function(newProps){\n            each(newProps,function(value,key){\n                this._saved[key] = this[key];\n                this[key] = value;\n            },this);\n            return this;\n        },\n        transition : function(props,ease){\n            each(props,function(value,key){\n                this[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n            },this);\n            return this;\n        },\n        tooltipPosition : function(){\n            return {\n                x : this.x,\n                y : this.y\n            };\n        },\n        hasValue: function(){\n            return isNumber(this.value);\n        }\n    });\n\n    Chart.Element.extend = inherits;\n\n\n    Chart.Point = Chart.Element.extend({\n        display: true,\n        inRange: function(chartX,chartY){\n            var hitDetectionRange = this.hitDetectionRadius + this.radius;\n            return ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n        },\n        draw : function(){\n            if (this.display){\n                var ctx = this.ctx;\n                ctx.beginPath();\n\n                ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n                ctx.closePath();\n\n                ctx.strokeStyle = this.strokeColor;\n                ctx.lineWidth = this.strokeWidth;\n\n                ctx.fillStyle = this.fillColor;\n\n                ctx.fill();\n                ctx.stroke();\n            }\n\n\n            //Quick debug for bezier curve splining\n            //Highlights control points and the line between them.\n            //Handy for dev - stripped in the min version.\n\n            // ctx.save();\n            // ctx.fillStyle = \"black\";\n            // ctx.strokeStyle = \"black\"\n            // ctx.beginPath();\n            // ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n            // ctx.fill();\n\n            // ctx.beginPath();\n            // ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n            // ctx.fill();\n\n            // ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n            // ctx.lineTo(this.x, this.y);\n            // ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n            // ctx.stroke();\n\n            // ctx.restore();\n\n\n\n        }\n    });\n\n    Chart.Arc = Chart.Element.extend({\n        inRange : function(chartX,chartY){\n\n            var pointRelativePosition = helpers.getAngleFromPoint(this, {\n                x: chartX,\n                y: chartY\n            });\n\n            //Check if within the range of the open/close angle\n            var betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n                withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n            return (betweenAngles && withinRadius);\n            //Ensure within the outside of the arc centre, but inside arc outer\n        },\n        tooltipPosition : function(){\n            var centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n                rangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n            return {\n                x : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n                y : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n            };\n        },\n        draw : function(animationPercent){\n\n            var easingDecimal = animationPercent || 1;\n\n            var ctx = this.ctx;\n\n            ctx.beginPath();\n\n            ctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n            ctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n            ctx.closePath();\n            ctx.strokeStyle = this.strokeColor;\n            ctx.lineWidth = this.strokeWidth;\n\n            ctx.fillStyle = this.fillColor;\n\n            ctx.fill();\n            ctx.lineJoin = 'bevel';\n\n            if (this.showStroke){\n                ctx.stroke();\n            }\n        }\n    });\n\n    Chart.Rectangle = Chart.Element.extend({\n        draw : function(){\n            var ctx = this.ctx,\n                halfWidth = this.width/2,\n                leftX = this.x - halfWidth,\n                rightX = this.x + halfWidth,\n                top = this.base - (this.base - this.y),\n                halfStroke = this.strokeWidth / 2;\n\n            // Canvas doesn't allow us to stroke inside the width so we can\n            // adjust the sizes to fit if we're setting a stroke on the line\n            if (this.showStroke){\n                leftX += halfStroke;\n                rightX -= halfStroke;\n                top += halfStroke;\n            }\n\n            ctx.beginPath();\n\n            ctx.fillStyle = this.fillColor;\n            ctx.strokeStyle = this.strokeColor;\n            ctx.lineWidth = this.strokeWidth;\n\n            // It'd be nice to keep this class totally generic to any rectangle\n            // and simply specify which border to miss out.\n            ctx.moveTo(leftX, this.base);\n            ctx.lineTo(leftX, top);\n            ctx.lineTo(rightX, top);\n            ctx.lineTo(rightX, this.base);\n            ctx.fill();\n            if (this.showStroke){\n                ctx.stroke();\n            }\n        },\n        height : function(){\n            return this.base - this.y;\n        },\n        inRange : function(chartX,chartY){\n            return (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n        }\n    });\n\n    Chart.Tooltip = Chart.Element.extend({\n        draw : function(){\n\n            var ctx = this.chart.ctx;\n\n            ctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n            this.xAlign = \"center\";\n            this.yAlign = \"above\";\n\n            //Distance between the actual element.y position and the start of the tooltip caret\n            var caretPadding = 2;\n\n            var tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n                tooltipRectHeight = this.fontSize + 2*this.yPadding,\n                tooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n            if (this.x + tooltipWidth/2 >this.chart.width){\n                this.xAlign = \"left\";\n            } else if (this.x - tooltipWidth/2 < 0){\n                this.xAlign = \"right\";\n            }\n\n            if (this.y - tooltipHeight < 0){\n                this.yAlign = \"below\";\n            }\n\n\n            var tooltipX = this.x - tooltipWidth/2,\n                tooltipY = this.y - tooltipHeight;\n\n            ctx.fillStyle = this.fillColor;\n\n            switch(this.yAlign)\n            {\n            case \"above\":\n                //Draw a caret above the x/y\n                ctx.beginPath();\n                ctx.moveTo(this.x,this.y - caretPadding);\n                ctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n                ctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n                ctx.closePath();\n                ctx.fill();\n                break;\n            case \"below\":\n                tooltipY = this.y + caretPadding + this.caretHeight;\n                //Draw a caret below the x/y\n                ctx.beginPath();\n                ctx.moveTo(this.x, this.y + caretPadding);\n                ctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n                ctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n                ctx.closePath();\n                ctx.fill();\n                break;\n            }\n\n            switch(this.xAlign)\n            {\n            case \"left\":\n                tooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n                break;\n            case \"right\":\n                tooltipX = this.x - (this.cornerRadius + this.caretHeight);\n                break;\n            }\n\n            drawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n            ctx.fill();\n\n            ctx.fillStyle = this.textColor;\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n        }\n    });\n\n    Chart.MultiTooltip = Chart.Element.extend({\n        initialize : function(){\n            this.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n            this.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n            this.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n            this.ctx.font = this.titleFont;\n\n            var titleWidth = this.ctx.measureText(this.title).width,\n                //Label has a legend square as well so account for this.\n                labelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n                longestTextWidth = max([labelWidth,titleWidth]);\n\n            this.width = longestTextWidth + (this.xPadding*2);\n\n\n            var halfHeight = this.height/2;\n\n            //Check to ensure the height will fit on the canvas\n            //The three is to buffer form the very\n            if (this.y - halfHeight < 0 ){\n                this.y = halfHeight;\n            } else if (this.y + halfHeight > this.chart.height){\n                this.y = this.chart.height - halfHeight;\n            }\n\n            //Decide whether to align left or right based on position on canvas\n            if (this.x > this.chart.width/2){\n                this.x -= this.xOffset + this.width;\n            } else {\n                this.x += this.xOffset;\n            }\n\n\n        },\n        getLineHeight : function(index){\n            var baseLineHeight = this.y - (this.height/2) + this.yPadding,\n                afterTitleIndex = index-1;\n\n            //If the index is zero, we're getting the title\n            if (index === 0){\n                return baseLineHeight + this.titleFontSize/2;\n            } else{\n                return baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n            }\n\n        },\n        draw : function(){\n            drawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n            var ctx = this.ctx;\n            ctx.fillStyle = this.fillColor;\n            ctx.fill();\n            ctx.closePath();\n\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillStyle = this.titleTextColor;\n            ctx.font = this.titleFont;\n\n            ctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n            ctx.font = this.font;\n            helpers.each(this.labels,function(label,index){\n                ctx.fillStyle = this.textColor;\n                ctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n                //A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n                //ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n                //Instead we'll make a white filled block to put the legendColour palette over.\n\n                ctx.fillStyle = this.legendColorBackground;\n                ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n                ctx.fillStyle = this.legendColors[index].fill;\n                ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n            },this);\n        }\n    });\n\n    Chart.Scale = Chart.Element.extend({\n        initialize : function(){\n            this.fit();\n        },\n        buildYLabels : function(){\n            this.yLabels = [];\n\n            var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n            for (var i=0; i<=this.steps; i++){\n                this.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n            }\n            this.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n        },\n        addXLabel : function(label){\n            this.xLabels.push(label);\n            this.valuesCount++;\n            this.fit();\n        },\n        removeXLabel : function(){\n            this.xLabels.shift();\n            this.valuesCount--;\n            this.fit();\n        },\n        // Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n        fit: function(){\n            // First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n            // To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n            this.startPoint = (this.display) ? this.fontSize : 0;\n            this.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n            // Apply padding settings to the start and end point.\n            this.startPoint += this.padding;\n            this.endPoint -= this.padding;\n\n            // Cache the starting height, so can determine if we need to recalculate the scale yAxis\n            var cachedHeight = this.endPoint - this.startPoint,\n                cachedYLabelWidth;\n\n            // Build the current yLabels so we have an idea of what size they'll be to start\n            /*\n             *  This sets what is returned from calculateScaleRange as static properties of this class:\n             *\n                this.steps;\n                this.stepValue;\n                this.min;\n                this.max;\n             *\n             */\n            this.calculateYRange(cachedHeight);\n\n            // With these properties set we can now build the array of yLabels\n            // and also the width of the largest yLabel\n            this.buildYLabels();\n\n            this.calculateXLabelRotation();\n\n            while((cachedHeight > this.endPoint - this.startPoint)){\n                cachedHeight = this.endPoint - this.startPoint;\n                cachedYLabelWidth = this.yLabelWidth;\n\n                this.calculateYRange(cachedHeight);\n                this.buildYLabels();\n\n                // Only go through the xLabel loop again if the yLabel width has changed\n                if (cachedYLabelWidth < this.yLabelWidth){\n                    this.calculateXLabelRotation();\n                }\n            }\n\n        },\n        calculateXLabelRotation : function(){\n            //Get the width of each grid by calculating the difference\n            //between x offsets between 0 and 1.\n\n            this.ctx.font = this.font;\n\n            var firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n                lastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n                firstRotated,\n                lastRotated;\n\n\n            this.xScalePaddingRight = lastWidth/2 + 3;\n            this.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n            this.xLabelRotation = 0;\n            if (this.display){\n                var originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n                    cosRotation,\n                    firstRotatedWidth;\n                this.xLabelWidth = originalLabelWidth;\n                //Allow 3 pixels x2 padding either side for label readability\n                var xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n                //Max label rotate should be 90 - also act as a loop counter\n                while ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n                    cosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n                    firstRotated = cosRotation * firstWidth;\n                    lastRotated = cosRotation * lastWidth;\n\n                    // We're right aligning the text now.\n                    if (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n                        this.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n                    }\n                    this.xScalePaddingRight = this.fontSize/2;\n\n\n                    this.xLabelRotation++;\n                    this.xLabelWidth = cosRotation * originalLabelWidth;\n\n                }\n                if (this.xLabelRotation > 0){\n                    this.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n                }\n            }\n            else{\n                this.xLabelWidth = 0;\n                this.xScalePaddingRight = this.padding;\n                this.xScalePaddingLeft = this.padding;\n            }\n\n        },\n        // Needs to be overidden in each Chart type\n        // Otherwise we need to pass all the data into the scale class\n        calculateYRange: noop,\n        drawingArea: function(){\n            return this.startPoint - this.endPoint;\n        },\n        calculateY : function(value){\n            var scalingFactor = this.drawingArea() / (this.min - this.max);\n            return this.endPoint - (scalingFactor * (value - this.min));\n        },\n        calculateX : function(index){\n            var isRotated = (this.xLabelRotation > 0),\n                // innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n                innerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n                valueWidth = innerWidth/(this.valuesCount - ((this.offsetGridLines) ? 0 : 1)),\n                valueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n            if (this.offsetGridLines){\n                valueOffset += (valueWidth/2);\n            }\n\n            return Math.round(valueOffset);\n        },\n        update : function(newProps){\n            helpers.extend(this, newProps);\n            this.fit();\n        },\n        draw : function(){\n            var ctx = this.ctx,\n                yLabelGap = (this.endPoint - this.startPoint) / this.steps,\n                xStart = Math.round(this.xScalePaddingLeft);\n            if (this.display){\n                ctx.fillStyle = this.textColor;\n                ctx.font = this.font;\n                each(this.yLabels,function(labelString,index){\n                    var yLabelCenter = this.endPoint - (yLabelGap * index),\n                        linePositionY = Math.round(yLabelCenter);\n\n                    ctx.textAlign = \"right\";\n                    ctx.textBaseline = \"middle\";\n                    if (this.showLabels){\n                        ctx.fillText(labelString,xStart - 10,yLabelCenter);\n                    }\n                    ctx.beginPath();\n                    if (index > 0){\n                        // This is a grid line in the centre, so drop that\n                        ctx.lineWidth = this.gridLineWidth;\n                        ctx.strokeStyle = this.gridLineColor;\n                    } else {\n                        // This is the first line on the scale\n                        ctx.lineWidth = this.lineWidth;\n                        ctx.strokeStyle = this.lineColor;\n                    }\n\n                    linePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n                    ctx.moveTo(xStart, linePositionY);\n                    ctx.lineTo(this.width, linePositionY);\n                    ctx.stroke();\n                    ctx.closePath();\n\n                    ctx.lineWidth = this.lineWidth;\n                    ctx.strokeStyle = this.lineColor;\n                    ctx.beginPath();\n                    ctx.moveTo(xStart - 5, linePositionY);\n                    ctx.lineTo(xStart, linePositionY);\n                    ctx.stroke();\n                    ctx.closePath();\n\n                },this);\n\n                each(this.xLabels,function(label,index){\n                    var xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n                        // Check to see if line/bar here and decide where to place the line\n                        linePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n                        isRotated = (this.xLabelRotation > 0);\n\n                    ctx.beginPath();\n\n                    if (index > 0){\n                        // This is a grid line in the centre, so drop that\n                        ctx.lineWidth = this.gridLineWidth;\n                        ctx.strokeStyle = this.gridLineColor;\n                    } else {\n                        // This is the first line on the scale\n                        ctx.lineWidth = this.lineWidth;\n                        ctx.strokeStyle = this.lineColor;\n                    }\n                    ctx.moveTo(linePos,this.endPoint);\n                    ctx.lineTo(linePos,this.startPoint - 3);\n                    ctx.stroke();\n                    ctx.closePath();\n\n\n                    ctx.lineWidth = this.lineWidth;\n                    ctx.strokeStyle = this.lineColor;\n\n\n                    // Small lines at the bottom of the base grid line\n                    ctx.beginPath();\n                    ctx.moveTo(linePos,this.endPoint);\n                    ctx.lineTo(linePos,this.endPoint + 5);\n                    ctx.stroke();\n                    ctx.closePath();\n\n                    ctx.save();\n                    ctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n                    ctx.rotate(toRadians(this.xLabelRotation)*-1);\n                    ctx.font = this.font;\n                    ctx.textAlign = (isRotated) ? \"right\" : \"center\";\n                    ctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n                    ctx.fillText(label, 0, 0);\n                    ctx.restore();\n                },this);\n\n            }\n        }\n\n    });\n\n    Chart.RadialScale = Chart.Element.extend({\n        initialize: function(){\n            this.size = min([this.height, this.width]);\n            this.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n        },\n        calculateCenterOffset: function(value){\n            // Take into account half font size + the yPadding of the top value\n            var scalingFactor = this.drawingArea / (this.max - this.min);\n\n            return (value - this.min) * scalingFactor;\n        },\n        update : function(){\n            if (!this.lineArc){\n                this.setScaleSize();\n            } else {\n                this.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n            }\n            this.buildYLabels();\n        },\n        buildYLabels: function(){\n            this.yLabels = [];\n\n            var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n            for (var i=0; i<=this.steps; i++){\n                this.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n            }\n        },\n        getCircumference : function(){\n            return ((Math.PI*2) / this.valuesCount);\n        },\n        setScaleSize: function(){\n            /*\n             * Right, this is really confusing and there is a lot of maths going on here\n             * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n             *\n             * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n             *\n             * Solution:\n             *\n             * We assume the radius of the polygon is half the size of the canvas at first\n             * at each index we check if the text overlaps.\n             *\n             * Where it does, we store that angle and that index.\n             *\n             * After finding the largest index and angle we calculate how much we need to remove\n             * from the shape radius to move the point inwards by that x.\n             *\n             * We average the left and right distances to get the maximum shape radius that can fit in the box\n             * along with labels.\n             *\n             * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n             * on each side, removing that from the size, halving it and adding the left x protrusion width.\n             *\n             * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n             * and position it in the most space efficient manner\n             *\n             * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n             */\n\n\n            // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n            // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n            var largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n                pointPosition,\n                i,\n                textWidth,\n                halfTextWidth,\n                furthestRight = this.width,\n                furthestRightIndex,\n                furthestRightAngle,\n                furthestLeft = 0,\n                furthestLeftIndex,\n                furthestLeftAngle,\n                xProtrusionLeft,\n                xProtrusionRight,\n                radiusReductionRight,\n                radiusReductionLeft,\n                maxWidthRadius;\n            this.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n            for (i=0;i<this.valuesCount;i++){\n                // 5px to space the text slightly out - similar to what we do in the draw function.\n                pointPosition = this.getPointPosition(i, largestPossibleRadius);\n                textWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n                if (i === 0 || i === this.valuesCount/2){\n                    // If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n                    // of the radar chart, so text will be aligned centrally, so we'll half it and compare\n                    // w/left and right text sizes\n                    halfTextWidth = textWidth/2;\n                    if (pointPosition.x + halfTextWidth > furthestRight) {\n                        furthestRight = pointPosition.x + halfTextWidth;\n                        furthestRightIndex = i;\n                    }\n                    if (pointPosition.x - halfTextWidth < furthestLeft) {\n                        furthestLeft = pointPosition.x - halfTextWidth;\n                        furthestLeftIndex = i;\n                    }\n                }\n                else if (i < this.valuesCount/2) {\n                    // Less than half the values means we'll left align the text\n                    if (pointPosition.x + textWidth > furthestRight) {\n                        furthestRight = pointPosition.x + textWidth;\n                        furthestRightIndex = i;\n                    }\n                }\n                else if (i > this.valuesCount/2){\n                    // More than half the values means we'll right align the text\n                    if (pointPosition.x - textWidth < furthestLeft) {\n                        furthestLeft = pointPosition.x - textWidth;\n                        furthestLeftIndex = i;\n                    }\n                }\n            }\n\n            xProtrusionLeft = furthestLeft;\n\n            xProtrusionRight = Math.ceil(furthestRight - this.width);\n\n            furthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n            furthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n            radiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n            radiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n            // Ensure we actually need to reduce the size of the chart\n            radiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n            radiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n            this.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n            //this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n            this.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n        },\n        setCenterPoint: function(leftMovement, rightMovement){\n\n            var maxRight = this.width - rightMovement - this.drawingArea,\n                maxLeft = leftMovement + this.drawingArea;\n\n            this.xCenter = (maxLeft + maxRight)/2;\n            // Always vertically in the centre as the text height doesn't change\n            this.yCenter = (this.height/2);\n        },\n\n        getIndexAngle : function(index){\n            var angleMultiplier = (Math.PI * 2) / this.valuesCount;\n            // Start from the top instead of right, so remove a quarter of the circle\n\n            return index * angleMultiplier - (Math.PI/2);\n        },\n        getPointPosition : function(index, distanceFromCenter){\n            var thisAngle = this.getIndexAngle(index);\n            return {\n                x : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n                y : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n            };\n        },\n        draw: function(){\n            if (this.display){\n                var ctx = this.ctx;\n                each(this.yLabels, function(label, index){\n                    // Don't draw a centre value\n                    if (index > 0){\n                        var yCenterOffset = index * (this.drawingArea/this.steps),\n                            yHeight = this.yCenter - yCenterOffset,\n                            pointPosition;\n\n                        // Draw circular lines around the scale\n                        if (this.lineWidth > 0){\n                            ctx.strokeStyle = this.lineColor;\n                            ctx.lineWidth = this.lineWidth;\n\n                            if(this.lineArc){\n                                ctx.beginPath();\n                                ctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n                                ctx.closePath();\n                                ctx.stroke();\n                            } else{\n                                ctx.beginPath();\n                                for (var i=0;i<this.valuesCount;i++)\n                                {\n                                    pointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n                                    if (i === 0){\n                                        ctx.moveTo(pointPosition.x, pointPosition.y);\n                                    } else {\n                                        ctx.lineTo(pointPosition.x, pointPosition.y);\n                                    }\n                                }\n                                ctx.closePath();\n                                ctx.stroke();\n                            }\n                        }\n                        if(this.showLabels){\n                            ctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n                            if (this.showLabelBackdrop){\n                                var labelWidth = ctx.measureText(label).width;\n                                ctx.fillStyle = this.backdropColor;\n                                ctx.fillRect(\n                                    this.xCenter - labelWidth/2 - this.backdropPaddingX,\n                                    yHeight - this.fontSize/2 - this.backdropPaddingY,\n                                    labelWidth + this.backdropPaddingX*2,\n                                    this.fontSize + this.backdropPaddingY*2\n                                );\n                            }\n                            ctx.textAlign = 'center';\n                            ctx.textBaseline = \"middle\";\n                            ctx.fillStyle = this.fontColor;\n                            ctx.fillText(label, this.xCenter, yHeight);\n                        }\n                    }\n                }, this);\n\n                if (!this.lineArc){\n                    ctx.lineWidth = this.angleLineWidth;\n                    ctx.strokeStyle = this.angleLineColor;\n                    for (var i = this.valuesCount - 1; i >= 0; i--) {\n                        if (this.angleLineWidth > 0){\n                            var outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n                            ctx.beginPath();\n                            ctx.moveTo(this.xCenter, this.yCenter);\n                            ctx.lineTo(outerPosition.x, outerPosition.y);\n                            ctx.stroke();\n                            ctx.closePath();\n                        }\n                        // Extra 3px out for some label spacing\n                        var pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n                        ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n                        ctx.fillStyle = this.pointLabelFontColor;\n\n                        var labelsCount = this.labels.length,\n                            halfLabelsCount = this.labels.length/2,\n                            quarterLabelsCount = halfLabelsCount/2,\n                            upperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n                            exactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n                        if (i === 0){\n                            ctx.textAlign = 'center';\n                        } else if(i === halfLabelsCount){\n                            ctx.textAlign = 'center';\n                        } else if (i < halfLabelsCount){\n                            ctx.textAlign = 'left';\n                        } else {\n                            ctx.textAlign = 'right';\n                        }\n\n                        // Set the correct text baseline based on outer positioning\n                        if (exactQuarter){\n                            ctx.textBaseline = 'middle';\n                        } else if (upperHalf){\n                            ctx.textBaseline = 'bottom';\n                        } else {\n                            ctx.textBaseline = 'top';\n                        }\n\n                        ctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n                    }\n                }\n            }\n        }\n    });\n\n    // Attach global event to resize each chart instance when the browser resizes\n    helpers.addEvent(window, \"resize\", (function(){\n        // Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n        var timeout;\n        return function(){\n            clearTimeout(timeout);\n            timeout = setTimeout(function(){\n                each(Chart.instances,function(instance){\n                    // If the responsive flag is set in the chart instance config\n                    // Cascade the resize event down to the chart.\n                    if (instance.options.responsive){\n                        instance.resize(instance.render, true);\n                    }\n                });\n            }, 50);\n        };\n    })());\n\n\n    if (amd) {\n        define(function(){\n            return Chart;\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = Chart;\n    }\n\n    root.Chart = Chart;\n\n    Chart.noConflict = function(){\n        root.Chart = previous;\n        return Chart;\n    };\n\n}).call(this);\n\n(function(){\n    \"use strict\";\n\n    var root = this,\n        Chart = root.Chart,\n        helpers = Chart.helpers;\n\n\n    var defaultConfig = {\n        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n        scaleBeginAtZero : true,\n\n        //Boolean - Whether grid lines are shown across the chart\n        scaleShowGridLines : true,\n\n        //String - Colour of the grid lines\n        scaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n        //Number - Width of the grid lines\n        scaleGridLineWidth : 1,\n\n        //Boolean - If there is a stroke on each bar\n        barShowStroke : true,\n\n        //Number - Pixel width of the bar stroke\n        barStrokeWidth : 2,\n\n        //Number - Spacing between each of the X value sets\n        barValueSpacing : 5,\n\n        //Number - Spacing between data sets within X values\n        barDatasetSpacing : 1,\n\n        //String - A legend template\n        legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n    };\n\n\n    Chart.Type.extend({\n        name: \"Bar\",\n        defaults : defaultConfig,\n        initialize:  function(data){\n\n            //Expose options as a scope variable here so we can access it in the ScaleClass\n            var options = this.options;\n\n            this.ScaleClass = Chart.Scale.extend({\n                offsetGridLines : true,\n                calculateBarX : function(datasetCount, datasetIndex, barIndex){\n                    //Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n                    var xWidth = this.calculateBaseWidth(),\n                        xAbsolute = this.calculateX(barIndex) - (xWidth/2),\n                        barWidth = this.calculateBarWidth(datasetCount);\n\n                    return xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n                },\n                calculateBaseWidth : function(){\n                    return (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n                },\n                calculateBarWidth : function(datasetCount){\n                    //The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n                    var baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n                    return (baseWidth / datasetCount);\n                }\n            });\n\n            this.datasets = [];\n\n            //Set up tooltip events on the chart\n            if (this.options.showTooltips){\n                helpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n                    var activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n                    this.eachBars(function(bar){\n                        bar.restore(['fillColor', 'strokeColor']);\n                    });\n                    helpers.each(activeBars, function(activeBar){\n                        activeBar.fillColor = activeBar.highlightFill;\n                        activeBar.strokeColor = activeBar.highlightStroke;\n                    });\n                    this.showTooltip(activeBars);\n                });\n            }\n\n            //Declare the extension of the default point, to cater for the options passed in to the constructor\n            this.BarClass = Chart.Rectangle.extend({\n                strokeWidth : this.options.barStrokeWidth,\n                showStroke : this.options.barShowStroke,\n                ctx : this.chart.ctx\n            });\n\n            //Iterate through each of the datasets, and build this into a property of the chart\n            helpers.each(data.datasets,function(dataset,datasetIndex){\n\n                var datasetObject = {\n                    label : dataset.label || null,\n                    fillColor : dataset.fillColor,\n                    strokeColor : dataset.strokeColor,\n                    bars : []\n                };\n\n                this.datasets.push(datasetObject);\n\n                helpers.each(dataset.data,function(dataPoint,index){\n                    //Add a new point for each piece of data, passing any required data to draw.\n                    datasetObject.bars.push(new this.BarClass({\n                        value : dataPoint,\n                        label : data.labels[index],\n                        datasetLabel: dataset.label,\n                        strokeColor : dataset.strokeColor,\n                        fillColor : dataset.fillColor,\n                        highlightFill : dataset.highlightFill || dataset.fillColor,\n                        highlightStroke : dataset.highlightStroke || dataset.strokeColor\n                    }));\n                },this);\n\n            },this);\n\n            this.buildScale(data.labels);\n\n            this.BarClass.prototype.base = this.scale.endPoint;\n\n            this.eachBars(function(bar, index, datasetIndex){\n                helpers.extend(bar, {\n                    width : this.scale.calculateBarWidth(this.datasets.length),\n                    x: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n                    y: this.scale.endPoint\n                });\n                bar.save();\n            }, this);\n\n            this.render();\n        },\n        update : function(){\n            this.scale.update();\n            // Reset any highlight colours before updating.\n            helpers.each(this.activeElements, function(activeElement){\n                activeElement.restore(['fillColor', 'strokeColor']);\n            });\n\n            this.eachBars(function(bar){\n                bar.save();\n            });\n            this.render();\n        },\n        eachBars : function(callback){\n            helpers.each(this.datasets,function(dataset, datasetIndex){\n                helpers.each(dataset.bars, callback, this, datasetIndex);\n            },this);\n        },\n        getBarsAtEvent : function(e){\n            var barsArray = [],\n                eventPosition = helpers.getRelativePosition(e),\n                datasetIterator = function(dataset){\n                    barsArray.push(dataset.bars[barIndex]);\n                },\n                barIndex;\n\n            for (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n                for (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n                    if (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n                        helpers.each(this.datasets, datasetIterator);\n                        return barsArray;\n                    }\n                }\n            }\n\n            return barsArray;\n        },\n        buildScale : function(labels){\n            var self = this;\n\n            var dataTotal = function(){\n                var values = [];\n                self.eachBars(function(bar){\n                    values.push(bar.value);\n                });\n                return values;\n            };\n\n            var scaleOptions = {\n                templateString : this.options.scaleLabel,\n                height : this.chart.height,\n                width : this.chart.width,\n                ctx : this.chart.ctx,\n                textColor : this.options.scaleFontColor,\n                fontSize : this.options.scaleFontSize,\n                fontStyle : this.options.scaleFontStyle,\n                fontFamily : this.options.scaleFontFamily,\n                valuesCount : labels.length,\n                beginAtZero : this.options.scaleBeginAtZero,\n                integersOnly : this.options.scaleIntegersOnly,\n                calculateYRange: function(currentHeight){\n                    var updatedRanges = helpers.calculateScaleRange(\n                        dataTotal(),\n                        currentHeight,\n                        this.fontSize,\n                        this.beginAtZero,\n                        this.integersOnly\n                    );\n                    helpers.extend(this, updatedRanges);\n                },\n                xLabels : labels,\n                font : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n                lineWidth : this.options.scaleLineWidth,\n                lineColor : this.options.scaleLineColor,\n                gridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n                gridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n                padding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n                showLabels : this.options.scaleShowLabels,\n                display : this.options.showScale\n            };\n\n            if (this.options.scaleOverride){\n                helpers.extend(scaleOptions, {\n                    calculateYRange: helpers.noop,\n                    steps: this.options.scaleSteps,\n                    stepValue: this.options.scaleStepWidth,\n                    min: this.options.scaleStartValue,\n                    max: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n                });\n            }\n\n            this.scale = new this.ScaleClass(scaleOptions);\n        },\n        addData : function(valuesArray,label){\n            //Map the values array for each of the datasets\n            helpers.each(valuesArray,function(value,datasetIndex){\n                //Add a new point for each piece of data, passing any required data to draw.\n                this.datasets[datasetIndex].bars.push(new this.BarClass({\n                    value : value,\n                    label : label,\n                    x: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n                    y: this.scale.endPoint,\n                    width : this.scale.calculateBarWidth(this.datasets.length),\n                    base : this.scale.endPoint,\n                    strokeColor : this.datasets[datasetIndex].strokeColor,\n                    fillColor : this.datasets[datasetIndex].fillColor\n                }));\n            },this);\n\n            this.scale.addXLabel(label);\n            //Then re-render the chart.\n            this.update();\n        },\n        removeData : function(){\n            this.scale.removeXLabel();\n            //Then re-render the chart.\n            helpers.each(this.datasets,function(dataset){\n                dataset.bars.shift();\n            },this);\n            this.update();\n        },\n        reflow : function(){\n            helpers.extend(this.BarClass.prototype,{\n                y: this.scale.endPoint,\n                base : this.scale.endPoint\n            });\n            var newScaleProps = helpers.extend({\n                height : this.chart.height,\n                width : this.chart.width\n            });\n            this.scale.update(newScaleProps);\n        },\n        draw : function(ease){\n            var easingDecimal = ease || 1;\n            this.clear();\n\n            var ctx = this.chart.ctx;\n\n            this.scale.draw(easingDecimal);\n\n            //Draw all the bars for each dataset\n            helpers.each(this.datasets,function(dataset,datasetIndex){\n                helpers.each(dataset.bars,function(bar,index){\n                    if (bar.hasValue()){\n                        bar.base = this.scale.endPoint;\n                        //Transition then draw\n                        bar.transition({\n                            x : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n                            y : this.scale.calculateY(bar.value),\n                            width : this.scale.calculateBarWidth(this.datasets.length)\n                        }, easingDecimal).draw();\n                    }\n                },this);\n\n            },this);\n        }\n    });\n\n\n}).call(this);\n(function(){\n    \"use strict\";\n\n    var root = this,\n        Chart = root.Chart,\n        //Cache a local reference to Chart.helpers\n        helpers = Chart.helpers;\n\n    var defaultConfig = {\n        //Boolean - Whether we should show a stroke on each segment\n        segmentShowStroke : true,\n\n        //String - The colour of each segment stroke\n        segmentStrokeColor : \"#fff\",\n\n        //Number - The width of each segment stroke\n        segmentStrokeWidth : 2,\n\n        //The percentage of the chart that we cut out of the middle.\n        percentageInnerCutout : 50,\n\n        //Number - Amount of animation steps\n        animationSteps : 100,\n\n        //String - Animation easing effect\n        animationEasing : \"easeOutBounce\",\n\n        //Boolean - Whether we animate the rotation of the Doughnut\n        animateRotate : true,\n\n        //Boolean - Whether we animate scaling the Doughnut from the centre\n        animateScale : false,\n\n        //String - A legend template\n        legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n    };\n\n\n    Chart.Type.extend({\n        //Passing in a name registers this chart in the Chart namespace\n        name: \"Doughnut\",\n        //Providing a defaults will also register the deafults in the chart namespace\n        defaults : defaultConfig,\n        //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n        //Config is automatically merged by the core of Chart.js, and is available at this.options\n        initialize:  function(data){\n\n            //Declare segments as a static property to prevent inheriting across the Chart type prototype\n            this.segments = [];\n            this.outerRadius = (helpers.min([this.chart.width,this.chart.height]) - this.options.segmentStrokeWidth/2)/2;\n\n            this.SegmentArc = Chart.Arc.extend({\n                ctx : this.chart.ctx,\n                x : this.chart.width/2,\n                y : this.chart.height/2\n            });\n\n            //Set up tooltip events on the chart\n            if (this.options.showTooltips){\n                helpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n                    var activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n                    helpers.each(this.segments,function(segment){\n                        segment.restore([\"fillColor\"]);\n                    });\n                    helpers.each(activeSegments,function(activeSegment){\n                        activeSegment.fillColor = activeSegment.highlightColor;\n                    });\n                    this.showTooltip(activeSegments);\n                });\n            }\n            this.calculateTotal(data);\n\n            helpers.each(data,function(datapoint, index){\n                this.addData(datapoint, index, true);\n            },this);\n\n            this.render();\n        },\n        getSegmentsAtEvent : function(e){\n            var segmentsArray = [];\n\n            var location = helpers.getRelativePosition(e);\n\n            helpers.each(this.segments,function(segment){\n                if (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n            },this);\n            return segmentsArray;\n        },\n        addData : function(segment, atIndex, silent){\n            var index = atIndex || this.segments.length;\n            this.segments.splice(index, 0, new this.SegmentArc({\n                value : segment.value,\n                outerRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n                innerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n                fillColor : segment.color,\n                highlightColor : segment.highlight || segment.color,\n                showStroke : this.options.segmentShowStroke,\n                strokeWidth : this.options.segmentStrokeWidth,\n                strokeColor : this.options.segmentStrokeColor,\n                startAngle : Math.PI * 1.5,\n                circumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n                label : segment.label\n            }));\n            if (!silent){\n                this.reflow();\n                this.update();\n            }\n        },\n        calculateCircumference : function(value){\n            return (Math.PI*2)*(value / this.total);\n        },\n        calculateTotal : function(data){\n            this.total = 0;\n            helpers.each(data,function(segment){\n                this.total += segment.value;\n            },this);\n        },\n        update : function(){\n            this.calculateTotal(this.segments);\n\n            // Reset any highlight colours before updating.\n            helpers.each(this.activeElements, function(activeElement){\n                activeElement.restore(['fillColor']);\n            });\n\n            helpers.each(this.segments,function(segment){\n                segment.save();\n            });\n            this.render();\n        },\n\n        removeData: function(atIndex){\n            var indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n            this.segments.splice(indexToDelete, 1);\n            this.reflow();\n            this.update();\n        },\n\n        reflow : function(){\n            helpers.extend(this.SegmentArc.prototype,{\n                x : this.chart.width/2,\n                y : this.chart.height/2\n            });\n            this.outerRadius = (helpers.min([this.chart.width,this.chart.height]) - this.options.segmentStrokeWidth/2)/2;\n            helpers.each(this.segments, function(segment){\n                segment.update({\n                    outerRadius : this.outerRadius,\n                    innerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n                });\n            }, this);\n        },\n        draw : function(easeDecimal){\n            var animDecimal = (easeDecimal) ? easeDecimal : 1;\n            this.clear();\n            helpers.each(this.segments,function(segment,index){\n                segment.transition({\n                    circumference : this.calculateCircumference(segment.value),\n                    outerRadius : this.outerRadius,\n                    innerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n                },animDecimal);\n\n                segment.endAngle = segment.startAngle + segment.circumference;\n\n                segment.draw();\n                if (index === 0){\n                    segment.startAngle = Math.PI * 1.5;\n                }\n                //Check to see if it's the last segment, if not get the next and update the start angle\n                if (index < this.segments.length-1){\n                    this.segments[index+1].startAngle = segment.endAngle;\n                }\n            },this);\n\n        }\n    });\n\n    Chart.types.Doughnut.extend({\n        name : \"Pie\",\n        defaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n    });\n\n}).call(this);\n(function(){\n    \"use strict\";\n\n    var root = this,\n        Chart = root.Chart,\n        helpers = Chart.helpers;\n\n    var defaultConfig = {\n\n        ///Boolean - Whether grid lines are shown across the chart\n        scaleShowGridLines : true,\n\n        //String - Colour of the grid lines\n        scaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n        //Number - Width of the grid lines\n        scaleGridLineWidth : 1,\n\n        //Boolean - Whether the line is curved between points\n        bezierCurve : true,\n\n        //Number - Tension of the bezier curve between points\n        bezierCurveTension : 0.4,\n\n        //Boolean - Whether to show a dot for each point\n        pointDot : true,\n\n        //Number - Radius of each point dot in pixels\n        pointDotRadius : 4,\n\n        //Number - Pixel width of point dot stroke\n        pointDotStrokeWidth : 1,\n\n        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n        pointHitDetectionRadius : 20,\n\n        //Boolean - Whether to show a stroke for datasets\n        datasetStroke : true,\n\n        //Number - Pixel width of dataset stroke\n        datasetStrokeWidth : 2,\n\n        //Boolean - Whether to fill the dataset with a colour\n        datasetFill : true,\n\n        //String - A legend template\n        legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n    };\n\n\n    Chart.Type.extend({\n        name: \"Line\",\n        defaults : defaultConfig,\n        initialize:  function(data){\n            //Declare the extension of the default point, to cater for the options passed in to the constructor\n            this.PointClass = Chart.Point.extend({\n                strokeWidth : this.options.pointDotStrokeWidth,\n                radius : this.options.pointDotRadius,\n                display: this.options.pointDot,\n                hitDetectionRadius : this.options.pointHitDetectionRadius,\n                ctx : this.chart.ctx,\n                inRange : function(mouseX){\n                    return (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n                }\n            });\n\n            this.datasets = [];\n\n            //Set up tooltip events on the chart\n            if (this.options.showTooltips){\n                helpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n                    var activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n                    this.eachPoints(function(point){\n                        point.restore(['fillColor', 'strokeColor']);\n                    });\n                    helpers.each(activePoints, function(activePoint){\n                        activePoint.fillColor = activePoint.highlightFill;\n                        activePoint.strokeColor = activePoint.highlightStroke;\n                    });\n                    this.showTooltip(activePoints);\n                });\n            }\n\n            //Iterate through each of the datasets, and build this into a property of the chart\n            helpers.each(data.datasets,function(dataset){\n\n                var datasetObject = {\n                    label : dataset.label || null,\n                    fillColor : dataset.fillColor,\n                    strokeColor : dataset.strokeColor,\n                    pointColor : dataset.pointColor,\n                    pointStrokeColor : dataset.pointStrokeColor,\n                    points : []\n                };\n\n                this.datasets.push(datasetObject);\n\n\n                helpers.each(dataset.data,function(dataPoint,index){\n                    //Add a new point for each piece of data, passing any required data to draw.\n                    datasetObject.points.push(new this.PointClass({\n                        value : dataPoint,\n                        label : data.labels[index],\n                        datasetLabel: dataset.label,\n                        strokeColor : dataset.pointStrokeColor,\n                        fillColor : dataset.pointColor,\n                        highlightFill : dataset.pointHighlightFill || dataset.pointColor,\n                        highlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n                    }));\n                },this);\n\n                this.buildScale(data.labels);\n\n\n                this.eachPoints(function(point, index){\n                    helpers.extend(point, {\n                        x: this.scale.calculateX(index),\n                        y: this.scale.endPoint\n                    });\n                    point.save();\n                }, this);\n\n            },this);\n\n\n            this.render();\n        },\n        update : function(){\n            this.scale.update();\n            // Reset any highlight colours before updating.\n            helpers.each(this.activeElements, function(activeElement){\n                activeElement.restore(['fillColor', 'strokeColor']);\n            });\n            this.eachPoints(function(point){\n                point.save();\n            });\n            this.render();\n        },\n        eachPoints : function(callback){\n            helpers.each(this.datasets,function(dataset){\n                helpers.each(dataset.points,callback,this);\n            },this);\n        },\n        getPointsAtEvent : function(e){\n            var pointsArray = [],\n                eventPosition = helpers.getRelativePosition(e);\n            helpers.each(this.datasets,function(dataset){\n                helpers.each(dataset.points,function(point){\n                    if (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n                });\n            },this);\n            return pointsArray;\n        },\n        buildScale : function(labels){\n            var self = this;\n\n            var dataTotal = function(){\n                var values = [];\n                self.eachPoints(function(point){\n                    values.push(point.value);\n                });\n\n                return values;\n            };\n\n            var scaleOptions = {\n                templateString : this.options.scaleLabel,\n                height : this.chart.height,\n                width : this.chart.width,\n                ctx : this.chart.ctx,\n                textColor : this.options.scaleFontColor,\n                fontSize : this.options.scaleFontSize,\n                fontStyle : this.options.scaleFontStyle,\n                fontFamily : this.options.scaleFontFamily,\n                valuesCount : labels.length,\n                beginAtZero : this.options.scaleBeginAtZero,\n                integersOnly : this.options.scaleIntegersOnly,\n                calculateYRange : function(currentHeight){\n                    var updatedRanges = helpers.calculateScaleRange(\n                        dataTotal(),\n                        currentHeight,\n                        this.fontSize,\n                        this.beginAtZero,\n                        this.integersOnly\n                    );\n                    helpers.extend(this, updatedRanges);\n                },\n                xLabels : labels,\n                font : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n                lineWidth : this.options.scaleLineWidth,\n                lineColor : this.options.scaleLineColor,\n                gridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n                gridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n                padding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n                showLabels : this.options.scaleShowLabels,\n                display : this.options.showScale\n            };\n\n            if (this.options.scaleOverride){\n                helpers.extend(scaleOptions, {\n                    calculateYRange: helpers.noop,\n                    steps: this.options.scaleSteps,\n                    stepValue: this.options.scaleStepWidth,\n                    min: this.options.scaleStartValue,\n                    max: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n                });\n            }\n\n\n            this.scale = new Chart.Scale(scaleOptions);\n        },\n        addData : function(valuesArray,label){\n            //Map the values array for each of the datasets\n\n            helpers.each(valuesArray,function(value,datasetIndex){\n                //Add a new point for each piece of data, passing any required data to draw.\n                this.datasets[datasetIndex].points.push(new this.PointClass({\n                    value : value,\n                    label : label,\n                    x: this.scale.calculateX(this.scale.valuesCount+1),\n                    y: this.scale.endPoint,\n                    strokeColor : this.datasets[datasetIndex].pointStrokeColor,\n                    fillColor : this.datasets[datasetIndex].pointColor\n                }));\n            },this);\n\n            this.scale.addXLabel(label);\n            //Then re-render the chart.\n            this.update();\n        },\n        removeData : function(){\n            this.scale.removeXLabel();\n            //Then re-render the chart.\n            helpers.each(this.datasets,function(dataset){\n                dataset.points.shift();\n            },this);\n            this.update();\n        },\n        reflow : function(){\n            var newScaleProps = helpers.extend({\n                height : this.chart.height,\n                width : this.chart.width\n            });\n            this.scale.update(newScaleProps);\n        },\n        draw : function(ease){\n            var easingDecimal = ease || 1;\n            this.clear();\n\n            var ctx = this.chart.ctx;\n\n            // Some helper methods for getting the next/prev points\n            var hasValue = function(item){\n                return item.value !== null;\n            },\n            nextPoint = function(point, collection, index){\n                return helpers.findNextWhere(collection, hasValue, index) || point;\n            },\n            previousPoint = function(point, collection, index){\n                return helpers.findPreviousWhere(collection, hasValue, index) || point;\n            };\n\n            this.scale.draw(easingDecimal);\n\n\n            helpers.each(this.datasets,function(dataset){\n                var pointsWithValues = helpers.where(dataset.points, hasValue);\n\n                //Transition each point first so that the line and point drawing isn't out of sync\n                //We can use this extra loop to calculate the control points of this dataset also in this loop\n\n                helpers.each(dataset.points, function(point, index){\n                    if (point.hasValue()){\n                        point.transition({\n                            y : this.scale.calculateY(point.value),\n                            x : this.scale.calculateX(index)\n                        }, easingDecimal);\n                    }\n                },this);\n\n\n                // Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n                // This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n                if (this.options.bezierCurve){\n                    helpers.each(pointsWithValues, function(point, index){\n                        var tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n                        point.controlPoints = helpers.splineCurve(\n                            previousPoint(point, pointsWithValues, index),\n                            point,\n                            nextPoint(point, pointsWithValues, index),\n                            tension\n                        );\n\n                        // Prevent the bezier going outside of the bounds of the graph\n\n                        // Cap puter bezier handles to the upper/lower scale bounds\n                        if (point.controlPoints.outer.y > this.scale.endPoint){\n                            point.controlPoints.outer.y = this.scale.endPoint;\n                        }\n                        else if (point.controlPoints.outer.y < this.scale.startPoint){\n                            point.controlPoints.outer.y = this.scale.startPoint;\n                        }\n\n                        // Cap inner bezier handles to the upper/lower scale bounds\n                        if (point.controlPoints.inner.y > this.scale.endPoint){\n                            point.controlPoints.inner.y = this.scale.endPoint;\n                        }\n                        else if (point.controlPoints.inner.y < this.scale.startPoint){\n                            point.controlPoints.inner.y = this.scale.startPoint;\n                        }\n                    },this);\n                }\n\n\n                //Draw the line between all the points\n                ctx.lineWidth = this.options.datasetStrokeWidth;\n                ctx.strokeStyle = dataset.strokeColor;\n                ctx.beginPath();\n\n                helpers.each(pointsWithValues, function(point, index){\n                    if (index === 0){\n                        ctx.moveTo(point.x, point.y);\n                    }\n                    else{\n                        if(this.options.bezierCurve){\n                            var previous = previousPoint(point, pointsWithValues, index);\n\n                            ctx.bezierCurveTo(\n                                previous.controlPoints.outer.x,\n                                previous.controlPoints.outer.y,\n                                point.controlPoints.inner.x,\n                                point.controlPoints.inner.y,\n                                point.x,\n                                point.y\n                            );\n                        }\n                        else{\n                            ctx.lineTo(point.x,point.y);\n                        }\n                    }\n                }, this);\n\n                ctx.stroke();\n\n                if (this.options.datasetFill && pointsWithValues.length > 0){\n                    //Round off the line by going to the base of the chart, back to the start, then fill.\n                    ctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n                    ctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n                    ctx.fillStyle = dataset.fillColor;\n                    ctx.closePath();\n                    ctx.fill();\n                }\n\n                //Now draw the points over the line\n                //A little inefficient double looping, but better than the line\n                //lagging behind the point positions\n                helpers.each(pointsWithValues,function(point){\n                    point.draw();\n                });\n            },this);\n        }\n    });\n\n\n}).call(this);\n(function(){\n    \"use strict\";\n\n    var root = this,\n        Chart = root.Chart,\n        //Cache a local reference to Chart.helpers\n        helpers = Chart.helpers;\n\n    var defaultConfig = {\n        //Boolean - Show a backdrop to the scale label\n        scaleShowLabelBackdrop : true,\n\n        //String - The colour of the label backdrop\n        scaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n        // Boolean - Whether the scale should begin at zero\n        scaleBeginAtZero : true,\n\n        //Number - The backdrop padding above & below the label in pixels\n        scaleBackdropPaddingY : 2,\n\n        //Number - The backdrop padding to the side of the label in pixels\n        scaleBackdropPaddingX : 2,\n\n        //Boolean - Show line for each value in the scale\n        scaleShowLine : true,\n\n        //Boolean - Stroke a line around each segment in the chart\n        segmentShowStroke : true,\n\n        //String - The colour of the stroke on each segement.\n        segmentStrokeColor : \"#fff\",\n\n        //Number - The width of the stroke value in pixels\n        segmentStrokeWidth : 2,\n\n        //Number - Amount of animation steps\n        animationSteps : 100,\n\n        //String - Animation easing effect.\n        animationEasing : \"easeOutBounce\",\n\n        //Boolean - Whether to animate the rotation of the chart\n        animateRotate : true,\n\n        //Boolean - Whether to animate scaling the chart from the centre\n        animateScale : false,\n\n        //String - A legend template\n        legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n    };\n\n\n    Chart.Type.extend({\n        //Passing in a name registers this chart in the Chart namespace\n        name: \"PolarArea\",\n        //Providing a defaults will also register the deafults in the chart namespace\n        defaults : defaultConfig,\n        //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n        //Config is automatically merged by the core of Chart.js, and is available at this.options\n        initialize:  function(data){\n            this.segments = [];\n            //Declare segment class as a chart instance specific class, so it can share props for this instance\n            this.SegmentArc = Chart.Arc.extend({\n                showStroke : this.options.segmentShowStroke,\n                strokeWidth : this.options.segmentStrokeWidth,\n                strokeColor : this.options.segmentStrokeColor,\n                ctx : this.chart.ctx,\n                innerRadius : 0,\n                x : this.chart.width/2,\n                y : this.chart.height/2\n            });\n            this.scale = new Chart.RadialScale({\n                display: this.options.showScale,\n                fontStyle: this.options.scaleFontStyle,\n                fontSize: this.options.scaleFontSize,\n                fontFamily: this.options.scaleFontFamily,\n                fontColor: this.options.scaleFontColor,\n                showLabels: this.options.scaleShowLabels,\n                showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n                backdropColor: this.options.scaleBackdropColor,\n                backdropPaddingY : this.options.scaleBackdropPaddingY,\n                backdropPaddingX: this.options.scaleBackdropPaddingX,\n                lineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n                lineColor: this.options.scaleLineColor,\n                lineArc: true,\n                width: this.chart.width,\n                height: this.chart.height,\n                xCenter: this.chart.width/2,\n                yCenter: this.chart.height/2,\n                ctx : this.chart.ctx,\n                templateString: this.options.scaleLabel,\n                valuesCount: data.length\n            });\n\n            this.updateScaleRange(data);\n\n            this.scale.update();\n\n            helpers.each(data,function(segment,index){\n                this.addData(segment,index,true);\n            },this);\n\n            //Set up tooltip events on the chart\n            if (this.options.showTooltips){\n                helpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n                    var activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n                    helpers.each(this.segments,function(segment){\n                        segment.restore([\"fillColor\"]);\n                    });\n                    helpers.each(activeSegments,function(activeSegment){\n                        activeSegment.fillColor = activeSegment.highlightColor;\n                    });\n                    this.showTooltip(activeSegments);\n                });\n            }\n\n            this.render();\n        },\n        getSegmentsAtEvent : function(e){\n            var segmentsArray = [];\n\n            var location = helpers.getRelativePosition(e);\n\n            helpers.each(this.segments,function(segment){\n                if (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n            },this);\n            return segmentsArray;\n        },\n        addData : function(segment, atIndex, silent){\n            var index = atIndex || this.segments.length;\n\n            this.segments.splice(index, 0, new this.SegmentArc({\n                fillColor: segment.color,\n                highlightColor: segment.highlight || segment.color,\n                label: segment.label,\n                value: segment.value,\n                outerRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n                circumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n                startAngle: Math.PI * 1.5\n            }));\n            if (!silent){\n                this.reflow();\n                this.update();\n            }\n        },\n        removeData: function(atIndex){\n            var indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n            this.segments.splice(indexToDelete, 1);\n            this.reflow();\n            this.update();\n        },\n        calculateTotal: function(data){\n            this.total = 0;\n            helpers.each(data,function(segment){\n                this.total += segment.value;\n            },this);\n            this.scale.valuesCount = this.segments.length;\n        },\n        updateScaleRange: function(datapoints){\n            var valuesArray = [];\n            helpers.each(datapoints,function(segment){\n                valuesArray.push(segment.value);\n            });\n\n            var scaleSizes = (this.options.scaleOverride) ?\n                {\n                    steps: this.options.scaleSteps,\n                    stepValue: this.options.scaleStepWidth,\n                    min: this.options.scaleStartValue,\n                    max: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n                } :\n                helpers.calculateScaleRange(\n                    valuesArray,\n                    helpers.min([this.chart.width, this.chart.height])/2,\n                    this.options.scaleFontSize,\n                    this.options.scaleBeginAtZero,\n                    this.options.scaleIntegersOnly\n                );\n\n            helpers.extend(\n                this.scale,\n                scaleSizes,\n                {\n                    size: helpers.min([this.chart.width, this.chart.height]),\n                    xCenter: this.chart.width/2,\n                    yCenter: this.chart.height/2\n                }\n            );\n\n        },\n        update : function(){\n            this.calculateTotal(this.segments);\n\n            helpers.each(this.segments,function(segment){\n                segment.save();\n            });\n            this.render();\n        },\n        reflow : function(){\n            helpers.extend(this.SegmentArc.prototype,{\n                x : this.chart.width/2,\n                y : this.chart.height/2\n            });\n            this.updateScaleRange(this.segments);\n            this.scale.update();\n\n            helpers.extend(this.scale,{\n                xCenter: this.chart.width/2,\n                yCenter: this.chart.height/2\n            });\n\n            helpers.each(this.segments, function(segment){\n                segment.update({\n                    outerRadius : this.scale.calculateCenterOffset(segment.value)\n                });\n            }, this);\n\n        },\n        draw : function(ease){\n            var easingDecimal = ease || 1;\n            //Clear & draw the canvas\n            this.clear();\n            helpers.each(this.segments,function(segment, index){\n                segment.transition({\n                    circumference : this.scale.getCircumference(),\n                    outerRadius : this.scale.calculateCenterOffset(segment.value)\n                },easingDecimal);\n\n                segment.endAngle = segment.startAngle + segment.circumference;\n\n                // If we've removed the first segment we need to set the first one to\n                // start at the top.\n                if (index === 0){\n                    segment.startAngle = Math.PI * 1.5;\n                }\n\n                //Check to see if it's the last segment, if not get the next and update the start angle\n                if (index < this.segments.length - 1){\n                    this.segments[index+1].startAngle = segment.endAngle;\n                }\n                segment.draw();\n            }, this);\n            this.scale.draw();\n        }\n    });\n\n}).call(this);\n(function(){\n    \"use strict\";\n\n    var root = this,\n        Chart = root.Chart,\n        helpers = Chart.helpers;\n\n\n\n    Chart.Type.extend({\n        name: \"Radar\",\n        defaults:{\n            //Boolean - Whether to show lines for each scale point\n            scaleShowLine : true,\n\n            //Boolean - Whether we show the angle lines out of the radar\n            angleShowLineOut : true,\n\n            //Boolean - Whether to show labels on the scale\n            scaleShowLabels : false,\n\n            // Boolean - Whether the scale should begin at zero\n            scaleBeginAtZero : true,\n\n            //String - Colour of the angle line\n            angleLineColor : \"rgba(0,0,0,.1)\",\n\n            //Number - Pixel width of the angle line\n            angleLineWidth : 1,\n\n            //String - Point label font declaration\n            pointLabelFontFamily : \"'Arial'\",\n\n            //String - Point label font weight\n            pointLabelFontStyle : \"normal\",\n\n            //Number - Point label font size in pixels\n            pointLabelFontSize : 10,\n\n            //String - Point label font colour\n            pointLabelFontColor : \"#666\",\n\n            //Boolean - Whether to show a dot for each point\n            pointDot : true,\n\n            //Number - Radius of each point dot in pixels\n            pointDotRadius : 3,\n\n            //Number - Pixel width of point dot stroke\n            pointDotStrokeWidth : 1,\n\n            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n            pointHitDetectionRadius : 20,\n\n            //Boolean - Whether to show a stroke for datasets\n            datasetStroke : true,\n\n            //Number - Pixel width of dataset stroke\n            datasetStrokeWidth : 2,\n\n            //Boolean - Whether to fill the dataset with a colour\n            datasetFill : true,\n\n            //String - A legend template\n            legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n        },\n\n        initialize: function(data){\n            this.PointClass = Chart.Point.extend({\n                strokeWidth : this.options.pointDotStrokeWidth,\n                radius : this.options.pointDotRadius,\n                display: this.options.pointDot,\n                hitDetectionRadius : this.options.pointHitDetectionRadius,\n                ctx : this.chart.ctx\n            });\n\n            this.datasets = [];\n\n            this.buildScale(data);\n\n            //Set up tooltip events on the chart\n            if (this.options.showTooltips){\n                helpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n                    var activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n                    this.eachPoints(function(point){\n                        point.restore(['fillColor', 'strokeColor']);\n                    });\n                    helpers.each(activePointsCollection, function(activePoint){\n                        activePoint.fillColor = activePoint.highlightFill;\n                        activePoint.strokeColor = activePoint.highlightStroke;\n                    });\n\n                    this.showTooltip(activePointsCollection);\n                });\n            }\n\n            //Iterate through each of the datasets, and build this into a property of the chart\n            helpers.each(data.datasets,function(dataset){\n\n                var datasetObject = {\n                    label: dataset.label || null,\n                    fillColor : dataset.fillColor,\n                    strokeColor : dataset.strokeColor,\n                    pointColor : dataset.pointColor,\n                    pointStrokeColor : dataset.pointStrokeColor,\n                    points : []\n                };\n\n                this.datasets.push(datasetObject);\n\n                helpers.each(dataset.data,function(dataPoint,index){\n                    //Add a new point for each piece of data, passing any required data to draw.\n                    var pointPosition;\n                    if (!this.scale.animation){\n                        pointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n                    }\n                    datasetObject.points.push(new this.PointClass({\n                        value : dataPoint,\n                        label : data.labels[index],\n                        datasetLabel: dataset.label,\n                        x: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n                        y: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n                        strokeColor : dataset.pointStrokeColor,\n                        fillColor : dataset.pointColor,\n                        highlightFill : dataset.pointHighlightFill || dataset.pointColor,\n                        highlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n                    }));\n                },this);\n\n            },this);\n\n            this.render();\n        },\n        eachPoints : function(callback){\n            helpers.each(this.datasets,function(dataset){\n                helpers.each(dataset.points,callback,this);\n            },this);\n        },\n\n        getPointsAtEvent : function(evt){\n            var mousePosition = helpers.getRelativePosition(evt),\n                fromCenter = helpers.getAngleFromPoint({\n                    x: this.scale.xCenter,\n                    y: this.scale.yCenter\n                }, mousePosition);\n\n            var anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n                pointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n                activePointsCollection = [];\n\n            // If we're at the top, make the pointIndex 0 to get the first of the array.\n            if (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n                pointIndex = 0;\n            }\n\n            if (fromCenter.distance <= this.scale.drawingArea){\n                helpers.each(this.datasets, function(dataset){\n                    activePointsCollection.push(dataset.points[pointIndex]);\n                });\n            }\n\n            return activePointsCollection;\n        },\n\n        buildScale : function(data){\n            this.scale = new Chart.RadialScale({\n                display: this.options.showScale,\n                fontStyle: this.options.scaleFontStyle,\n                fontSize: this.options.scaleFontSize,\n                fontFamily: this.options.scaleFontFamily,\n                fontColor: this.options.scaleFontColor,\n                showLabels: this.options.scaleShowLabels,\n                showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n                backdropColor: this.options.scaleBackdropColor,\n                backdropPaddingY : this.options.scaleBackdropPaddingY,\n                backdropPaddingX: this.options.scaleBackdropPaddingX,\n                lineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n                lineColor: this.options.scaleLineColor,\n                angleLineColor : this.options.angleLineColor,\n                angleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n                // Point labels at the edge of each line\n                pointLabelFontColor : this.options.pointLabelFontColor,\n                pointLabelFontSize : this.options.pointLabelFontSize,\n                pointLabelFontFamily : this.options.pointLabelFontFamily,\n                pointLabelFontStyle : this.options.pointLabelFontStyle,\n                height : this.chart.height,\n                width: this.chart.width,\n                xCenter: this.chart.width/2,\n                yCenter: this.chart.height/2,\n                ctx : this.chart.ctx,\n                templateString: this.options.scaleLabel,\n                labels: data.labels,\n                valuesCount: data.datasets[0].data.length\n            });\n\n            this.scale.setScaleSize();\n            this.updateScaleRange(data.datasets);\n            this.scale.buildYLabels();\n        },\n        updateScaleRange: function(datasets){\n            var valuesArray = (function(){\n                var totalDataArray = [];\n                helpers.each(datasets,function(dataset){\n                    if (dataset.data){\n                        totalDataArray = totalDataArray.concat(dataset.data);\n                    }\n                    else {\n                        helpers.each(dataset.points, function(point){\n                            totalDataArray.push(point.value);\n                        });\n                    }\n                });\n                return totalDataArray;\n            })();\n\n\n            var scaleSizes = (this.options.scaleOverride) ?\n                {\n                    steps: this.options.scaleSteps,\n                    stepValue: this.options.scaleStepWidth,\n                    min: this.options.scaleStartValue,\n                    max: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n                } :\n                helpers.calculateScaleRange(\n                    valuesArray,\n                    helpers.min([this.chart.width, this.chart.height])/2,\n                    this.options.scaleFontSize,\n                    this.options.scaleBeginAtZero,\n                    this.options.scaleIntegersOnly\n                );\n\n            helpers.extend(\n                this.scale,\n                scaleSizes\n            );\n\n        },\n        addData : function(valuesArray,label){\n            //Map the values array for each of the datasets\n            this.scale.valuesCount++;\n            helpers.each(valuesArray,function(value,datasetIndex){\n                var pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n                this.datasets[datasetIndex].points.push(new this.PointClass({\n                    value : value,\n                    label : label,\n                    x: pointPosition.x,\n                    y: pointPosition.y,\n                    strokeColor : this.datasets[datasetIndex].pointStrokeColor,\n                    fillColor : this.datasets[datasetIndex].pointColor\n                }));\n            },this);\n\n            this.scale.labels.push(label);\n\n            this.reflow();\n\n            this.update();\n        },\n        removeData : function(){\n            this.scale.valuesCount--;\n            this.scale.labels.shift();\n            helpers.each(this.datasets,function(dataset){\n                dataset.points.shift();\n            },this);\n            this.reflow();\n            this.update();\n        },\n        update : function(){\n            this.eachPoints(function(point){\n                point.save();\n            });\n            this.reflow();\n            this.render();\n        },\n        reflow: function(){\n            helpers.extend(this.scale, {\n                width : this.chart.width,\n                height: this.chart.height,\n                size : helpers.min([this.chart.width, this.chart.height]),\n                xCenter: this.chart.width/2,\n                yCenter: this.chart.height/2\n            });\n            this.updateScaleRange(this.datasets);\n            this.scale.setScaleSize();\n            this.scale.buildYLabels();\n        },\n        draw : function(ease){\n            var easeDecimal = ease || 1,\n                ctx = this.chart.ctx;\n            this.clear();\n            this.scale.draw();\n\n            helpers.each(this.datasets,function(dataset){\n\n                //Transition each point first so that the line and point drawing isn't out of sync\n                helpers.each(dataset.points,function(point,index){\n                    if (point.hasValue()){\n                        point.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n                    }\n                },this);\n\n\n\n                //Draw the line between all the points\n                ctx.lineWidth = this.options.datasetStrokeWidth;\n                ctx.strokeStyle = dataset.strokeColor;\n                ctx.beginPath();\n                helpers.each(dataset.points,function(point,index){\n                    if (index === 0){\n                        ctx.moveTo(point.x,point.y);\n                    }\n                    else{\n                        ctx.lineTo(point.x,point.y);\n                    }\n                },this);\n                ctx.closePath();\n                ctx.stroke();\n\n                ctx.fillStyle = dataset.fillColor;\n                ctx.fill();\n\n                //Now draw the points over the line\n                //A little inefficient double looping, but better than the line\n                //lagging behind the point positions\n                helpers.each(dataset.points,function(point){\n                    if (point.hasValue()){\n                        point.draw();\n                    }\n                });\n\n            },this);\n\n        }\n\n    });\n\n\n\n\n\n}).call(this);\n\n});"],"sourceRoot":"/source/"}