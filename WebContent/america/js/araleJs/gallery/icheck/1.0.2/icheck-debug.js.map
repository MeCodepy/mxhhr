{"version":3,"sources":["gallery/icheck/1.0.2/icheck-debug.js"],"names":["$","operate","input","direct","method","node","state","test","_indeterminate","_disabled","_checked","active","_update","checked","disabled","indeterminate","attr","_determinate","on","off","each","_callback","_type","_radio","keep","parent","callback","_unchecked","regular","option","capitalize","specific","name","form","closest","inputs","length","find","this","data","_iCheck","callbacks","_cursor","_iCheckHelper","css","_add","_remove","tidy","html","s","unwrap","_label","id","add","o","string","charAt","toUpperCase","slice","_checkbox","_click","_touch","_mobile","navigator","userAgent","fn","options","fire","handle","stack","walker","object","self","is","toLowerCase","isFunction","settings","extend","checkedClass","disabledClass","indeterminateClass","labelHover","selector","hoverClass","focusClass","activeClass","labelHoverClass","area","increaseArea","replace","helper","offset","size","layer","position","top","left","display","width","height","margin","padding","background","border","opacity","hide","visibility","className","checkboxClass","radioClass","label","aria","ariaID","Math","random","toString","substr","wrap","append","insert","appendTo","inheritClass","inheritID","event","type","item","target","stopPropagation","key","keyCode","toggle","window","jQuery","Zepto"],"mappings":"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","file":"gallery/icheck/1.0.2/icheck-debug.js","sourcesContent":["/*!\n * iCheck v1.0.2, http://git.io/arlzeA\n * ===================================\n * Powerful jQuery and Zepto plugin for checkboxes and radio buttons customization\n *\n * (c) 2013 Damir Sultanov, http://fronteed.com\n * MIT Licensed\n */\n\n(function($) {\n\n  // Cached vars\n  var _iCheck = 'iCheck',\n    _iCheckHelper = _iCheck + '-helper',\n    _checkbox = 'checkbox',\n    _radio = 'radio',\n    _checked = 'checked',\n    _unchecked = 'un' + _checked,\n    _disabled = 'disabled',\n    _determinate = 'determinate',\n    _indeterminate = 'in' + _determinate,\n    _update = 'update',\n    _type = 'type',\n    _click = 'click',\n    _touch = 'touchbegin.i touchend.i',\n    _add = 'addClass',\n    _remove = 'removeClass',\n    _callback = 'trigger',\n    _label = 'label',\n    _cursor = 'cursor',\n    _mobile = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini|silk/i.test(navigator.userAgent);\n\n  // Plugin init\n  $.fn[_iCheck] = function(options, fire) {\n\n    // Walker\n    var handle = 'input[type=\"' + _checkbox + '\"], input[type=\"' + _radio + '\"]',\n      stack = $(),\n      walker = function(object) {\n        object.each(function() {\n          var self = $(this);\n\n          if (self.is(handle)) {\n            stack = stack.add(self);\n          } else {\n            stack = stack.add(self.find(handle));\n          }\n        });\n      };\n\n    // Check if we should operate with some method\n    if (/^(check|uncheck|toggle|indeterminate|determinate|disable|enable|update|destroy)$/i.test(options)) {\n\n      // Normalize method's name\n      options = options.toLowerCase();\n\n      // Find checkboxes and radio buttons\n      walker(this);\n\n      return stack.each(function() {\n        var self = $(this);\n\n        if (options == 'destroy') {\n          tidy(self, 'ifDestroyed');\n        } else {\n          operate(self, true, options);\n        }\n\n        // Fire method's callback\n        if ($.isFunction(fire)) {\n          fire();\n        }\n      });\n\n    // Customization\n    } else if (typeof options == 'object' || !options) {\n\n      // Check if any options were passed\n      var settings = $.extend({\n          checkedClass: _checked,\n          disabledClass: _disabled,\n          indeterminateClass: _indeterminate,\n          labelHover: true\n        }, options),\n\n        selector = settings.handle,\n        hoverClass = settings.hoverClass || 'hover',\n        focusClass = settings.focusClass || 'focus',\n        activeClass = settings.activeClass || 'active',\n        labelHover = !!settings.labelHover,\n        labelHoverClass = settings.labelHoverClass || 'hover',\n\n        // Setup clickable area\n        area = ('' + settings.increaseArea).replace('%', '') | 0;\n\n      // Selector limit\n      if (selector == _checkbox || selector == _radio) {\n        handle = 'input[type=\"' + selector + '\"]';\n      }\n\n      // Clickable area limit\n      if (area < -50) {\n        area = -50;\n      }\n\n      // Walk around the selector\n      walker(this);\n\n      return stack.each(function() {\n        var self = $(this);\n\n        // If already customized\n        tidy(self);\n\n        var node = this,\n          id = node.id,\n\n          // Layer styles\n          offset = -area + '%',\n          size = 100 + (area * 2) + '%',\n          layer = {\n            position: 'absolute',\n            top: offset,\n            left: offset,\n            display: 'block',\n            width: size,\n            height: size,\n            margin: 0,\n            padding: 0,\n            background: '#fff',\n            border: 0,\n            opacity: 0\n          },\n\n          // Choose how to hide input\n          hide = _mobile ? {\n            position: 'absolute',\n            visibility: 'hidden'\n          } : area ? layer : {\n            position: 'absolute',\n            opacity: 0\n          },\n\n          // Get proper class\n          className = node[_type] == _checkbox ? settings.checkboxClass || 'i' + _checkbox : settings.radioClass || 'i' + _radio,\n\n          // Find assigned labels\n          label = $(_label + '[for=\"' + id + '\"]').add(self.closest(_label)),\n\n          // Check ARIA option\n          aria = !!settings.aria,\n\n          // Set ARIA placeholder\n          ariaID = _iCheck + '-' + Math.random().toString(36).substr(2,6),\n\n          // Parent & helper\n          parent = '<div class=\"' + className + '\" ' + (aria ? 'role=\"' + node[_type] + '\" ' : ''),\n          helper;\n\n        // Set ARIA \"labelledby\"\n        if (aria) {\n          label.each(function() {\n            parent += 'aria-labelledby=\"';\n\n            if (this.id) {\n              parent += this.id;\n            } else {\n              this.id = ariaID;\n              parent += ariaID;\n            }\n\n            parent += '\"';\n          });\n        }\n\n        // Wrap input\n        parent = self.wrap(parent + '/>')[_callback]('ifCreated').parent().append(settings.insert);\n\n        // Layer addition\n        helper = $('<ins class=\"' + _iCheckHelper + '\"/>').css(layer).appendTo(parent);\n\n        // Finalize customization\n        self.data(_iCheck, {o: settings, s: self.attr('style')}).css(hide);\n        !!settings.inheritClass && parent[_add](node.className || '');\n        !!settings.inheritID && id && parent.attr('id', _iCheck + '-' + id);\n        parent.css('position') == 'static' && parent.css('position', 'relative');\n        operate(self, true, _update);\n\n        // Label events\n        if (label.length) {\n          label.on(_click + '.i mouseover.i mouseout.i ' + _touch, function(event) {\n            var type = event[_type],\n              item = $(this);\n\n            // Do nothing if input is disabled\n            if (!node[_disabled]) {\n\n              // Click\n              if (type == _click) {\n                if ($(event.target).is('a')) {\n                  return;\n                }\n                operate(self, false, true);\n\n              // Hover state\n              } else if (labelHover) {\n\n                // mouseout|touchend\n                if (/ut|nd/.test(type)) {\n                  parent[_remove](hoverClass);\n                  item[_remove](labelHoverClass);\n                } else {\n                  parent[_add](hoverClass);\n                  item[_add](labelHoverClass);\n                }\n              }\n\n              if (_mobile) {\n                event.stopPropagation();\n              } else {\n                return false;\n              }\n            }\n          });\n        }\n\n        // Input events\n        self.on(_click + '.i focus.i blur.i keyup.i keydown.i keypress.i', function(event) {\n          var type = event[_type],\n            key = event.keyCode;\n\n          // Click\n          if (type == _click) {\n            return false;\n\n          // Keydown\n          } else if (type == 'keydown' && key == 32) {\n            if (!(node[_type] == _radio && node[_checked])) {\n              if (node[_checked]) {\n                off(self, _checked);\n              } else {\n                on(self, _checked);\n              }\n            }\n\n            return false;\n\n          // Keyup\n          } else if (type == 'keyup' && node[_type] == _radio) {\n            !node[_checked] && on(self, _checked);\n\n          // Focus/blur\n          } else if (/us|ur/.test(type)) {\n            parent[type == 'blur' ? _remove : _add](focusClass);\n          }\n        });\n\n        // Helper events\n        helper.on(_click + ' mousedown mouseup mouseover mouseout ' + _touch, function(event) {\n          var type = event[_type],\n\n            // mousedown|mouseup\n            toggle = /wn|up/.test(type) ? activeClass : hoverClass;\n\n          // Do nothing if input is disabled\n          if (!node[_disabled]) {\n\n            // Click\n            if (type == _click) {\n              operate(self, false, true);\n\n            // Active and hover states\n            } else {\n\n              // State is on\n              if (/wn|er|in/.test(type)) {\n\n                // mousedown|mouseover|touchbegin\n                parent[_add](toggle);\n\n              // State is off\n              } else {\n                parent[_remove](toggle + ' ' + activeClass);\n              }\n\n              // Label hover\n              if (label.length && labelHover && toggle == hoverClass) {\n\n                // mouseout|touchend\n                label[/ut|nd/.test(type) ? _remove : _add](labelHoverClass);\n              }\n            }\n\n            if (_mobile) {\n              event.stopPropagation();\n            } else {\n              return false;\n            }\n          }\n        });\n      });\n    } else {\n      return this;\n    }\n  };\n\n  // Do something with inputs\n  function operate(input, direct, method) {\n    var node = input[0],\n      state = /er/.test(method) ? _indeterminate : /bl/.test(method) ? _disabled : _checked,\n      active = method == _update ? {\n        checked: node[_checked],\n        disabled: node[_disabled],\n        indeterminate: input.attr(_indeterminate) == 'true' || input.attr(_determinate) == 'false'\n      } : node[state];\n\n    // Check, disable or indeterminate\n    if (/^(ch|di|in)/.test(method) && !active) {\n      on(input, state);\n\n    // Uncheck, enable or determinate\n    } else if (/^(un|en|de)/.test(method) && active) {\n      off(input, state);\n\n    // Update\n    } else if (method == _update) {\n\n      // Handle states\n      for (var each in active) {\n        if (active[each]) {\n          on(input, each, true);\n        } else {\n          off(input, each, true);\n        }\n      }\n\n    } else if (!direct || method == 'toggle') {\n\n      // Helper or label was clicked\n      if (!direct) {\n        input[_callback]('ifClicked');\n      }\n\n      // Toggle checked state\n      if (active) {\n        if (node[_type] !== _radio) {\n          off(input, state);\n        }\n      } else {\n        on(input, state);\n      }\n    }\n  }\n\n  // Add checked, disabled or indeterminate state\n  function on(input, state, keep) {\n    var node = input[0],\n      parent = input.parent(),\n      checked = state == _checked,\n      indeterminate = state == _indeterminate,\n      disabled = state == _disabled,\n      callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n      regular = option(input, callback + capitalize(node[_type])),\n      specific = option(input, state + capitalize(node[_type]));\n\n    // Prevent unnecessary actions\n    if (node[state] !== true) {\n\n      // Toggle assigned radio buttons\n      if (!keep && state == _checked && node[_type] == _radio && node.name) {\n        var form = input.closest('form'),\n          inputs = 'input[name=\"' + node.name + '\"]';\n\n        inputs = form.length ? form.find(inputs) : $(inputs);\n\n        inputs.each(function() {\n          if (this !== node && $(this).data(_iCheck)) {\n            off($(this), state);\n          }\n        });\n      }\n\n      // Indeterminate state\n      if (indeterminate) {\n\n        // Add indeterminate state\n        node[state] = true;\n\n        // Remove checked state\n        if (node[_checked]) {\n          off(input, _checked, 'force');\n        }\n\n      // Checked or disabled state\n      } else {\n\n        // Add checked or disabled state\n        if (!keep) {\n          node[state] = true;\n        }\n\n        // Remove indeterminate state\n        if (checked && node[_indeterminate]) {\n          off(input, _indeterminate, false);\n        }\n      }\n\n      // Trigger callbacks\n      callbacks(input, checked, state, keep);\n    }\n\n    // Add proper cursor\n    if (node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'default');\n    }\n\n    // Add state class\n    parent[_add](specific || option(input, state) || '');\n\n    // Set ARIA attribute\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'true');\n    }\n\n    // Remove regular state class\n    parent[_remove](regular || option(input, callback) || '');\n  }\n\n  // Remove checked, disabled or indeterminate state\n  function off(input, state, keep) {\n    var node = input[0],\n      parent = input.parent(),\n      checked = state == _checked,\n      indeterminate = state == _indeterminate,\n      disabled = state == _disabled,\n      callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n      regular = option(input, callback + capitalize(node[_type])),\n      specific = option(input, state + capitalize(node[_type]));\n\n    // Prevent unnecessary actions\n    if (node[state] !== false) {\n\n      // Toggle state\n      if (indeterminate || !keep || keep == 'force') {\n        node[state] = false;\n      }\n\n      // Trigger callbacks\n      callbacks(input, checked, callback, keep);\n    }\n\n    // Add proper cursor\n    if (!node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'pointer');\n    }\n\n    // Remove state class\n    parent[_remove](specific || option(input, state) || '');\n\n    // Set ARIA attribute\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'false');\n    }\n\n    // Add regular state class\n    parent[_add](regular || option(input, callback) || '');\n  }\n\n  // Remove all traces\n  function tidy(input, callback) {\n    if (input.data(_iCheck)) {\n\n      // Remove everything except input\n      input.parent().html(input.attr('style', input.data(_iCheck).s || ''));\n\n      // Callback\n      if (callback) {\n        input[_callback](callback);\n      }\n\n      // Unbind events\n      input.off('.i').unwrap();\n      $(_label + '[for=\"' + input[0].id + '\"]').add(input.closest(_label)).off('.i');\n    }\n  }\n\n  // Get some option\n  function option(input, state, regular) {\n    if (input.data(_iCheck)) {\n      return input.data(_iCheck).o[state + (regular ? '' : 'Class')];\n    }\n  }\n\n  // Capitalize some string\n  function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  // Executable handlers\n  function callbacks(input, checked, callback, keep) {\n    if (!keep) {\n      if (checked) {\n        input[_callback]('ifToggled');\n      }\n\n      input[_callback]('ifChanged')[_callback]('if' + capitalize(callback));\n    }\n  }\n})(window.jQuery || window.Zepto);\n"],"sourceRoot":"/source/"}